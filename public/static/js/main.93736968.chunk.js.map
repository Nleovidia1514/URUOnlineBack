{"version":3,"sources":["core/components/controls/Input.tsx","store/actions/auth.actions.ts","hoc/MainLayout/Navbar/Navbar.tsx","hoc/MainLayout/SideNav/SideNav.tsx","store/actions/post.actions.ts","store/actions/course.action.ts","store/actions/core.actions.ts","store/actions/exam.actions.ts","posts/PostList/PostListFooter/PostListFooter.tsx","posts/PostList/PostListHeader/PostListHeader.tsx","posts/PostList/PostSummary/PostSummary.tsx","posts/PostList/PostList.tsx","core/components/controls/DynamicTag.tsx","core/environment.ts","posts/CreatePostPage/PostEditor/PostEditor.tsx","posts/CreatePostPage/CreatePostPage.tsx","posts/ViewPostPage/AddComment/AddComment.tsx","posts/ViewPostPage/PostCommentsList/PostComment/PostComment.tsx","posts/ViewPostPage/PostCommentsList/PostCommentList.tsx","core/components/ConfirmModal.tsx","posts/ViewPostPage/ViewPostHeader/ViewPostHeader.tsx","posts/ViewPostPage/ViewPostPage.tsx","courses/CoursesList/CourseSummary/CourseSummary.tsx","core/components/controls/ImageUploader.tsx","courses/CoursesList/CreateCourseModal/CreateCourseModal.tsx","courses/CoursesList/CoursesList.tsx","courses/CourseView/CourseArchives/CourseArchives.tsx","core/components/controls/FileUploader.tsx","exams/ExamViewer/ExamQuestion/ExamQuestion.tsx","exams/ExamViewer/ExamViewer.tsx","courses/CourseView/CourseAssignations/AssignationDetail/CreateDeliveredExamModal/CreateDeliveredExamModal.tsx","courses/CourseView/CourseAssignations/AssignationDetail/CreateDeliveredModal/CreateDeliveredModal.tsx","courses/CourseView/CourseAssignations/AssignationDetail/DeliveredDetailModal/DeliveredDetailModal.tsx","courses/CourseView/CourseAssignations/AssignationDetail/AssignationDetail.tsx","courses/CourseView/CourseAssignations/Assignation/Assignation.tsx","courses/CourseView/CourseAssignations/CreateAssignationModal/CreateAssignationModal.tsx","courses/CourseView/CourseAssignations/AssignationsList/AssignationsList.tsx","courses/CourseView/CourseAssignations/CourseAssignations.tsx","courses/CourseView/CourseFeed/CourseFeed.tsx","courses/CourseView/CourseGrades/AlumnGradesTable/AlumnGradesTable.tsx","courses/CourseView/CourseGrades/CreateGradeModal/CreateGradeModal.tsx","courses/CourseView/CourseGrades/ProfessorGradesTable/ProfessorGradesTable.tsx","courses/CourseView/CourseGrades/CourseGrades.tsx","core/components/controls/UsersAutocomplete.tsx","courses/CourseView/CourseMembers/Member/Member.tsx","courses/CourseView/CourseMembers/ManageMembersModal/ManageMembersModal.tsx","courses/CourseView/CourseMembers/CourseMembers.tsx","courses/CourseView/CourseView.tsx","auth/VerifyCodeModal/VerifyCodeModal.tsx","profile/BasicInfoForm/BasicInfoForm.tsx","profile/ExternalLinksForm/ExternalLinksForm.tsx","profile/SecurityForm/SecurityForm.tsx","profile/ProfileView.tsx","exams/CreateExamModal/CreateExamModal.tsx","exams/ExamsList/ExamsList.tsx","exams/ExamView.tsx","hoc/MainLayout/MainLayout.tsx","auth/LoginForm/LoginForm.tsx","auth/registerForm/RegisterForm.tsx","auth/PasswordRecoveryForm/PasswordRecoveryForm.tsx","hoc/AuthLayout/AuthLayout.tsx","App.tsx","serviceWorker.ts","store/reducers/auth.reducer.ts","store/reducers/course.reducer.ts","store/reducers/general.reducer.ts","store/reducers/posts.reducer.ts","store/reducers/exams.reducer.ts","store/reducers/index.ts","core/axios.ts","store/effects/auth.effects.ts","store/effects/course.effects.ts","store/effects/exam.effects.ts","store/effects/general.effects.ts","store/effects/post.effects.ts","store/effects/index.ts","index.tsx"],"names":["ControlTypesEnum","CHECK_AUTHENTICATED","checkAuthenticatedAction","type","CHECK_AUTHENTICATED_SUCESS","checkAuthenticatedSuccessAction","user","payload","CHECK_AUTHENTICATED_FAIL","checkAuthenticatedFailAction","LOGIN_USER","loginUserAction","LOGIN_USER_SUCCESS","loginUserSuccessAction","LOGIN_USER_FAIL","loginUserFailAction","error","RESET_VERIFIED","resetVerifiedAction","SEND_VERIFICATION_CODE","sendVerificationCodeAction","SEND_VERIFICATION_CODE_SUCCESS","sendVerificationCodeSuccessAction","VERIFY_CODE","verifiyCodeAction","VERIFY_CODE_SUCCESS","verifyCodeSuccessAction","REGISTER_USER","registerUserAction","REGISTER_USER_SUCCESS","registerUserSuccessAction","UPDATE_USER","updateUserAction","UPDATE_USER_SUCCESS","updateUserSuccessAction","LOGOUT_USER","logoutUserAction","LOGOUT_USER_SUCCESS","logoutUserSuccessAction","SEND_RECOVERY_CODE","sendRecoveryCodeAction","identification","SEND_RECOVERY_CODE_SUCCESS","sendRecoveryCodeSuccessAction","SUBMIT_RECOVERY_CODE","submitRecoveryCodeAction","SUBMIT_RECOVERY_CODE_SUCCESS","submitRecoveryCodeSuccessAction","RESET_PASSWORD","resetPasswordAction","RESET_PASSWORD_SUCCESS","resetPasswordSuccessAction","SEARCH_USERS","searchUsersAction","SEARCH_USERS_SUCCESS","searchUsersActionSuccess","AUTH_ACTION_FAIL","authActionFail","props","dispatch","useDispatch","history","useHistory","match","useRouteMatch","currentUser","useSelector","state","auth","Navbar","Header","className","Body","Nav","onSelect","pullRight","justified","Dropdown","title","name","Item","eventKey","onClick","push","path","Container","style","display","alignItems","Avatar","src","profileImg","useState","expanded","setExpanded","width","height","Sidenav","activeKey","handleSelect","icon","Icon","IconButton","size","SEARCH_POSTS","searchPostsAction","page","filter","SEARCH_POSTS_SUCCESS","searchPostsSuccessAction","SEARCH_POST_BY_ID","searchPostByIdAction","SEARCH_POST_BY_ID_SUCCESS","searchPostByIdSuccessAction","CREATE_POST","createPostAction","CREATE_POST_SUCESS","createPostSuccessAction","UPDATE_POST","updatePostAction","UPDATE_POST_SUCCESS","updatePostSuccessAction","DELETE_POST","deletePostAction","DELETE_POST_SUCCESS","deletePostSuccessAction","UPVOTE_POST","upvotePostAction","UPVOTE_POST_SUCCESS","upvotePostSuccessAction","DOWNVOTE_POST","downvotePostAction","DOWNVOTE_POST_SUCCESS","downvotePostSuccessAction","SEARCH_COMMENTS","searchCommentsAction","SEARCH_COMMENTS_SUCCESS","searchCommentsSuccessAction","CREATE_COMMENT","createCommentAction","CREATE_COMMENT_SUCCESS","createCommentSuccessAction","UPVOTE_COMMENT","upvoteCommentAction","UPVOTE_COMMENT_SUCCESS","upvoteCommentSuccessAction","DOWNVOTE_COMMENT","downvoteCommentAction","DOWNVOTE_COMMENT_SUCCESS","downvoteCommentSuccessAction","POST_ACTION_FAIL","postFailedAction","SEARCH_COURSE_BY_ID","searchCourseByIdAction","SEARCH_COURSE_BY_ID_SUCCESS","searchCourseByIdSuccessAction","SEARCH_COURSES","searchCoursesAction","SEARCH_COURSES_SUCCESS","searchCoursesSuccessAction","CREATE_COURSE","createCourseAction","CREATE_COURSE_SUCCESS","createCourseSuccessAction","ADD_COURSE_MEMBER","addCourseMemberAction","ADD_COURSE_MEMBER_SUCCESS","addCourseMemberSucessAction","REMOVE_COURSE_MEMBER","removeCourseMemberAction","REMOVE_COURSE_MEMBER_SUCCESS","removeCourseMemberSuccessAction","SEARCH_COURSE_ASSIGNATIONS","searchCourseAssignationsAction","SEARCH_SINGLE_ASSIGNATION","searchSingleAssignationAction","SEARCH_SINGLE_ASSIGNATION_SUCCESS","searchSingleAssignationSuccessAction","DELETE_ASSIGNATION","deleteAssignationAction","DELETE_ASSIGNATION_SUCCESS","deleteAssignationSuccessAction","SEARCH_COURSE_ASSIGNATIONS_SUCCESS","searchCourseAssignationsSuccessAction","CREATE_COURSE_ASSIGNATION","createCourseAssignationAction","CREATE_COURSE_ASSIGNATION_SUCCESS","createCourseAssignationSuccessAction","CREATE_DELIVERED_ASSIGNATION","createDeliveredAssignationAction","CREATE_DELIVERED_ASSIGNATION_SUCCESS","createDeliveredAssignationSuccessAction","DELETE_DELIVERED_ASSIGNATION","deleteDeliveredAssignationAction","DELETE_DELIVERED_ASSIGNATION_SUCCESS","deleteDeliveredAssignationSuccessAction","CREATE_COURSE_GRADE","createCourseGradeAction","CREATE_COURSE_GRADE_SUCCESS","createCourseGradeSuccessAction","GET_COURSE_GRADES","getCourseGradesAction","GET_COURSE_GRADES_SUCCESS","getCourseGradesSuccessAction","GET_ALL_PROFESSOR_GRADES","getAllProfessorGradesAction","GET_ALL_PROFESSOR_GRADES_SUCCESS","getAllProfessorGradesSuccessAction","UPDATE_ALUMN_GRADE","updateAlumnGradeAction","UPDATE_ALUMN_GRADE_SUCCESS","updateAlumnGradeSuccessAction","CREATE_ALUMN_GRADE","createAlumnGradeAction","CREATE_ALUMN_GRADE_SUCCESS","createAlumnGradeSuccessAction","GET_ALUMN_GRADES","getAlumnGradesAction","GET_ALUMN_GRADES_SUCCESS","getAlumnGradesSuccessAction","GET_COURSE_ATTACHMENTS","getAllCourseAttachmentsAction","GET_COURSE_ATTACHMENTS_SUCCESS","getAllCourseAttachmentsSuccessAction","CREATE_COURSE_FEED","createCourseFeedAction","CREATE_COURSE_FEED_SUCCESS","createCourseFeedSuccessAction","COURSE_FAILED","courseFailedAction","SET_REDIRECT","setRedirectAction","url","DELETE_ATTACHMENT","deleteAttachmentAction","CREATE_EXAM","createExamAction","CREATE_EXAM_SUCCESS","createExamSuccessAction","GET_EXAMS","getExamsAction","GET_EXAMS_SUCCESS","getExamsSuccessAction","SET_CURRENT_EXAM","setCurrentExamAction","DELETE_EXAM","deleteExamAction","DELETE_EXAM_SUCCESS","deleteExamSuccessAction","ADD_EXAM_QUESTION","addExamQuestion","ADD_EXAM_QUESTION_SUCCESS","addExamQuestionSuccess","CREATE_DELIVERED_EXAM","createDeliveredExamAction","CREATE_DELIVERED_EXAM_SUCCESS","createDeliveredExamSuccessAction","EXAM_FAIL","examFailAction","paging","posts","location","useLocation","Footer","Pagination","activePage","first","next","hasNextPage","prev","hasPrevPage","last","totalPages","pages","URLSearchParams","search","get","onSelectFilter","pathname","FlexboxGrid","align","colspan","order","Button","appearance","marginTop","ButtonToolbar","ButtonGroup","post","paddingLeft","flexDirection","votes","comments","viewed","padding","to","_id","dangerouslySetInnerHTML","__html","content","TagGroup","tags","map","tag","index","Tag","key","color","justifyContent","owner","Badge","rating","moment","createdDate","fromNow","loading","useEffect","params","postActions","parseInt","PostListHeader","Divider","Content","Loader","List","hover","item","PostSummary","PostListFooter","typing","inputValue","input","handleButtonClick","bind","handleInputChange","handleInputConfirm","this","setState","focus","nextTags","onChangeTags","Input","inputRef","ref","value","onChange","onBlur","onPressEnter","margin","closable","onClose","handleTagRemove","renderInput","React","Component","component","TEXTAREA","FormControl","disabled","readOnly","readonly","rows","componentClass","placeholder","SELECT","data","accepter","SelectPicker","searchable","disableSearch","PASSWORD","passwordVisible","setPasswordVisible","FormGroup","InputGroup","inside","Addon","cursor","DATE","format","allowHour","showMeridian","DatePicker","NUMBER","InputNumber","min","max","TAGS","TagPicker","creatable","TEXT","ControlLabel","label","apiKey","environment","initialValue","init","menubar","plugins","toolbar","onEditorChange","Schema","Types","StringType","ArrayType","model","Model","isRequiredOrEmpty","minLength","of","form","useRef","currentPost","id","useParams","formValue","setFormValue","onPostSubmit","useCallback","current","check","Form","fluid","PostEditor","sendComment","postId","Date","undefined","comment","upvote","downvote","fontSize","voted","paddingTop","currentPostComments","length","com","PostComment","forwardRef","show","setShow","useImperativeHandle","open","Modal","backdrop","onHide","children","onConfirm","onCancel","modal","deletePost","maxHeight","ConfirmModal","ViewPostHeader","PostCommentList","AddComment","course","Whisper","placement","trigger","speaker","Tooltip","Panel","shaded","bordered","bodyFill","backgroundImg","alt","header","overflow","textOverflow","whiteSpace","professor","lastname","styles","img","action","autoupload","uploaderRef","onSuccessUpload","onErrorUpload","uploading","setUploading","fileInfo","setFileInfo","Uploader","fileListVisible","multiple","listType","accept","autoUpload","withCredentials","file","callback","reader","FileReader","onloadend","result","readAsDataURL","previewFile","blobFile","onUpload","onSuccess","response","onError","center","NumberType","isRequired","maxLength","period","capacity","close","getCurrentPeriod","uploader","courses","currentCourse","resetForm","handleUploadSuccess","alumns","Title","Grid","Row","Col","mdOffset","md","ImageUploader","encodeURIComponent","getPeriods","x","fileList","Alert","start","letter","date","year","getUTCFullYear","month","getUTCMonth","currentCourses","selectedPeriod","setSelectedPeriod","showCourseModal","setShowCourseModal","closeModal","courseActions","userType","RadioGroup","inline","Radio","checked","sm","CreateCourseModal","imageExtensions","documentExtensions","activeTab","setActiveTab","currentAttachments","selectedAttachs","includes","extension","replace","window","borderRadius","border","marginRight","lineHeight","onUploadSuccess","draggable","res","attachment","question","editable","marginBottom","smOffset","circle","toString","options","BooleanType","questionTypes","fetchExam","currentExam","exams","answerFormValue","setAnswerFormValue","answerModel","setAnswerModel","answerForm","auxModel","questions","forEach","saveExamQuestion","exam","sendExamAnswers","answers","element","delivered","setExamAnswers","answerValue","a","block","sort","b","ExamQuestion","creator","showConfirm","setShowConfirm","viewerRef","saveExam","deliveredExam","setTimeout","full","ExamViewer","createdAttachments","setCreatedAttachments","showExam","setShowExam","setComment","currentDeliveredExam","assignation","currentAssignation","newAttach","nextAttachs","attachments","FileUploader","CreateDeliveredExamModal","possibleGrades","grade","setGrade","saveGrade","alumn","showDelivered","setShowDelivered","currentDelivered","setCurrentDelivered","assignId","courseId","deleteAssignation","deleteDeliveredAssignation","percentage","contentType","dueDate","find","findIndex","uploadedDate","getTime","DeliveredDetailModal","CreateDeliveredModal","paddingBottom","DateType","courseGrades","currentCourseGrades","currentExams","showAssignModal","setShowAssignModal","assignations","currentCourseAssignations","closeAssignModal","flex","marginLeft","Assignation","CreateAssignationModal","exact","AssignationsList","AssignationDetail","newComment","setNewComment","saveComment","feed","Table","grades","Column","HeaderCell","Cell","rowData","dataKey","showCreateGrade","setShowCreateGrade","alumnGrades","currentAlumnGrades","professorGrades","currentProfessorGrades","isProfessor","CreateGradeModal","ProfessorGradesTable","AlumnGradesTable","users","autocompleteUsers","delayedQuery","_","debounce","q","authActions","handleChange","val","cancel","AutoComplete","filterBy","renderItem","email","e","buttonIcon","onButtonClick","Math","floor","random","avatarColor","background","substr","toUpperCase","handleUserAdd","handleUserRemove","UsersAutocomplete","Member","showMembersModal","setShowMembersModal","closeMembersModal","selectHandle","lastIndexOf","CourseFeed","CourseMembers","CourseAssignations","CourseGrades","CourseArchives","isVerified","codeVerified","onSuccessVerify","verificationCode","setVerificationCode","sendVerificationCode","phoneNumber","isValid","valid","isNaN","Message","showIcon","description","message","isEmail","birthdate","addRule","startsWith","setValue","githubLink","password","verifyPassword","mfa","saveChanges","showVerify","setShowVerify","basicInfoValue","setBasicInfoValue","securityInfoValue","setSecurityInfoValue","externalLinksValue","setExternalLinksValue","changes","isDifferent","different","onSuccessImgUpload","success","onClickSave","VerifyCodeModal","vertical","BasicInfoForm","SecurityForm","ExternalLinksForm","examActions","showCreate","setShowCreate","CreateExamModal","ExamsList","setActiveKey","Sidebar","minHeight","PostList","CreatePostPage","ViewPostPage","CoursesList","CourseView","ProfileView","ExamView","from","submitLogin","submitRegister","isActive","resetPassModel","currentResetEmail","stage","setStage","sendCodeFormValue","setSendCodeFormValue","code","submitCodeFormValue","setSubmitCodeFormValue","resetPassFormValue","setResetPassFormValue","sendCode","submitCode","resetPassword","HelpBlock","backgroundColor","justify","render","LoginForm","RegisterForm","PasswordRecoveryForm","App","authenticatedChecked","redirectUri","general","redirectUrl","locale","mainclasses","coreActions","join","AuthLayout","MainLayout","Boolean","hostname","initialState","combineReducers","docs","c","updatedComments","i","updated","auxState","api","axios","create","baseURL","defaults","checkAuthenticatedEffect","loginUserEffect","registerUserEffect","sendVerificationCodeEffect","verifyCodeEffect","updateUserEffect","logoutUserEffect","sendRecoveryCodeEffect","submitRecoveryCodeEffect","resetPasswordEffect","searchUsersEffect","put","console","log","stack","status","authEffects","effect","searchCoursesEffect","createCourseEffect","searchCourseByIdEffect","addCourseMemberEffect","removeCourseMemberEffect","searchCourseAssignationsEffect","searchSingleAssignationEffect","deleteAssignationEffect","createCourseAssignationEffect","createDeliveredAssignationEffect","deleteDeliveredAssignationEffect","createCourseGradeEffect","getCourseGradesEffect","createAlumnGradeEffect","getAlumnGradesEffect","updateAlumnGradeEffect","getAllProfessorGradesEffect","getAllCourseAttachmentsEffect","createCourseFeedEffect","delete","courseEffects","createExamEffect","getExamsEffect","deleteExamEffect","addExamQuestionEffect","createDeliveredExamEffect","examId","examEffects","deleteAttachmentEffect","generalEffects","searchPostsEffect","searchPostByIdEffect","createPostEffect","updatePost","deletePostEffect","upvotePostEffect","downvotePostEffect","searchCommentsEffect","createCommentEffect","upvoteCommentEffect","downvoteCommentEffect","postEffects","watchAuth","watchPosts","watchCourses","watchGeneral","watchExams","el","takeEvery","watchers","composeEnhancers","compose","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","applyMiddleware","watcher","run","ReactDOM","StrictMode","IntlProvider","esES","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.93736968.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  FormGroup,\r\n  ControlLabel,\r\n  FormControl,\r\n  InputGroup,\r\n  Icon,\r\n  DatePicker,\r\n  InputNumber,\r\n  SelectPicker,\r\n  TagPicker,\r\n} from 'rsuite';\r\n\r\ninterface InputProps {\r\n  type?:\r\n    | 'text'\r\n    | 'checkbox'\r\n    | 'textarea'\r\n    | 'select'\r\n    | 'password'\r\n    | 'date'\r\n    | 'number'\r\n    | 'tags'\r\n  label?: string;\r\n  name?: string;\r\n  disabled?: boolean;\r\n  readonly?: boolean;\r\n  min?: number;\r\n  max?: number;\r\n  allowHour?: boolean;\r\n  rows?: number;\r\n  onChange?: (value: any) => void;\r\n  disableSearch?: boolean;\r\n  data?: any[];\r\n  placeholder?: string;\r\n}\r\n\r\nexport enum ControlTypesEnum {\r\n  TEXT = 'text',\r\n  TAGS = 'tags',\r\n  CHECKBOX = 'checkbox',\r\n  TEXTAREA = 'textarea',\r\n  SELECT = 'select',\r\n  PASSWORD = 'password',\r\n  DATE = 'date',\r\n  NUMBER = 'number',\r\n}\r\n\r\nexport default (props: InputProps) => {\r\n  let component = null;\r\n  switch (props.type) {\r\n    case ControlTypesEnum.TEXTAREA:\r\n      component = (\r\n        <FormControl\r\n          name={props.name}\r\n          disabled={props.disabled}\r\n          readOnly={props.readonly}\r\n          style={{ width: '100%' }}\r\n          rows={props.rows ? props.rows : 5}\r\n          componentClass='textarea'\r\n          placeholder={props.placeholder}\r\n        />\r\n      );\r\n      break;\r\n    case ControlTypesEnum.SELECT:\r\n      component = (\r\n        <FormControl\r\n          name={props.name}\r\n          data={props.data}\r\n          style={{ width: '100%' }}\r\n          accepter={SelectPicker}\r\n          disabled={props.disabled}\r\n          searchable={!props.disableSearch}\r\n          readOnly={props.readonly}\r\n          placeholder={props.placeholder}\r\n        />\r\n      );\r\n      break;\r\n    case ControlTypesEnum.PASSWORD:\r\n      const [passwordVisible, setPasswordVisible] = useState(false);\r\n      component = (\r\n        <FormGroup>\r\n          <InputGroup style={{ width: '100%' }} inside>\r\n            <FormControl\r\n              name={props.name}\r\n              data={props.data}\r\n              disabled={props.disabled}\r\n              readOnly={props.readonly}\r\n              type={passwordVisible ? 'text' : 'password'}\r\n              placeholder={props.placeholder}\r\n            />\r\n            <InputGroup.Addon\r\n              style={{ cursor: 'pointer' }}\r\n              onClick={() => setPasswordVisible(!passwordVisible)}\r\n            >\r\n              <Icon icon={passwordVisible ? 'eye-slash' : 'eye'} />\r\n            </InputGroup.Addon>\r\n          </InputGroup>\r\n        </FormGroup>\r\n      );\r\n      break;\r\n    case ControlTypesEnum.DATE:\r\n      component = (\r\n        <FormControl\r\n          style={{ width: '100%' }}\r\n          format={props.allowHour ? 'DD/MM/YYYY HH:mm a' : 'DD/MM/YYYY'}\r\n          showMeridian\r\n          accepter={DatePicker}\r\n          name={props.name}\r\n          disabled={props.disabled}\r\n          readOnly={props.readonly}\r\n          placeholder={props.placeholder}\r\n        />\r\n      );\r\n      break;\r\n    case ControlTypesEnum.NUMBER:\r\n      component = (\r\n        <FormControl\r\n          style={{ width: '100%' }}\r\n          accepter={InputNumber}\r\n          min={props.min}\r\n          max={props.max}\r\n          name={props.name}\r\n          disabled={props.disabled}\r\n          readOnly={props.readonly}\r\n          placeholder={props.placeholder}\r\n        />\r\n      );\r\n      break;\r\n    case ControlTypesEnum.TAGS:\r\n      component = (\r\n        <FormControl\r\n          style={{ width: '100%' }}\r\n          accepter={TagPicker}\r\n          data={props.data}\r\n          creatable\r\n          name={props.name}\r\n          readOnly={props.readonly}\r\n          placeholder={props.placeholder}\r\n        />\r\n      );\r\n      break;\r\n    case ControlTypesEnum.TEXT:\r\n    default:\r\n      component = (\r\n        <FormControl\r\n          style={{ width: '100%' }} \r\n          onChange={props.onChange}\r\n          name={props.name}\r\n          disabled={props.disabled}\r\n          readOnly={props.readonly}\r\n          placeholder={props.placeholder}\r\n        />\r\n      );\r\n      break;\r\n  }\r\n  return (\r\n    <FormGroup>\r\n      <ControlLabel>{props.label}</ControlLabel>\r\n      {component}\r\n    </FormGroup>\r\n  );\r\n};\r\n","import { User } from '../../core/models/User.model';\r\nimport { Action } from './action.model';\r\nimport { ApiError } from '../../core/models/ApiError.model';\r\n\r\nexport const CHECK_AUTHENTICATED = 'CHECK_AUTHENTICATED';\r\nexport const checkAuthenticatedAction = (): Action => ({\r\n  type: CHECK_AUTHENTICATED,\r\n});\r\nexport const CHECK_AUTHENTICATED_SUCESS = 'CHECK_AUTHENTICATED_SUCCESS';\r\nexport const checkAuthenticatedSuccessAction = (user: User): Action => ({\r\n  type: CHECK_AUTHENTICATED_SUCESS,\r\n  payload: user,\r\n});\r\nexport const CHECK_AUTHENTICATED_FAIL = 'CHECK_AUTHENTICATED_FAIL';\r\nexport const checkAuthenticatedFailAction = (): Action => ({\r\n  type: CHECK_AUTHENTICATED_FAIL,\r\n});\r\n\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const loginUserAction = (payload: {\r\n  identification: string;\r\n  password: string;\r\n}): Action => ({ type: LOGIN_USER, payload });\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const loginUserSuccessAction = (user: User): Action => ({\r\n  type: LOGIN_USER_SUCCESS,\r\n  payload: user,\r\n});\r\nexport const LOGIN_USER_FAIL = 'LOGIN_USER_FAIL';\r\nexport const loginUserFailAction = (error: ApiError) => ({\r\n  type: LOGIN_USER_FAIL,\r\n  payload: error,\r\n});\r\n\r\nexport const RESET_VERIFIED = 'RESET_VERIFIED';\r\nexport const resetVerifiedAction = (payload: boolean): Action => ({\r\n  type: RESET_VERIFIED,\r\n  payload\r\n});\r\n\r\nexport const SEND_VERIFICATION_CODE = 'SEND_VERIFICATION_CODE';\r\nexport const sendVerificationCodeAction = (payload: string): Action => ({\r\n  type: SEND_VERIFICATION_CODE,\r\n  payload\r\n});\r\n\r\nexport const SEND_VERIFICATION_CODE_SUCCESS = 'SEND_VERIFICATION_CODE_SUCCESS';\r\nexport const sendVerificationCodeSuccessAction = (payload: string): Action => ({\r\n  type: SEND_VERIFICATION_CODE_SUCCESS,\r\n  payload\r\n});\r\n\r\nexport const VERIFY_CODE = 'VERIFY_CODE';\r\nexport const verifiyCodeAction = (payload: { verificationCode: string, phoneNumber: string }): Action => ({\r\n  type: VERIFY_CODE,\r\n  payload\r\n});\r\n\r\nexport const VERIFY_CODE_SUCCESS = 'VERIFY_CODE_SUCCESS';\r\nexport const verifyCodeSuccessAction = (payload: string): Action => ({\r\n  type: VERIFY_CODE_SUCCESS,\r\n  payload \r\n});\r\n\r\nexport const REGISTER_USER = 'REGISTER_USER';\r\nexport const registerUserAction = (payload: User): Action => ({\r\n  type: REGISTER_USER,\r\n  payload,\r\n});\r\n\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\r\nexport const registerUserSuccessAction = (payload: User): Action => ({\r\n  type: REGISTER_USER_SUCCESS,\r\n  payload,\r\n});\r\n\r\nexport const UPDATE_USER = 'UPDATE_USER';\r\nexport const updateUserAction = (payload: User): Action => ({\r\n  type: UPDATE_USER,\r\n  payload\r\n});\r\n\r\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS';\r\nexport const updateUserSuccessAction = (payload: User): Action => ({\r\n  type: UPDATE_USER_SUCCESS,\r\n  payload\r\n});\r\n\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\nexport const logoutUserAction = (): Action => ({\r\n  type: LOGOUT_USER,\r\n});\r\n\r\nexport const LOGOUT_USER_SUCCESS = 'LOGOUT_USER_SUCCESS';\r\nexport const logoutUserSuccessAction = (): Action => ({\r\n  type: LOGOUT_USER_SUCCESS,\r\n});\r\n\r\nexport const SEND_RECOVERY_CODE = 'SEND_RECOVERY_CODE';\r\nexport const sendRecoveryCodeAction = (identification: string): Action => ({\r\n  type: SEND_RECOVERY_CODE,\r\n  payload: identification,\r\n});\r\n\r\nexport const SEND_RECOVERY_CODE_SUCCESS = 'SEND_RECOVERY_CODE_SUCCESS';\r\nexport const sendRecoveryCodeSuccessAction = (payload: {\r\n  email: string;\r\n  message: string;\r\n}) => ({\r\n  type: SEND_RECOVERY_CODE_SUCCESS,\r\n  payload,\r\n});\r\n\r\nexport const SUBMIT_RECOVERY_CODE = 'SUBMIT_RECOVERY_CODE';\r\nexport const submitRecoveryCodeAction = (payload: {\r\n  email: string;\r\n  code: string;\r\n}) => ({\r\n  type: SUBMIT_RECOVERY_CODE,\r\n  payload,\r\n});\r\n\r\nexport const SUBMIT_RECOVERY_CODE_SUCCESS = 'SUBMIT_RECOVERY_CODE_SUCCESS';\r\nexport const submitRecoveryCodeSuccessAction = (payload: any) => ({\r\n  type: SUBMIT_RECOVERY_CODE_SUCCESS,\r\n  payload,\r\n});\r\n\r\nexport const RESET_PASSWORD = 'RESET_PASSWORD';\r\nexport const resetPasswordAction = (payload: any): Action => ({\r\n  type: RESET_PASSWORD,\r\n  payload,\r\n});\r\n\r\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\r\nexport const resetPasswordSuccessAction = (payload: {\r\n  message: string;\r\n}): Action => ({\r\n  type: RESET_PASSWORD_SUCCESS,\r\n  payload,\r\n});\r\n\r\n\r\nexport const SEARCH_USERS = 'SEARCH_USERS';\r\nexport const searchUsersAction = (payload: string): Action => ({\r\n    type: SEARCH_USERS,\r\n    payload\r\n});\r\n\r\nexport const SEARCH_USERS_SUCCESS = 'SEARCH_USERS_SUCCESS';\r\nexport const searchUsersActionSuccess = (payload: User[]): Action => ({\r\n    type: SEARCH_USERS_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const AUTH_ACTION_FAIL = 'AUTH_ACTION_FAIL';\r\nexport const authActionFail = (error: ApiError): Action => ({\r\n  type: AUTH_ACTION_FAIL,\r\n  payload: error,\r\n});\r\n","import React from 'react';\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Icon,\r\n  Dropdown,\r\n  NavbarProps,\r\n  Avatar,\r\n  Container,\r\n} from 'rsuite';\r\n\r\nimport './Navbar.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState } from '../../../store/reducers';\r\nimport { User } from '../../../core/models/User.model';\r\nimport { logoutUserAction } from '../../../store/actions/auth.actions';\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\n\r\nexport default (props: NavbarProps) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const match = useRouteMatch();\r\n\r\n  const logoutUser = () => {\r\n    dispatch(logoutUserAction());\r\n  };\r\n\r\n  const currentUser: User | null = useSelector(\r\n    (state: AppState) => state.auth.currentUser\r\n  );\r\n  return (\r\n    <Navbar {...props}>\r\n      <Navbar.Header>\r\n        <h6 className='navbar-brand logo'>URUOnline</h6>\r\n      </Navbar.Header>\r\n      <Navbar.Body>\r\n        <Nav onSelect={props.onSelect}>\r\n        </Nav>\r\n        <Nav pullRight justified>\r\n          <Dropdown title={currentUser?.name}>\r\n            <Dropdown.Item\r\n              eventKey='4'\r\n              onClick={() => history.push(match.path + '/profile')}\r\n            >\r\n              Perfil\r\n            </Dropdown.Item>\r\n            <Dropdown.Item eventKey='5' onClick={logoutUser}>\r\n              Cerrar Sesión\r\n            </Dropdown.Item>\r\n          </Dropdown>\r\n          <Container style={{ display: 'flex', alignItems: 'center' }}>\r\n            <Avatar src={currentUser?.profileImg} />\r\n          </Container>\r\n        </Nav>\r\n      </Navbar.Body>\r\n    </Navbar>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Sidenav, Nav, Icon, IconButton } from 'rsuite';\r\nimport { AppState } from '../../../store/reducers';\r\n\r\nimport './SideNav.css';\r\n\r\ninterface SideNavProps {\r\n  activeKey: string;\r\n  handleSelect: (key: string) => void;\r\n}\r\n\r\nexport default (props: SideNavProps) => {\r\n  const currentUser = useSelector((state: AppState) => state.auth.currentUser);\r\n  const [expanded, setExpanded] = useState(true);\r\n  return (\r\n    <div style={{ width: '250px', height: '92%' }}>\r\n      <Sidenav\r\n        expanded={expanded}\r\n        activeKey={props.activeKey}\r\n        onSelect={props.handleSelect}\r\n        className='sidenav'\r\n      >\r\n        <Sidenav.Body>\r\n          <Nav>\r\n            <Nav.Item eventKey='1' icon={<Icon icon='dashboard' />}>\r\n              Posts\r\n            </Nav.Item>\r\n            <Nav.Item eventKey='2' icon={<Icon icon='group' />}>\r\n              Cursos\r\n            </Nav.Item>\r\n            {currentUser?.type === 'professor' ? (\r\n              <Nav.Item eventKey='3' icon={<Icon icon='file-text' />}>\r\n                Examenes\r\n              </Nav.Item>\r\n            ) : null}\r\n            {/* <Dropdown\r\n              placement='rightStart'\r\n              eventKey='4'\r\n              title='Settings'\r\n              icon={<Icon icon='gear-circle' />}\r\n            >\r\n              <Dropdown.Item eventKey='4-1'>Applications</Dropdown.Item>\r\n              <Dropdown.Item eventKey='4-2'>Channels</Dropdown.Item>\r\n              <Dropdown.Item eventKey='4-3'>Versions</Dropdown.Item>\r\n              <Dropdown.Menu eventKey='4-5' title='Custom Action'>\r\n                <Dropdown.Item eventKey='4-5-1'>Action Name</Dropdown.Item>\r\n                <Dropdown.Item eventKey='4-5-2'>Action Params</Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown> */}\r\n          </Nav>\r\n        </Sidenav.Body>\r\n        <IconButton\r\n          className='collapse-btn'\r\n          onClick={() => setExpanded(!expanded)}\r\n          icon={\r\n            <Icon\r\n              icon={expanded ? 'angle-double-left' : 'angle-double-right'}\r\n            />\r\n          }\r\n          size='lg'\r\n        ></IconButton>\r\n      </Sidenav>\r\n    </div>\r\n  );\r\n};\r\n","import { Aggregator } from \"../../core/models/Aggregator.model\";\r\nimport { ApiError } from \"../../core/models/ApiError.model\";\r\nimport { ApiResponse } from \"../../core/models/ApiResponse.model\";\r\nimport { Comment } from \"../../core/models/Comment.model\";\r\nimport { Post } from \"../../core/models/Post.model\";\r\nimport { Action } from \"./action.model\";\r\n\r\nexport const SEARCH_POSTS = 'SEARCH_POSTS';\r\nexport const searchPostsAction = (payload: { page: number, filter: string } = { page: 1, filter: 'rated' }) => ({\r\n  type: SEARCH_POSTS,\r\n  payload,\r\n});\r\n\r\nexport const SEARCH_POSTS_SUCCESS = 'SEARCH_POSTS_SUCCESS';\r\nexport const searchPostsSuccessAction = (payload: Aggregator<Post>) => ({\r\n    type: SEARCH_POSTS_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const SEARCH_POST_BY_ID = 'SEARCH_POST_BY_ID';\r\nexport const searchPostByIdAction = (payload: string) => ({\r\n    type: SEARCH_POST_BY_ID,\r\n    payload\r\n});\r\n\r\nexport const SEARCH_POST_BY_ID_SUCCESS = 'SEARCH_POST_BY_ID_SUCCESS';\r\nexport const searchPostByIdSuccessAction = (payload: Post) => ({\r\n    type: SEARCH_POST_BY_ID_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const CREATE_POST = 'CREATE_POST';\r\nexport const createPostAction = (payload: Post) => ({\r\n    type: CREATE_POST,\r\n    payload\r\n});\r\n\r\nexport const CREATE_POST_SUCESS = 'CREATE_POST_SUCCESS';\r\nexport const createPostSuccessAction = (payload: ApiResponse) => ({\r\n    type: CREATE_POST_SUCESS,\r\n    payload\r\n});\r\n\r\nexport const UPDATE_POST = 'UPDATE_POST';\r\nexport const updatePostAction = (payload: Post) => ({\r\n    type: UPDATE_POST,\r\n    payload\r\n});\r\n\r\n\r\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCESS';\r\nexport const updatePostSuccessAction = (payload: ApiResponse) => ({\r\n    type: UPDATE_POST_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const deletePostAction = (payload: string) => ({\r\n    type: DELETE_POST,\r\n    payload\r\n});\r\n\r\nexport const DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\r\nexport const deletePostSuccessAction = (payload: ApiResponse) => ({\r\n    type: DELETE_POST_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const UPVOTE_POST = 'UPVOTE_POST';\r\nexport const upvotePostAction = (payload: string) => ({\r\n    type: UPVOTE_POST,\r\n    payload\r\n});\r\n\r\nexport const UPVOTE_POST_SUCCESS = 'UPVOTE_POST_SUCCESS';\r\nexport const upvotePostSuccessAction = (payload: ApiResponse) => ({\r\n    type: UPVOTE_POST_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const DOWNVOTE_POST = 'DOWNVOTE_POST';\r\nexport const downvotePostAction = (payload: string) => ({\r\n    type: DOWNVOTE_POST,\r\n    payload\r\n})\r\n\r\nexport const DOWNVOTE_POST_SUCCESS = 'DOWNVOTE_POST_SUCCESS';\r\nexport const downvotePostSuccessAction = (payload: ApiResponse) => ({\r\n    type: DOWNVOTE_POST_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const SEARCH_COMMENTS = 'SEARCH_COMMENTS';\r\nexport const searchCommentsAction = (payload: string) => ({\r\n    type: SEARCH_COMMENTS,\r\n    payload\r\n});\r\n\r\nexport const SEARCH_COMMENTS_SUCCESS = 'SEARCH_COMMENTS_SUCCESS';\r\nexport const searchCommentsSuccessAction = (payload: Comment[]) => ({\r\n    type: SEARCH_COMMENTS_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const CREATE_COMMENT = 'CREATE_COMMENT';\r\nexport const createCommentAction = (payload: Comment) => ({\r\n    type: CREATE_COMMENT,\r\n    payload\r\n});\r\n\r\nexport const CREATE_COMMENT_SUCCESS = 'CREATE_COMMENT_SUCCESS';\r\nexport const createCommentSuccessAction = (payload: ApiResponse) => ({\r\n    type: CREATE_COMMENT_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const UPVOTE_COMMENT = 'UPVOTE_COMMENT';\r\nexport const upvoteCommentAction = (payload: string) => ({\r\n    type: UPVOTE_COMMENT,\r\n    payload\r\n});\r\n\r\nexport const UPVOTE_COMMENT_SUCCESS = 'UPVOTE_COMMENT_SUCCESS';\r\nexport const upvoteCommentSuccessAction = (payload: ApiResponse) => ({\r\n    type: UPVOTE_COMMENT_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const DOWNVOTE_COMMENT= 'DOWNVOTE_COMMENT';\r\nexport const downvoteCommentAction = (payload: string) => ({\r\n    type: DOWNVOTE_COMMENT,\r\n    payload\r\n})\r\n\r\nexport const DOWNVOTE_COMMENT_SUCCESS = 'DOWNVOTE_COMMENT_SUCCESS';\r\nexport const downvoteCommentSuccessAction = (payload: ApiResponse) => ({\r\n    type: DOWNVOTE_COMMENT_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const POST_ACTION_FAIL = 'POST_ACTION_FAIL';\r\nexport const postFailedAction = (error: ApiError): Action => ({\r\n    type: POST_ACTION_FAIL,\r\n    payload: error\r\n});","import { AlumnGrade } from \"../../core/models/AlumnGrade.model\";\r\nimport { ApiError } from \"../../core/models/ApiError.model\";\r\nimport { Assignation } from \"../../core/models/Assignation.model\";\r\nimport { Attachment } from \"../../core/models/Attachment.model\";\r\nimport { Course, CourseFeed  } from \"../../core/models/Course.model\";\r\nimport { CourseGrade } from \"../../core/models/CourseGrade.model\";\r\nimport { DeliveredAssignation } from \"../../core/models/DeliveredAssignation.model\";\r\nimport { ProfessorGrade } from \"../../core/models/ProfessorGrade.model\";\r\nimport { User } from \"../../core/models/User.model\";\r\nimport { Action } from \"./action.model\";\r\n\r\nexport const SEARCH_COURSE_BY_ID = 'SEARCH_COURSE_BY_ID';\r\nexport const searchCourseByIdAction = (payload: string): Action => ({\r\n    type: SEARCH_COURSE_BY_ID,\r\n    payload\r\n});\r\n\r\nexport const SEARCH_COURSE_BY_ID_SUCCESS = 'SEARCH_COURSE_BY_ID_SUCCESS';\r\nexport const searchCourseByIdSuccessAction = (payload: Course): Action => ({\r\n    type: SEARCH_COURSE_BY_ID_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const SEARCH_COURSES = 'SEARCH_COURSES';\r\nexport const searchCoursesAction = (payload: { userType: string, period: string }): Action => ({\r\n    type: SEARCH_COURSES,\r\n    payload\r\n});\r\n\r\nexport const SEARCH_COURSES_SUCCESS = 'SEARCH_COURSES_SUCCESS';\r\nexport const searchCoursesSuccessAction = (payload: Course[]): Action => ({\r\n    type: SEARCH_COURSES_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const CREATE_COURSE = 'CREATE_COURSE';\r\nexport const createCourseAction = (payload: Course): Action => ({\r\n    type: CREATE_COURSE,\r\n    payload\r\n});\r\n\r\nexport const CREATE_COURSE_SUCCESS = 'CREATE_COURSE_SUCCESS';\r\nexport const createCourseSuccessAction = (payload: Course): Action => ({\r\n    type: CREATE_COURSE_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const ADD_COURSE_MEMBER = 'ADD_COURSE_MEMBER';\r\nexport const addCourseMemberAction = (payload: { user: User, course: Course }): Action => ({\r\n    type: ADD_COURSE_MEMBER,\r\n    payload\r\n});\r\n\r\nexport const ADD_COURSE_MEMBER_SUCCESS = 'ADD_COURSE_MEMBER_SUCCESS';\r\nexport const addCourseMemberSucessAction = (payload: User): Action => ({\r\n    type: ADD_COURSE_MEMBER_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const REMOVE_COURSE_MEMBER = 'REMOVE_COURSE_MEMBER';\r\nexport const removeCourseMemberAction = (payload: { user: User, course: Course }): Action => ({\r\n    type: REMOVE_COURSE_MEMBER,\r\n    payload\r\n});\r\n\r\nexport const REMOVE_COURSE_MEMBER_SUCCESS = 'REMOVE_COURSE_MEMBER_SUCCESS';\r\nexport const removeCourseMemberSuccessAction = (payload: User): Action => ({\r\n    type: REMOVE_COURSE_MEMBER_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const SEARCH_COURSE_ASSIGNATIONS = 'SEARCH_COURSE_ASSIGNATIONS';\r\nexport const searchCourseAssignationsAction = (payload: string): Action => ({\r\n    type: SEARCH_COURSE_ASSIGNATIONS,\r\n    payload\r\n});\r\n\r\nexport const SEARCH_SINGLE_ASSIGNATION = 'SEARCH_SINGLE_ASSIGNATION';\r\nexport const searchSingleAssignationAction = (payload: { courseId: string, assignId: string, filter: string }): Action => ({\r\n    type: SEARCH_SINGLE_ASSIGNATION,\r\n    payload\r\n});\r\n\r\nexport const SEARCH_SINGLE_ASSIGNATION_SUCCESS = 'SEARCH_SINGLE_ASSIGNATION_SUCCESS';\r\nexport const searchSingleAssignationSuccessAction = (payload: Assignation): Action => ({\r\n    type: SEARCH_SINGLE_ASSIGNATION_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const DELETE_ASSIGNATION = 'DELETE_ASSIGNATION';\r\nexport const deleteAssignationAction = (payload: string): Action => ({\r\n    type: DELETE_ASSIGNATION,\r\n    payload\r\n});\r\n\r\nexport const DELETE_ASSIGNATION_SUCCESS = 'DELETE_ASSIGNATION_SUCCESS';\r\nexport const deleteAssignationSuccessAction = (payload: string): Action => ({\r\n    type: DELETE_ASSIGNATION_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const SEARCH_COURSE_ASSIGNATIONS_SUCCESS = 'SEARCH_COURSE_ASSIGNATIONS_SUCCESS';\r\nexport const searchCourseAssignationsSuccessAction = (payload: Assignation[]): Action => ({\r\n    type: SEARCH_COURSE_ASSIGNATIONS_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const CREATE_COURSE_ASSIGNATION = 'CREATE_COURSE_ASSIGNATION';\r\nexport const createCourseAssignationAction = (payload: Assignation): Action => ({\r\n    type: CREATE_COURSE_ASSIGNATION,\r\n    payload\r\n});\r\n\r\nexport const CREATE_COURSE_ASSIGNATION_SUCCESS = 'CREATE_COURSE_ASSIGNATION_SUCCESS';\r\nexport const createCourseAssignationSuccessAction = (payload: Assignation): Action => ({\r\n    type: CREATE_COURSE_ASSIGNATION_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const CREATE_DELIVERED_ASSIGNATION = 'CREATE_DELIVERED_ASSIGNATION';\r\nexport const createDeliveredAssignationAction = (payload: DeliveredAssignation): Action => ({\r\n    type: CREATE_DELIVERED_ASSIGNATION,\r\n    payload\r\n});\r\n\r\nexport const CREATE_DELIVERED_ASSIGNATION_SUCCESS = 'CREATE_DELIVERED_ASSIGNATION_SUCCESS';\r\nexport const createDeliveredAssignationSuccessAction = (payload: DeliveredAssignation): Action => ({\r\n    type: CREATE_DELIVERED_ASSIGNATION_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const DELETE_DELIVERED_ASSIGNATION = 'DELETE_DELIVERED_ASSIGNATION';\r\nexport const deleteDeliveredAssignationAction = (payload: DeliveredAssignation): Action => ({\r\n    type: DELETE_DELIVERED_ASSIGNATION,\r\n    payload\r\n});\r\n\r\nexport const DELETE_DELIVERED_ASSIGNATION_SUCCESS = 'DELETE_DELIVERED_ASSIGNATION_SUCCESS';\r\nexport const deleteDeliveredAssignationSuccessAction = (payload: DeliveredAssignation): Action => ({\r\n    type: DELETE_DELIVERED_ASSIGNATION_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const CREATE_COURSE_GRADE = 'CREATE_COURSE_GRADE';\r\nexport const createCourseGradeAction = (payload: CourseGrade): Action => ({\r\n    type: CREATE_COURSE_GRADE,\r\n    payload\r\n});\r\n\r\nexport const CREATE_COURSE_GRADE_SUCCESS = 'CREATE_COURSE_GRADE_SUCCESS';\r\nexport const createCourseGradeSuccessAction = (payload: CourseGrade): Action => ({\r\n    type: CREATE_COURSE_GRADE_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const GET_COURSE_GRADES = 'GET_COURSE_GRADES';\r\nexport const getCourseGradesAction = (payload: string): Action => ({\r\n    type: GET_COURSE_GRADES,\r\n    payload\r\n});\r\n\r\nexport const GET_COURSE_GRADES_SUCCESS = 'GET_COURSE_GRADES_SUCCESS';\r\nexport const getCourseGradesSuccessAction = (payload: CourseGrade[]): Action => ({\r\n    type: GET_COURSE_GRADES_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const GET_ALL_PROFESSOR_GRADES = 'GET_ALL_PROFESSOR_GRADES';\r\nexport const getAllProfessorGradesAction = (payload: string): Action => ({\r\n    type: GET_ALL_PROFESSOR_GRADES,\r\n    payload\r\n});\r\n\r\nexport const GET_ALL_PROFESSOR_GRADES_SUCCESS = 'GET_ALL_PROFESSOR_GRADES_SUCCESS';\r\nexport const getAllProfessorGradesSuccessAction = (payload: ProfessorGrade[]): Action => ({\r\n    payload: payload,\r\n    type: GET_ALL_PROFESSOR_GRADES_SUCCESS\r\n})\r\n\r\nexport const UPDATE_ALUMN_GRADE = 'UPDATE_ALUMN_GRADE';\r\nexport const updateAlumnGradeAction = (payload: AlumnGrade): Action => ({\r\n    type: UPDATE_ALUMN_GRADE,\r\n    payload\r\n});\r\n\r\nexport const UPDATE_ALUMN_GRADE_SUCCESS = 'UPDATE_ALUMN_GRADE_SUCCESS';\r\nexport const updateAlumnGradeSuccessAction = (payload: AlumnGrade): Action => ({\r\n    type: UPDATE_ALUMN_GRADE_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const CREATE_ALUMN_GRADE = 'CREATE_ALUMN_GRADE';\r\nexport const createAlumnGradeAction = (payload: AlumnGrade): Action => ({\r\n    type: CREATE_ALUMN_GRADE,\r\n    payload\r\n});\r\n\r\nexport const CREATE_ALUMN_GRADE_SUCCESS = 'CREATE_ALUMN_GRADE_SUCCESS';\r\nexport const createAlumnGradeSuccessAction = (payload: AlumnGrade): Action => ({\r\n    type: CREATE_ALUMN_GRADE_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const GET_ALUMN_GRADES = 'GET_ALUMN_GRADES';\r\nexport const getAlumnGradesAction = (payload: { course: string, alumn: string, filter: string }): Action => ({\r\n    type: GET_ALUMN_GRADES,\r\n    payload\r\n});\r\n\r\nexport const GET_ALUMN_GRADES_SUCCESS = 'GET_ALUMN_GRADES_SUCCESS';\r\nexport const getAlumnGradesSuccessAction = (payload: { course: string, alumn: string }): Action => ({\r\n    type: GET_ALUMN_GRADES_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const GET_COURSE_ATTACHMENTS = 'GET_COURSE_ATTACHMENTS';\r\nexport const getAllCourseAttachmentsAction = (payload: string): Action => ({\r\n    type: GET_COURSE_ATTACHMENTS,\r\n    payload\r\n});\r\n\r\nexport const GET_COURSE_ATTACHMENTS_SUCCESS = 'GET_COURSE_ATTACHMENTS_SUCCESS';\r\nexport const getAllCourseAttachmentsSuccessAction = (payload: Attachment[]): Action => ({\r\n    type: GET_COURSE_ATTACHMENTS_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const CREATE_COURSE_FEED = 'CREATE_COURSE_FEED';\r\nexport const createCourseFeedAction = (payload: { course: string, content: string }): Action => ({\r\n    type: CREATE_COURSE_FEED,\r\n    payload\r\n});\r\n\r\nexport const CREATE_COURSE_FEED_SUCCESS = 'CREATE_COURSE_FEED_SUCCESS';\r\nexport const createCourseFeedSuccessAction = (payload: CourseFeed[]): Action => ({\r\n    type: CREATE_COURSE_FEED_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const COURSE_FAILED = 'COURSE_FAILED';\r\nexport const courseFailedAction = (error: ApiError): Action => ({\r\n    type: COURSE_FAILED,\r\n    payload: error\r\n});\r\n\r\n\r\n","import { Attachment } from \"../../core/models/Attachment.model\";\r\nimport { Action } from \"./action.model\";\r\n\r\nexport const SET_REDIRECT = 'SET_REDIRECT';\r\nexport const setRedirectAction = (url: string): Action => ({\r\n    type: SET_REDIRECT,\r\n    payload: url\r\n});\r\n\r\nexport const DELETE_ATTACHMENT = 'DELETE_ATTACHMENT';\r\nexport const deleteAttachmentAction = (payload: Attachment): Action => ({\r\n    type: DELETE_ATTACHMENT,\r\n    payload\r\n});\r\n\r\n\r\n","import { ApiError } from '../../core/models/ApiError.model';\r\nimport { DeliveredExam } from '../../core/models/DeliveredExam.model';\r\nimport { Exam, ExamQuestion } from '../../core/models/Exam.model';\r\nimport { Action } from './action.model';\r\n\r\nexport const CREATE_EXAM = 'CREATE_EXAM';\r\nexport const createExamAction = (payload: Exam): Action => ({\r\n  type: CREATE_EXAM,\r\n  payload,\r\n});\r\n\r\nexport const CREATE_EXAM_SUCCESS = 'CREATE_EXAM_SUCCESS';\r\nexport const createExamSuccessAction = (payload: Exam): Action => ({\r\n  type: CREATE_EXAM_SUCCESS,\r\n  payload,\r\n});\r\n\r\nexport const GET_EXAMS = 'GET_EXAMS';\r\nexport const getExamsAction = (payload?: string): Action => ({\r\n  type: GET_EXAMS,\r\n  payload,\r\n});\r\n\r\nexport const GET_EXAMS_SUCCESS = 'GET_EXAMS_SUCCESS';\r\nexport const getExamsSuccessAction = (payload: Exam[]): Action => ({\r\n  type: GET_EXAMS_SUCCESS,\r\n  payload,\r\n});\r\n\r\nexport const SET_CURRENT_EXAM = 'SET_CURRENT_EXAM';\r\nexport const setCurrentExamAction = (payload: Exam): Action => ({\r\n  type: SET_CURRENT_EXAM,\r\n  payload,\r\n});\r\n\r\nexport const DELETE_EXAM = 'DELETE_EXAM';\r\nexport const deleteExamAction = (payload: string): Action => ({\r\n  type: DELETE_EXAM,\r\n  payload,\r\n});\r\n\r\nexport const DELETE_EXAM_SUCCESS = 'DELETE_EXAM_SUCCESS';\r\nexport const deleteExamSuccessAction = (payload: string): Action => ({\r\n  type: DELETE_EXAM_SUCCESS,\r\n  payload,\r\n});\r\n\r\nexport const ADD_EXAM_QUESTION = 'ADD_EXAM_QUESTION';\r\nexport const addExamQuestion = (payload: ExamQuestion): Action => ({\r\n  type: ADD_EXAM_QUESTION,\r\n  payload,\r\n});\r\n\r\nexport const ADD_EXAM_QUESTION_SUCCESS = 'ADD_EXAM_QUESTION_SUCCESS';\r\nexport const addExamQuestionSuccess = (payload: ExamQuestion): Action => ({\r\n  type: ADD_EXAM_QUESTION_SUCCESS,\r\n  payload,\r\n});\r\n\r\nexport const CREATE_DELIVERED_EXAM = 'CREATE_DELIVERED_EXAM';\r\nexport const createDeliveredExamAction = (payload: DeliveredExam): Action => ({\r\n  type: CREATE_DELIVERED_EXAM,\r\n  payload,\r\n});\r\n\r\nexport const CREATE_DELIVERED_EXAM_SUCCESS = 'CREATE_DELIVERED_EXAM_SUCCESS';\r\nexport const createDeliveredExamSuccessAction = (\r\n  payload: DeliveredExam\r\n): Action => ({\r\n  type: CREATE_DELIVERED_EXAM_SUCCESS,\r\n  payload,\r\n});\r\n\r\nexport const EXAM_FAIL = 'EXAM_FAIL';\r\nexport const examFailAction = (payload: ApiError): Action => ({\r\n  type: EXAM_FAIL,\r\n  payload,\r\n});\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { Container, Footer, Pagination } from 'rsuite';\r\nimport { AppState } from '../../../store/reducers';\r\n\r\nexport default () => {\r\n  const paging = useSelector((state: AppState) => state.posts.paging);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  return (\r\n    <Footer>\r\n      <Container>\r\n        <Pagination\r\n          activePage={paging?.page}\r\n          first={paging?.page !== 1}\r\n          next={paging?.hasNextPage}\r\n          prev={paging?.hasPrevPage}\r\n          last={paging?.page !== paging?.totalPages}\r\n          size='lg'\r\n          pages={paging?.totalPages}\r\n          onSelect={(page) => {\r\n            let filter = new URLSearchParams(location.search).get('filter');\r\n            history.push(`/app/posts?page=${page}&filter=${filter}`);\r\n          }}\r\n        ></Pagination>\r\n      </Container>\r\n    </Footer>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  ButtonToolbar,\r\n  Container,\r\n  FlexboxGrid,\r\n  Header,\r\n} from 'rsuite';\r\n\r\ninterface PostListHeaderProps {}\r\n\r\nexport default () => {\r\n  const history = useHistory();\r\n\r\n  const onSelectFilter = (filter: string) => {\r\n    history.push({\r\n      pathname: '/app/posts',\r\n      search: '?page=1&filter=' + filter\r\n    })\r\n  };\r\n\r\n  return (\r\n    <Header>\r\n      <Container>\r\n        <FlexboxGrid align='middle'>\r\n          <FlexboxGrid.Item colspan={20} order={1}>\r\n            <h1>Todas las publicaciones</h1>\r\n          </FlexboxGrid.Item>\r\n          <FlexboxGrid.Item colspan={4} order={2}>\r\n            <Button\r\n              appearance='primary'\r\n              onClick={() => history.push('/app/posts/create')}\r\n            >\r\n              Crear Post\r\n            </Button>\r\n          </FlexboxGrid.Item>\r\n          <FlexboxGrid.Item colspan={8} order={4} style={{ marginTop: '10px' }}>\r\n            <ButtonToolbar>\r\n              <ButtonGroup>\r\n                <Button\r\n                  appearance='ghost'\r\n                  onClick={() => onSelectFilter('new')}\r\n                >\r\n                  Nuevos\r\n                </Button>\r\n                <Button\r\n                  appearance='ghost'\r\n                  onClick={() => onSelectFilter('active')}\r\n                >\r\n                  Activos\r\n                </Button>\r\n                <Button\r\n                  appearance='ghost'\r\n                  onClick={() => onSelectFilter('rated')}\r\n                >\r\n                  Mas votados\r\n                </Button>\r\n                <Button\r\n                  appearance='ghost'\r\n                  onClick={() => onSelectFilter('career')}\r\n                >\r\n                  Carrera\r\n                </Button>\r\n              </ButtonGroup>\r\n            </ButtonToolbar>\r\n          </FlexboxGrid.Item>\r\n        </FlexboxGrid>\r\n      </Container>\r\n    </Header>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Avatar, Badge, FlexboxGrid, Tag, TagGroup } from 'rsuite';\r\nimport { Post } from '../../../core/models/Post.model';\r\nimport moment from 'moment';\r\n\r\ninterface PostSummaryProps {\r\n  post: Post;\r\n}\r\n\r\nexport default ({ post }: PostSummaryProps) => {\r\n  return (\r\n    <FlexboxGrid style={{ paddingLeft: '20px' }}>\r\n      <FlexboxGrid.Item\r\n        colspan={2}\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <h5>{post.votes}</h5>\r\n        <p>Votos</p>\r\n        <h5>{post.comments}</h5>\r\n        <p>Comentarios</p>\r\n        <br></br>\r\n        <p>Visto {post.viewed}</p>\r\n      </FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={18} style={{ padding: '10px' }}>\r\n        <Link to={'/app/posts/' + post._id}>\r\n          <h5>{post.title}</h5>\r\n        </Link>\r\n        <br />\r\n        <p dangerouslySetInnerHTML={{ __html: post.content}}></p>\r\n        <br />\r\n        <TagGroup>\r\n          {post.tags.map((tag, index) => (\r\n            <Tag key={index} color='blue'>{tag}</Tag>\r\n          ))}\r\n        </TagGroup>\r\n      </FlexboxGrid.Item>\r\n      <FlexboxGrid.Item\r\n        colspan={4}\r\n        style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center' }}\r\n      >\r\n        <Avatar src={post.owner?.profileImg} />\r\n\r\n        <span>\r\n          {post.owner?.name} - <Badge content={post.owner?.rating} />\r\n        </span>\r\n        <span>{moment(post.createdDate).fromNow()}</span>\r\n      </FlexboxGrid.Item>\r\n    </FlexboxGrid>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Container, Content, Divider, List, Loader } from 'rsuite';\r\nimport { postActions } from '../../store/actions';\r\nimport { AppState } from '../../store/reducers';\r\nimport PostListFooter from './PostListFooter/PostListFooter';\r\nimport PostListHeader from './PostListHeader/PostListHeader';\r\nimport PostSummary from './PostSummary/PostSummary';\r\n\r\ninterface PostListProps {}\r\n\r\nexport default (props: RouteComponentProps<PostListProps>) => {\r\n  const posts = useSelector((state: AppState) => state.posts.posts);\r\n  const loading = useSelector((state: AppState) => state.posts.loading);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(props.location.search);\r\n    let page = params.get('page');\r\n    let filter = params.get('filter');\r\n    if (!page) {\r\n      props.history.push({\r\n        pathname: props.location.pathname,\r\n        search: '?page=1&filter=new',\r\n      });\r\n    } else {\r\n      dispatch(\r\n        postActions.searchPostsAction({\r\n          page: parseInt(page),\r\n          filter: filter as string,\r\n        })\r\n      );\r\n    }\r\n  }, [dispatch, props.location.search, props.location.pathname, props.history]);\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <PostListHeader />\r\n        <Divider />\r\n        <Content>\r\n          {loading ? (\r\n            <Loader size='lg' content='Cargando...' />\r\n          ) : (\r\n            <List hover>\r\n              {posts.map((item, index) => (\r\n                <List.Item key={item['_id']} index={index}>\r\n                  <PostSummary post={item} />\r\n                </List.Item>\r\n              ))}\r\n            </List>\r\n          )}\r\n        </Content>\r\n        <Divider></Divider>\r\n        <PostListFooter></PostListFooter>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Icon, IconButton, Input, Tag, TagGroup } from 'rsuite';\r\n\r\ninterface DynamicTagProps {\r\n    onChangeTags: (tags: string[]) => void;\r\n    tags: string[]\r\n}\r\n\r\nexport default class extends React.Component<DynamicTagProps> {\r\n  state = {\r\n    typing: false,\r\n    inputValue: '',\r\n    tags: [],\r\n  };\r\n  input: any = null;\r\n  constructor(props: DynamicTagProps) {\r\n    super(props);\r\n\r\n    this.handleButtonClick = this.handleButtonClick.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleInputConfirm = this.handleInputConfirm.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      tags: this.props.tags\r\n    });\r\n  }\r\n\r\n  handleButtonClick() {\r\n    this.setState(\r\n      {\r\n        typing: true,\r\n      },\r\n      () => {\r\n        this.input.focus();\r\n      }\r\n    );\r\n  }\r\n  handleInputChange(inputValue: string) {\r\n    this.setState({ inputValue });\r\n  }\r\n  handleInputConfirm() {\r\n    const { inputValue, tags } = this.state;\r\n    const nextTags = inputValue ? [...tags, inputValue] : tags;\r\n    this.setState({\r\n      tags: nextTags,\r\n      typing: false,\r\n      inputValue: '',\r\n    });\r\n    this.props.onChangeTags(nextTags);\r\n  }\r\n  handleTagRemove(tag: string) {\r\n    const { tags } = this.state;\r\n    const nextTags = tags.filter((item) => item !== tag);\r\n    this.setState({\r\n      tags: nextTags,\r\n    });\r\n    this.props.onChangeTags(nextTags);\r\n  }\r\n  renderInput() {\r\n    const { typing, inputValue } = this.state;\r\n\r\n    if (typing) {\r\n      return (\r\n        <Input\r\n          className='tag-input'\r\n          inputRef={(ref) => {\r\n            this.input = ref;\r\n          }}\r\n          size='xs'\r\n          style={{ width: 70 }}\r\n          value={inputValue}\r\n          onChange={this.handleInputChange}\r\n          onBlur={this.handleInputConfirm}\r\n          onPressEnter={this.handleInputConfirm}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <IconButton\r\n        className='tag-add-btn'\r\n        onClick={this.handleButtonClick}\r\n        icon={<Icon icon='plus' />}\r\n        appearance='ghost'\r\n        size='xs'\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    const { tags } = this.state;\r\n    return (\r\n      <TagGroup style={{ margin: '0 0' }}>\r\n        {tags.map((item, index) => (\r\n          <Tag\r\n            key={index}\r\n            closable\r\n            onClose={() => {\r\n              this.handleTagRemove(item);\r\n            }}\r\n          >\r\n            {item}\r\n          </Tag>\r\n        ))}\r\n        {this.renderInput()}\r\n      </TagGroup>\r\n    );\r\n  }\r\n}\r\n","export default {\r\n    tinyApiKey: 'r7lhlluswsk3hs9y4mrbwhg6taz9n6hrbk5ol14fuj9uzwaz',\r\n    // API_BASE: 'http://localhost:3000',\r\n    API_BASE: ''\r\n};","import React from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport environment from '../../../core/environment';\r\nimport { Post } from '../../../core/models/Post.model';\r\n\r\ninterface PostEditorProps {\r\n  onEditorChange: (content: string) => void;\r\n  post?: Post | null;\r\n}\r\n\r\nexport default (props: PostEditorProps) => {\r\n  return (\r\n    <Editor\r\n      apiKey={environment.tinyApiKey}\r\n      initialValue={props.post ? props.post.content : '<p>This is the initial content of the editor</p>'}\r\n      init={{\r\n        height: 300,\r\n        menubar: false,\r\n        plugins: [\r\n          'advlist autolink lists link charmap print preview anchor',\r\n          'searchreplace visualblocks code fullscreen',\r\n          'insertdatetime media table paste code codesample help wordcount',\r\n        ],\r\n        toolbar:\r\n          `undo redo | formatselect | bold italic backcolor codesample | \\\r\n              alignleft aligncenter alignright alignjustify | \\\r\n              bullist numlist outdent indent | removeformat | preview help`,\r\n      }}\r\n      onEditorChange={props.onEditorChange}\r\n    />\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Button, Container, ControlLabel, Form, Schema } from 'rsuite';\r\nimport DynamicTag from '../../core/components/controls/DynamicTag';\r\nimport Input from '../../core/components/controls/Input';\r\nimport { postActions } from '../../store/actions';\r\nimport { AppState } from '../../store/reducers';\r\nimport PostEditor from './PostEditor/PostEditor';\r\n\r\nconst { StringType, ArrayType } = Schema.Types;\r\nconst model = Schema.Model({\r\n  title: StringType('Por favor ingrese un titulo valido.').isRequiredOrEmpty(\r\n    'Este campo es obligatorio.'\r\n  ),\r\n  content: StringType('Por favor ingrese una un contenido valido.')\r\n    .isRequiredOrEmpty('Este campo es obligatorio.')\r\n    .minLength(6),\r\n  tags: ArrayType().of(StringType()).minLength(3),\r\n});\r\n\r\nexport default () => {\r\n  let form = useRef<any>(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const loading = useSelector((state: AppState) => state.posts.loading);\r\n  const currentPost = useSelector((state: AppState) => state.posts.currentPost);\r\n  const { id } = useParams() as any;\r\n\r\n  const [formValue, setFormValue] = useState({\r\n    title: '',\r\n    content: '',\r\n    tags: [] as string[],\r\n  });\r\n\r\n  const onPostSubmit = useCallback(() => {\r\n    if (form.current.check()) {\r\n      if (id) {\r\n        dispatch(postActions.updatePostAction({\r\n          ...currentPost,\r\n          ...formValue\r\n        }));\r\n      } else {\r\n        dispatch(postActions.createPostAction(formValue));\r\n      }\r\n    }\r\n  }, [dispatch, currentPost, formValue, id]);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(postActions.searchPostByIdAction(id));\r\n    }\r\n  }, [dispatch, id]);\r\n\r\n  useEffect(() => {\r\n    if (currentPost) {\r\n      setFormValue(currentPost as any);\r\n    }\r\n  }, [currentPost])\r\n\r\n  if (id && !currentPost) {\r\n    return <></>;\r\n  } \r\n\r\n  return (\r\n    <Container>\r\n      <Form\r\n        ref={form}\r\n        fluid\r\n        onChange={(formValue) => setFormValue(formValue as any)}\r\n        formValue={formValue}\r\n        model={model}\r\n      >\r\n        <Input label='Titulo' name='title' />\r\n\r\n        <PostEditor\r\n          post={currentPost}\r\n          onEditorChange={(content: string) =>\r\n            setFormValue({ ...formValue, content })\r\n          }\r\n        />\r\n        <br></br>\r\n        <ControlLabel style={{ marginTop: '20px' }}>\r\n          Etiquetas (Minimo 3*)\r\n        </ControlLabel>\r\n        <br></br>\r\n        <DynamicTag tags={formValue.tags} onChangeTags={(tags) => setFormValue({ ...formValue, tags })} />\r\n        <br></br>\r\n        <Button\r\n          loading={loading}\r\n          disabled={loading}\r\n          appearance='primary'\r\n          onClick={onPostSubmit}\r\n        >\r\n          Crear Post\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useCallback, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Container, Form, Button, Schema } from 'rsuite';\r\nimport { postActions } from '../../../store/actions';\r\nimport { AppState } from '../../../store/reducers';\r\nimport PostEditor from '../../CreatePostPage/PostEditor/PostEditor';\r\n\r\nconst { StringType } = Schema.Types;\r\nconst model = Schema.Model({\r\n  content: StringType('Por favor ingrese una un contenido valido.')\r\n    .isRequiredOrEmpty('Este campo es obligatorio.')\r\n    .minLength(6),\r\n});\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const post = useSelector((state: AppState) => state.posts.currentPost);\r\n  const user = useSelector((state: AppState) => state.auth.currentUser);\r\n  const [formValue, setFormValue] = useState({\r\n    content: '',\r\n  });\r\n  let form = useRef<any>(null);\r\n\r\n  const sendComment = useCallback(() => {\r\n    if (form.current.check() && post) {\r\n      dispatch(\r\n        postActions.createCommentAction({\r\n          ...formValue,\r\n          postId: post?._id as string,\r\n          votes: 0,\r\n          createdDate: new Date(),\r\n          owner: user ?? undefined,\r\n        })\r\n      );\r\n    }\r\n  }, [formValue, dispatch, user, post]);\r\n\r\n  return (\r\n    <Container>\r\n      <h4>Agregar Comentario</h4> \r\n      <br />\r\n      <Form\r\n        ref={form}\r\n        fluid\r\n        onChange={(formValue) => setFormValue(formValue as any)}\r\n        formValue={formValue}\r\n        model={model}\r\n      >\r\n        <PostEditor\r\n          onEditorChange={(content: string) =>\r\n            setFormValue({ ...formValue, content })\r\n          }\r\n        />\r\n        <br></br>\r\n        <Button appearance='primary' onClick={sendComment}>\r\n          Enviar comentario\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n","import moment from 'moment';\r\nimport React, { useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Avatar, Badge, Container, Divider, FlexboxGrid, Icon } from 'rsuite';\r\nimport { Comment } from '../../../../core/models/Comment.model';\r\nimport { postActions } from '../../../../store/actions';\r\n\r\ninterface PostCommentProps {\r\n  comment: Comment;\r\n}\r\n\r\nexport default ({ comment }: PostCommentProps) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const upvote = useCallback(() => {\r\n    dispatch(postActions.upvoteCommentAction(comment._id as string));\r\n  }, [comment, dispatch]);\r\n\r\n  const downvote = useCallback(() => {\r\n    dispatch(postActions.downvoteCommentAction(comment._id as string));\r\n  }, [comment, dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      <FlexboxGrid>\r\n        <FlexboxGrid.Item\r\n          colspan={2}\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Icon\r\n            icon='caret-up'\r\n            style={{\r\n              fontSize: '40px',\r\n              cursor: 'pointer',\r\n              color: comment?.voted ? 'cyan' : '',\r\n            }}\r\n            onClick={upvote}\r\n          ></Icon>\r\n          <h2>{comment?.votes}</h2>\r\n          <Icon\r\n            icon='caret-down'\r\n            style={{ fontSize: '40px', cursor: 'pointer' }}\r\n            onClick={downvote}\r\n          ></Icon>\r\n        </FlexboxGrid.Item>\r\n        <FlexboxGrid.Item colspan={18}>\r\n          <div\r\n            style={{ paddingTop: '20px' }}\r\n            dangerouslySetInnerHTML={{\r\n              __html: comment?.content ? comment?.content : '',\r\n            }}\r\n          ></div>\r\n        </FlexboxGrid.Item>\r\n        <FlexboxGrid.Item\r\n          colspan={4}\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          <Avatar src={comment.owner?.profileImg} />\r\n\r\n          <span>\r\n            {comment.owner?.name} - <Badge content={comment.owner?.rating} />\r\n          </span>\r\n          <span>{moment(comment.createdDate).fromNow()}</span>\r\n        </FlexboxGrid.Item>\r\n      </FlexboxGrid>\r\n      <Divider></Divider>\r\n    </Container>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Container } from 'rsuite';\r\nimport { AppState } from '../../../store/reducers';\r\nimport PostComment from './PostComment/PostComment';\r\n\r\nexport default () => {\r\n  const comments = useSelector(\r\n    (state: AppState) => state.posts.currentPostComments\r\n  );\r\n  return (\r\n    <>\r\n      {comments.length >= 1 ? (\r\n        <Container>\r\n          <h4>Comentarios</h4>\r\n          <br />\r\n          {comments.map((com) => (\r\n            <PostComment key={com._id} comment={com}></PostComment>\r\n          ))}\r\n        </Container>\r\n      ) : <span>Nadie ha comentado aun, sé el primero en hacerlo!</span>}\r\n    </>\r\n  );\r\n};\r\n","import React, { PropsWithChildren, useImperativeHandle, useState } from 'react';\r\nimport { Button, Modal } from 'rsuite';\r\n\r\ninterface ConfirmModalProps {\r\n  onConfirm: () => void;\r\n  onCancel?: () => void;\r\n}\r\n\r\ninterface ConfirmModalMembers {\r\n    open: () => any;\r\n}\r\n\r\nexport default React.forwardRef<ConfirmModalMembers, PropsWithChildren<ConfirmModalProps>>((props, ref) => {\r\n  const [show, setShow] = useState(false);\r\n  useImperativeHandle(ref, () => ({\r\n    open: () => setShow(true),\r\n  }));\r\n  return (\r\n    <Modal\r\n      backdrop='static'\r\n      show={show}\r\n      onHide={() => setShow(false)}\r\n      size='xs'\r\n    >\r\n      <Modal.Body>{props.children}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onConfirm} appearance='primary'>\r\n          Confirmar\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            setShow(false);\r\n            props.onCancel && props.onCancel();\r\n          }}\r\n          appearance='subtle'\r\n        >\r\n          Cancelar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n});\r\n","import React, { ElementRef, useCallback, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  ButtonToolbar,\r\n  Container,\r\n  FlexboxGrid,\r\n  Icon,\r\n} from 'rsuite';\r\nimport ConfirmModal from '../../../core/components/ConfirmModal';\r\nimport { Post } from '../../../core/models/Post.model';\r\nimport { postActions } from '../../../store/actions';\r\nimport { AppState } from '../../../store/reducers';\r\n\r\ninterface ViewPostHeaderProps {\r\n  post: Post | null;\r\n}\r\n\r\nexport default ({ post }: ViewPostHeaderProps) => {\r\n  const currentUser = useSelector((state: AppState) => state.auth.currentUser);\r\n  const modal = useRef<ElementRef<typeof ConfirmModal>>(null);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const deletePost = useCallback(() => {\r\n    dispatch(postActions.deletePostAction(post?._id as string));\r\n  }, [post, dispatch]);\r\n\r\n  return (\r\n    <Container style={{ maxHeight: '100px' }}>\r\n      <FlexboxGrid align='middle'>\r\n        <FlexboxGrid.Item colspan={20} order={1}>\r\n          <h1>{post?.title}</h1>\r\n        </FlexboxGrid.Item>\r\n        <FlexboxGrid.Item colspan={20}>\r\n          <ButtonToolbar>\r\n            <ButtonGroup>\r\n              {currentUser?._id === post?.owner?._id ? (\r\n                <>\r\n                  <Button\r\n                    appearance='subtle'\r\n                    onClick={() => history.push(location.pathname + '/edit')}\r\n                  >\r\n                    Editar\r\n                  </Button>\r\n                  <Button\r\n                    appearance='subtle'\r\n                    color='red'\r\n                    onClick={() => modal.current?.open()}\r\n                  >\r\n                    Borrar\r\n                  </Button>\r\n                </>\r\n              ) : null}\r\n              <Button appearance='subtle'>Compartir</Button>\r\n            </ButtonGroup>\r\n          </ButtonToolbar>\r\n        </FlexboxGrid.Item>\r\n      </FlexboxGrid>\r\n      <ConfirmModal ref={modal} onConfirm={deletePost}>\r\n        <Icon\r\n          icon='remind'\r\n          style={{\r\n            color: '#ffb300',\r\n            fontSize: 24,\r\n          }}\r\n        />\r\n        {'  '}\r\n        <p>\r\n          Una vez presione confirmar este post sera eliminado incluyendo sus\r\n          comentarios y todo lo relacionado a el.\r\n        </p>\r\n        <br />\r\n        <strong>¿Esta seguro que desea hacerlo?</strong>\r\n      </ConfirmModal>\r\n    </Container>\r\n  );\r\n};\r\n","import moment from 'moment';\r\nimport React, { useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  Avatar,\r\n  Badge,\r\n  Container,\r\n  Divider,\r\n  FlexboxGrid,\r\n  Icon,\r\n  Loader,\r\n} from 'rsuite';\r\nimport FlexboxGridItem from 'rsuite/lib/FlexboxGrid/FlexboxGridItem';\r\nimport { postActions } from '../../store/actions';\r\nimport { AppState } from '../../store/reducers';\r\nimport AddComment from './AddComment/AddComment';\r\nimport PostCommentList from './PostCommentsList/PostCommentList';\r\nimport ViewPostHeader from './ViewPostHeader/ViewPostHeader';\r\n\r\nexport default () => {\r\n  const { id } = useParams() as any;\r\n  const dispatch = useDispatch();\r\n  const { loading, currentPost: post } = useSelector(\r\n    (state: AppState) => state.posts\r\n  );\r\n  useEffect(() => {\r\n    dispatch(postActions.searchPostByIdAction(id));\r\n    dispatch(postActions.searchCommentsAction(id));\r\n  }, [id, dispatch]);\r\n\r\n  const upvote = useCallback(() => {\r\n    dispatch(postActions.upvotePostAction(id));\r\n  }, [id, dispatch]);\r\n\r\n  const downvote = useCallback(() => {\r\n    dispatch(postActions.downvotePostAction(id));\r\n  }, [id, dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      {loading ? (\r\n        <Loader content='Cargando Post...'></Loader>\r\n      ) : (\r\n        <>\r\n          <ViewPostHeader post={post}></ViewPostHeader>\r\n          <Divider></Divider>\r\n          <FlexboxGrid>\r\n            <FlexboxGridItem\r\n              colspan={2}\r\n              style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Icon\r\n                icon='caret-up'\r\n                style={{\r\n                  fontSize: '40px',\r\n                  cursor: 'pointer',\r\n                  color: post?.voted ? 'cyan' : '',\r\n                }}\r\n                onClick={upvote}\r\n              ></Icon>\r\n              <h2>{post?.votes}</h2>\r\n              <Icon\r\n                icon='caret-down'\r\n                style={{ fontSize: '40px', cursor: 'pointer' }}\r\n                onClick={downvote}\r\n              ></Icon>\r\n            </FlexboxGridItem>\r\n            <FlexboxGridItem colspan={18}>\r\n              <div\r\n                dangerouslySetInnerHTML={{\r\n                  __html: post?.content ? post?.content : '',\r\n                }}\r\n              ></div>\r\n            </FlexboxGridItem>\r\n            <FlexboxGrid.Item\r\n              colspan={4}\r\n              style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                justifyContent: 'center',\r\n              }}\r\n            >\r\n              <Avatar src={post?.owner?.profileImg} />\r\n\r\n              <span>\r\n                {post?.owner?.name} - <Badge content={post?.owner?.rating} />\r\n              </span>\r\n              <span>{moment(post?.createdDate).fromNow()}</span>\r\n            </FlexboxGrid.Item>\r\n          </FlexboxGrid>\r\n          <Divider></Divider>\r\n          <PostCommentList></PostCommentList>\r\n          <AddComment></AddComment>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\nimport { Panel, Tooltip, Whisper } from 'rsuite';\r\nimport { Course } from '../../../core/models/Course.model';\r\nimport { User } from '../../../core/models/User.model';\r\n\r\nimport './CourseSummary.css';\r\n\r\nexport interface CourseSummaryProps {\r\n  course: Course;\r\n}\r\n\r\nexport default ({ course }: CourseSummaryProps) => {\r\n  const match = useRouteMatch();\r\n  const history = useHistory();\r\n  return (\r\n    <Whisper\r\n      placement='bottom'\r\n      trigger='hover'\r\n      speaker={<Tooltip>{course.name}</Tooltip>}\r\n    >\r\n      <Panel\r\n        onClick={() => history.push(match.path + '/' + course._id + '/feed')}\r\n        shaded\r\n        bordered\r\n        bodyFill\r\n        style={{ display: 'inline-block', width: 300, cursor: 'pointer' }}\r\n      >\r\n        <img\r\n          src={course.backgroundImg}\r\n          height='240'\r\n          alt='Course background'\r\n        ></img>\r\n        <Panel\r\n          header={\r\n            <h4\r\n              style={{\r\n                overflow: 'hidden',\r\n                textOverflow: 'ellipsis',\r\n                whiteSpace: 'nowrap',\r\n                width: 250,\r\n              }}\r\n            >\r\n              {course.name}\r\n            </h4>\r\n          }\r\n        >\r\n          <p>Profesor: {(course.professor as User)?.name} {(course.professor as User)?.lastname}</p>\r\n        </Panel>\r\n      </Panel>\r\n    </Whisper>\r\n  );\r\n};\r\n","import React, { ElementRef } from 'react';\r\nimport { useState } from 'react';\r\nimport { Icon, Loader, Uploader } from 'rsuite';\r\nimport { FileType } from 'rsuite/lib/Uploader';\r\n\r\nfunction previewFile(file: File, callback: (arg: any) => void) {\r\n  const reader = new FileReader();\r\n  reader.onloadend = () => {\r\n    callback(reader.result);\r\n  };\r\n  reader.readAsDataURL(file as File);\r\n}\r\n\r\nconst styles = {\r\n  width: 150,\r\n  height: 150,\r\n};\r\n\r\nexport type UploaderProps = {\r\n  img?: string;\r\n  uploaderRef?: ElementRef<typeof Uploader>;\r\n  action: string;\r\n  autoupload?: boolean;\r\n  onSuccessUpload: (response: Object, file: FileType) => void;\r\n  onErrorUpload?: (error: any) => void;\r\n};\r\n\r\nexport default ({\r\n  img,\r\n  action,\r\n  autoupload = true,\r\n  uploaderRef,\r\n  onSuccessUpload,\r\n  onErrorUpload,\r\n}: UploaderProps) => {\r\n  const [uploading, setUploading] = useState(false);\r\n  const [fileInfo, setFileInfo] = useState(img);\r\n\r\n  return (\r\n    <Uploader\r\n      fileListVisible={false}\r\n      multiple={false}\r\n      listType='picture'\r\n      accept='image/*'\r\n      action={action}\r\n      ref={uploaderRef}\r\n      autoUpload={autoupload}\r\n      withCredentials\r\n      onChange={(file) => {\r\n        previewFile(file[0].blobFile as File, (value) => {\r\n          setFileInfo(value);\r\n        });\r\n      }}\r\n      onUpload={() => {\r\n        setUploading(true);\r\n      }}\r\n      onSuccess={(response: Object, file: FileType) => {\r\n        setUploading(false);\r\n        onSuccessUpload(response, file);\r\n      }}\r\n      onError={(error) => {\r\n        setFileInfo(null);\r\n        setUploading(false);\r\n        onErrorUpload(error);\r\n      }}\r\n    >\r\n      <button style={styles}>\r\n        {uploading && <Loader backdrop center />}\r\n        {fileInfo ? (\r\n          <img src={fileInfo} width='100%' height='100%' alt='profile' />\r\n        ) : (\r\n          <Icon icon='camera' size='5x' />\r\n        )}\r\n      </button>\r\n    </Uploader>\r\n  );\r\n};\r\n","import React, { useCallback, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Alert, Button, Col, Form, Grid, Modal, Row, Schema } from 'rsuite';\r\nimport ImageUploader from '../../../core/components/controls/ImageUploader';\r\nimport Input from '../../../core/components/controls/Input';\r\nimport environment from '../../../core/environment';\r\nimport { createCourseAction } from '../../../store/actions/course.action';\r\nimport { AppState } from '../../../store/reducers';\r\nimport { getCurrentPeriod, getPeriods } from '../CoursesList';\r\n\r\nexport interface CreateCourseModalProps {\r\n  show: boolean;\r\n  close: () => void;\r\n}\r\n\r\nconst { StringType, NumberType } = Schema.Types;\r\nconst model = Schema.Model({\r\n  name: StringType('Por favor ingrese un nombre valido.')\r\n    .isRequired('Este campo es obligatorio.')\r\n    .maxLength(100),\r\n  period: StringType('Por favor ingrese un periodo valido.')\r\n    .isRequired('Este campo es obligatorio')\r\n    .maxLength(30),\r\n  capacity: NumberType('Por favor ingrese una capacidad valida.')\r\n    .isRequired('Este campo es obligatorio.')\r\n    .min(10),\r\n});\r\n\r\nexport default ({ show, close }: CreateCourseModalProps) => {\r\n  const initialValue = {\r\n    name: '',\r\n    period: getCurrentPeriod(),\r\n    capacity: 10,\r\n  };\r\n  const dispatch = useDispatch();\r\n  const [formValue, setFormValue] = useState(initialValue);\r\n  let form = useRef<any>(null);\r\n  let uploader = useRef<any>(null);\r\n  const currentUser = useSelector((state: AppState) => state.auth.currentUser);\r\n  const course = useSelector((state: AppState) => state.courses.currentCourse);\r\n\r\n  const resetForm = useCallback(() => {\r\n    setFormValue(initialValue);\r\n  }, [initialValue]);\r\n\r\n  const handleUploadSuccess = useCallback(\r\n    ({ url }) => {\r\n      dispatch(\r\n        createCourseAction({\r\n          backgroundImg: url,\r\n          professor: currentUser._id,\r\n          alumns: [],\r\n          ...formValue,\r\n        })\r\n      );\r\n    },\r\n    [dispatch, formValue, currentUser]\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      backdrop={true}\r\n      show={show}\r\n      onHide={() => {\r\n        resetForm();\r\n        close();\r\n      }}\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title>Crear nueva asignacion</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form\r\n          ref={form}\r\n          fluid\r\n          onChange={(formValue) => setFormValue(formValue as any)}\r\n          formValue={formValue}\r\n          model={model}\r\n        >\r\n          <Grid fluid>\r\n            <Row>\r\n              <Col mdOffset={8} md={8}>\r\n                <ImageUploader\r\n                  action={encodeURIComponent(`${environment.API_BASE}/courses/uploadCourseImg?courseName=${course?.name}`)}\r\n                  onSuccessUpload={handleUploadSuccess}\r\n                  autoupload={false}\r\n                  uploaderRef={uploader}\r\n                ></ImageUploader>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={24}>\r\n                <Input label='Nombre' name='name' />\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            <Row>\r\n              <Col md={12}>\r\n                <Input label='Periodo' name='period' type='select' data={getPeriods().map(x => ({ label: x, value: x }))} />\r\n              </Col>\r\n              <Col md={12}>\r\n                <Input label='Capacidad' name='capacity' type='number' min={10} max={50} />\r\n              </Col>\r\n            </Row>\r\n          </Grid>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={close} appearance='primary'>\r\n          Cerrar\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            if (!form.current.check()) return;\r\n            if (uploader.current.state.fileList.length === 0) {\r\n              Alert.error('Por favor seleccione una imagen para el curso.');\r\n            } else {\r\n              uploader.current.start();\r\n            }\r\n          }}\r\n          appearance='primary'\r\n        >\r\n          Guardar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Col, Container, Divider, Loader, Radio, RadioGroup, Row } from 'rsuite';\r\nimport { courseActions } from '../../store/actions';\r\nimport { AppState } from '../../store/reducers';\r\nimport CourseSummary from './CourseSummary/CourseSummary';\r\n\r\nimport './CoursesList.css';\r\nimport CreateCourseModal from './CreateCourseModal/CreateCourseModal';\r\n\r\nexport const getCurrentPeriod = () => {\r\n  const date = new Date();\r\n  const year = date.getUTCFullYear();\r\n  const month = date.getUTCMonth();\r\n\r\n  let letter: string;\r\n\r\n  if (month >= 0 && month <= 4) {\r\n    letter = 'A';\r\n  } else if (month > 4 && month <= 8) {\r\n    letter = 'B';\r\n  } else if (month > 8 && month <= 12) {\r\n    letter = 'C';\r\n  }\r\n\r\n  return `${year}-${letter}`;\r\n};\r\n\r\nexport const getPeriods = () => {\r\n  const date = new Date();\r\n\r\n  if (date.getUTCMonth() <= 4) {\r\n    return [\r\n      date.getUTCFullYear() - 1 + '-C',\r\n      date.getUTCFullYear() + '-A',\r\n      date.getUTCFullYear() + '-B',\r\n    ];\r\n  } else if (date.getUTCMonth() <= 8) {\r\n    return [\r\n      date.getUTCFullYear() + '-A',\r\n      date.getUTCFullYear() + '-B',\r\n      date.getUTCFullYear() + '-C',\r\n    ];\r\n  } else if (date.getUTCMonth() <= 12) {\r\n    return [\r\n      date.getUTCFullYear() + '-B',\r\n      date.getUTCFullYear() + '-C',\r\n      (date.getUTCFullYear() + 1) + '-A',\r\n    ];\r\n  }\r\n};\r\n\r\nexport default () => {\r\n  const currentUser = useSelector((state: AppState) => state.auth.currentUser);\r\n  const currentCourses = useSelector(\r\n    (state: AppState) => state.courses.currentCourses\r\n  );\r\n  const loading = useSelector((state: AppState) => state.courses.loading);\r\n  const [selectedPeriod, setSelectedPeriod] = useState(getCurrentPeriod());\r\n  const [showCourseModal, setShowCourseModal] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const closeModal = useCallback(() => {\r\n    setShowCourseModal(false);\r\n  }, [setShowCourseModal]);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      courseActions.searchCoursesAction({\r\n        userType: currentUser.type,\r\n        period: selectedPeriod,\r\n      })\r\n    );\r\n  }, [dispatch, currentUser, selectedPeriod]);\r\n\r\n  if (loading) {\r\n    return <Loader size='lg' content='Cargando...' />;\r\n  }\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <h1>\r\n          Cursos{' '}\r\n          {currentUser.type === 'professor' ? (\r\n            <>\r\n              &bull;{' '}\r\n              <Button onClick={() => setShowCourseModal(true)}>\r\n                Agregar curso\r\n              </Button>\r\n            </>\r\n          ) : null}\r\n        </h1>\r\n        <RadioGroup inline onChange={setSelectedPeriod} value={selectedPeriod}>\r\n          {getPeriods().map((x, index) => <Radio key={x} value={x} checked={x === getCurrentPeriod()}>{x}</Radio>)}\r\n        </RadioGroup>\r\n        <Divider />\r\n        {currentCourses.map((x) => (\r\n          <Col key={x._id} sm={24} md={8}>\r\n            <CourseSummary course={x}></CourseSummary>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n      <CreateCourseModal close={closeModal} show={showCourseModal} />\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Col, Container, Grid, Icon, Nav, Row } from 'rsuite';\r\nimport { getAllCourseAttachmentsAction } from '../../../store/actions/course.action';\r\nimport { AppState } from '../../../store/reducers';\r\n\r\nconst imageExtensions = ['png', 'jpg'];\r\nconst documentExtensions = ['pdf', 'docx', 'doc', '.rtf'];\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const [activeTab, setActiveTab] = useState('images');\r\n  const currentAttachments = useSelector(\r\n    (state: AppState) => state.courses.currentAttachments\r\n  );\r\n  const course = useSelector((state: AppState) => state.courses.currentCourse);\r\n\r\n  useEffect(() => {\r\n    if (!course) return;\r\n\r\n    dispatch(getAllCourseAttachmentsAction(course._id));\r\n  }, [dispatch, course]);\r\n\r\n  let selectedAttachs = [];\r\n  let component;\r\n  switch (activeTab) {\r\n    case 'images':\r\n      selectedAttachs = currentAttachments.filter((x) =>\r\n        imageExtensions.includes(x.extension.replace('.', ''))\r\n      );\r\n      component = selectedAttachs.map((x) => (\r\n        <Col\r\n          key={x._id}\r\n          sm={8}\r\n          style={{ height: 300, width: 300 }}\r\n          onClick={() => window.open(x.url)}\r\n        >\r\n          <img\r\n            src={x.url}\r\n            alt={x.title}\r\n            style={{ height: '100%', width: '100%', cursor: 'pointer' }}\r\n          ></img>\r\n        </Col>\r\n      ));\r\n      break;\r\n    case 'documents':\r\n      selectedAttachs = currentAttachments.filter((x) =>\r\n        documentExtensions.includes(x.extension.replace('.', ''))\r\n      );\r\n      component = selectedAttachs.map((x) => (\r\n        <Col\r\n          key={x._id}\r\n          sm={8}\r\n          style={{\r\n            padding: 20,\r\n            borderRadius: 10,\r\n            border: '1px solid gray',\r\n            cursor: 'pointer',\r\n          }}\r\n          onClick={() => window.open(x.url)}\r\n        >\r\n          <Icon icon='file-text-o' size='4x' style={{ marginRight: 20 }} />\r\n          <strong>{x.title}</strong>\r\n        </Col>\r\n      ));\r\n      break;\r\n    default:\r\n      selectedAttachs = currentAttachments.filter(\r\n        (x) =>\r\n          !documentExtensions.includes(x.extension.replace('.', '')) &&\r\n          !imageExtensions.includes(x.extension.replace('.', ''))\r\n      );\r\n      component = selectedAttachs.map((x) => (\r\n        <Col\r\n          key={x._id}\r\n          sm={8}\r\n          style={{\r\n            padding: 20,\r\n            borderRadius: 10,\r\n            border: '1px solid gray',\r\n            cursor: 'pointer',\r\n          }}\r\n          onClick={() => window.open(x.url)}\r\n        >\r\n          <Icon icon='file-o' size='4x' style={{ marginRight: 20 }} />\r\n          <strong>{x.title}</strong>\r\n        </Col>\r\n      ));\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Nav\r\n        justified\r\n        appearance='tabs'\r\n        activeKey={activeTab}\r\n        onSelect={setActiveTab}\r\n      >\r\n        <Nav.Item key='images' eventKey='images'>\r\n          Imagenes\r\n        </Nav.Item>\r\n        <Nav.Item key='documents' eventKey='documents'>\r\n          Documentos\r\n        </Nav.Item>\r\n        <Nav.Item key='others' eventKey='others'>\r\n          Otros\r\n        </Nav.Item>\r\n      </Nav>\r\n      <Grid style={{ margin: 0, padding: 0 }}>\r\n        <Row style={{ paddingTop: 20, paddingLeft: 0 }}>\r\n          {selectedAttachs.length === 0 ? (\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                height: 600,\r\n              }}\r\n            >\r\n              <span>No hay archivos que mostrar</span> &nbsp;&nbsp;&nbsp;\r\n              <Icon icon='meh-o' size='2x' />\r\n            </div>\r\n          ) : (\r\n            component\r\n          )}\r\n        </Row>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { ElementRef } from 'react';\r\nimport { Uploader } from 'rsuite';\r\n\r\nexport type UploaderProps = {\r\n  uploaderRef?: ElementRef<typeof Uploader>;\r\n  action: string;\r\n  onUploadSuccess?: (attachment: any) => void;\r\n};\r\n\r\nconst styles = {\r\n  lineHeight: '100px',\r\n};\r\n\r\nexport default ({ action, uploaderRef, onUploadSuccess }: UploaderProps) => {\r\n  return (\r\n    <Uploader\r\n      action={action}\r\n      draggable\r\n      autoUpload={false}\r\n      ref={uploaderRef}\r\n      multiple\r\n      withCredentials\r\n      onSuccess={(res: any) => {\r\n        onUploadSuccess && onUploadSuccess(res.attachment);\r\n      }}\r\n    >\r\n      <div style={styles}>Clic o arrastra aqui para subir</div>\r\n    </Uploader>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Col, Container, Grid, Icon, IconButton, Row } from 'rsuite';\r\nimport Input from '../../../core/components/controls/Input';\r\nimport { ExamQuestion } from '../../../core/models/Exam.model';\r\n\r\ninterface ExamQuestionProps {\r\n  question: ExamQuestion;\r\n  editable: boolean;\r\n  readonly: boolean;\r\n}\r\n\r\nexport default ({ question, editable, readonly }: ExamQuestionProps) => {\r\n  return (\r\n    <Container style={{ marginBottom: 40 }}>\r\n      <Grid>\r\n        <Row>\r\n          <Col sm={20}>\r\n            <label>\r\n              <h3>\r\n                {question.order}. {question.label}\r\n              </h3>\r\n            </label>\r\n          </Col>\r\n          <Col sm={2} smOffset={2}>\r\n            {editable ? (\r\n              <div>\r\n                <IconButton\r\n                  icon={<Icon icon='pencil' style={{ color: 'white' }} />}\r\n                  circle\r\n                />\r\n\r\n                <IconButton\r\n                  icon={<Icon icon='trash-o' style={{ color: 'red' }} />}\r\n                  circle\r\n                />\r\n              </div>\r\n            ) : null}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Input\r\n            readonly={readonly}\r\n            label='Respuesta'\r\n            disableSearch={true}\r\n            name={question.order.toString()}\r\n            type={question.type as any}\r\n            data={question.options.map((x) => ({ label: x, value: x }))}\r\n          />\r\n        </Row>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","import React, {\r\n  forwardRef,\r\n  useCallback,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Divider,\r\n  Form,\r\n  Grid,\r\n  Row,\r\n  Schema,\r\n} from 'rsuite';\r\nimport Input from '../../core/components/controls/Input';\r\nimport {\r\n  DeliveredExam,\r\n  DeliveredExamAnswer,\r\n} from '../../core/models/DeliveredExam.model';\r\nimport {\r\n  addExamQuestion,\r\n  createDeliveredExamAction,\r\n  getExamsAction,\r\n} from '../../store/actions/exam.actions';\r\nimport { AppState } from '../../store/reducers';\r\nimport ExamQuestion from './ExamQuestion/ExamQuestion';\r\n\r\nconst { StringType, ArrayType, NumberType, BooleanType } = Schema.Types;\r\nconst model = Schema.Model({\r\n  label: StringType('Por favor ingrese un enunciado valido.')\r\n    .isRequired('Este campo es obligatorio.')\r\n    .maxLength(1000),\r\n  type: StringType('Por favor ingrese un tipo valido')\r\n    .isRequired('Este campo es obligatorio.')\r\n    .maxLength(100),\r\n  options: ArrayType('Por favor ingrese opciones validas'),\r\n  order: NumberType('Por favor ingrese un numero valido').isRequired(\r\n    'Este campo es obligatorio.'\r\n  ),\r\n});\r\n\r\nconst questionTypes = [\r\n  {\r\n    label: 'Texto',\r\n    value: 'textarea',\r\n  },\r\n  {\r\n    label: 'Seleccion multiple',\r\n    value: 'select',\r\n  },\r\n  {\r\n    label: 'Verdadero y falso',\r\n    value: 'boolean',\r\n  },\r\n];\r\n\r\ninterface ExamViewerProps {\r\n  fetchExam?: boolean;\r\n  readonly?: boolean;\r\n}\r\n\r\nexport default forwardRef(({ fetchExam = true, readonly }: ExamViewerProps, ref) => {\r\n  const dispatch = useDispatch();\r\n  const currentExam = useSelector((state: AppState) => state.exams.currentExam);\r\n  const currentUser = useSelector((state: AppState) => state.auth.currentUser);\r\n  const loading = useSelector((state: AppState) => state.exams.loading);\r\n\r\n  const initialValue = {\r\n    label: '',\r\n    type: '',\r\n    options: [],\r\n    order: 1,\r\n  };\r\n  const [formValue, setFormValue] = useState(initialValue);\r\n  const form = useRef<any>(null);\r\n\r\n  const [answerFormValue, setAnswerFormValue] = useState({});\r\n  const [answerModel, setAnswerModel] = useState({});\r\n  const answerForm = useRef<any>(null);\r\n\r\n  useEffect(() => {\r\n    const auxModel = {};\r\n\r\n    currentExam?.questions.forEach((x) => {\r\n      switch (x.type) {\r\n        case 'select':\r\n        case 'textarea':\r\n          auxModel[x.order] = StringType(\r\n            'Por favor ingrese una respuesta valida'\r\n          ).isRequired('Este campo es obligatorio.');\r\n          break;\r\n        case 'boolean':\r\n          auxModel[x.order] = BooleanType(\r\n            'Por favor ingrese una respuesta valida'\r\n          ).isRequired('Este campo es obligatorio');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n    setAnswerModel(auxModel);\r\n  }, [currentExam]);\r\n\r\n  const { id } = useParams() as any;\r\n\r\n  useEffect(() => {\r\n    if (!fetchExam) return;\r\n    dispatch(getExamsAction(id));\r\n  }, [dispatch, id, fetchExam]);\r\n\r\n  const saveExamQuestion = useCallback(() => {\r\n    if (form.current.check()) {\r\n      if (formValue.type === 'boolean') {\r\n        dispatch(\r\n          addExamQuestion({\r\n            ...formValue,\r\n            type: 'select',\r\n            options: ['Verdadero', 'Falso'],\r\n            exam: currentExam?._id,\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(\r\n          addExamQuestion({\r\n            ...formValue,\r\n            exam: currentExam?._id,\r\n          })\r\n        );\r\n      }\r\n      setFormValue(initialValue);\r\n    }\r\n  }, [dispatch, formValue, currentExam, initialValue]);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    sendExamAnswers: () => {\r\n      if (answerForm.current.check() && answerFormValue !== undefined) {\r\n        const answers: DeliveredExamAnswer[] = [];\r\n        for (const key in answerFormValue) {\r\n          const element = answerFormValue[key];\r\n          answers.push({\r\n            question: parseInt(key),\r\n            value: element,\r\n          });\r\n        }\r\n        const delivered = {\r\n          exam: currentExam._id,\r\n          owner: currentUser._id,\r\n          answers,\r\n        } as DeliveredExam;\r\n        dispatch(createDeliveredExamAction(delivered));\r\n      }\r\n    },\r\n    setExamAnswers: (answers: DeliveredExamAnswer[]) => {\r\n      const answerValue = {};\r\n      answers.forEach((a) => {\r\n        answerValue[a.question] = a.value;\r\n      });\r\n\r\n      setAnswerFormValue(answerValue);\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <Container>\r\n      <h1>{currentExam?.name}</h1>\r\n      <Divider />\r\n      {currentUser?.type === 'professor' && !readonly ? (\r\n        <>\r\n          <Form\r\n            ref={form}\r\n            onChange={setFormValue}\r\n            formValue={formValue}\r\n            model={model}\r\n            fluid\r\n          >\r\n            <Grid>\r\n              <Row style={{ marginBottom: 30 }}>\r\n                <Col sm={6}>\r\n                  <Input\r\n                    label='Enunciado'\r\n                    name='label'\r\n                    type='textarea'\r\n                    rows={5}\r\n                  />\r\n                </Col>\r\n                <Col sm={5} smOffset={1}>\r\n                  <Input\r\n                    label='Tipo'\r\n                    name='type'\r\n                    type='select'\r\n                    data={questionTypes}\r\n                  />\r\n                </Col>\r\n                {formValue.type === 'select' ? (\r\n                  <Col sm={5} smOffset={1}>\r\n                    <Input\r\n                      label='Opciones'\r\n                      name='options'\r\n                      type='tags'\r\n                      data={[]}\r\n                      placeholder='Agregue opciones'\r\n                    />\r\n                  </Col>\r\n                ) : null}\r\n                <Col sm={4} smOffset={1}>\r\n                  <Input label='Orden' name='order' type='number' />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col sm={4}>\r\n                  <Button\r\n                    color='blue'\r\n                    onClick={saveExamQuestion}\r\n                    loading={loading}\r\n                    block\r\n                  >\r\n                    Agregar pregunta\r\n                  </Button>\r\n                </Col>\r\n                <Col sm={4} smOffset={1}>\r\n                  <Button\r\n                    color='red'\r\n                    onClick={() => setFormValue(initialValue)}\r\n                    block\r\n                  >\r\n                    Cancelar\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Grid>\r\n          </Form>\r\n          <Divider />\r\n        </>\r\n      ) : null}\r\n      <Form\r\n        ref={answerForm}\r\n        model={Schema.Model(answerModel)}\r\n        onChange={setAnswerFormValue}\r\n        formValue={answerFormValue}\r\n        fluid\r\n      >\r\n        {currentExam?.questions\r\n          .sort((a, b) => a.order - b.order)\r\n          .map((x, index) => (\r\n            <ExamQuestion\r\n              readonly={readonly}\r\n              key={index}\r\n              question={x}\r\n              editable={currentUser?._id === currentExam.creator && !readonly}\r\n            />\r\n          ))}\r\n      </Form>\r\n    </Container>\r\n  );\r\n});\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Button, Icon, Modal } from 'rsuite';\r\nimport { DeliveredExam } from '../../../../../core/models/DeliveredExam.model';\r\nimport ExamViewer from '../../../../../exams/ExamViewer/ExamViewer';\r\nimport { AppState } from '../../../../../store/reducers';\r\n\r\ninterface CreateDeliveredExamProps {\r\n  show: boolean;\r\n  close: () => void;\r\n  deliveredExam?: DeliveredExam;\r\n  readonly: boolean;\r\n}\r\n\r\nexport default (props: CreateDeliveredExamProps) => {\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const exam = useSelector((state: AppState) => state.exams.currentExam);\r\n  const loading = useSelector((state: AppState) => state.exams.loading);\r\n  const viewerRef = useRef<any>(null);\r\n\r\n  const saveExam = useCallback(() => {\r\n    setShowConfirm(false);\r\n    viewerRef.current.sendExamAnswers();\r\n    props.close();\r\n  }, [props]);\r\n\r\n  const { deliveredExam, readonly, show } = props;\r\n\r\n  useEffect(() => {\r\n    if (!deliveredExam || !readonly || !show) return;\r\n    setTimeout(\r\n      () => viewerRef.current.setExamAnswers(deliveredExam.answers),\r\n      1000\r\n    );\r\n  }, [deliveredExam, readonly, show]);\r\n\r\n  return (\r\n    <Modal show={props.show} onHide={props.close} full backdrop='static'>\r\n      <Modal.Header>\r\n        <Modal.Title>{exam?.name}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <ExamViewer fetchExam={false} ref={viewerRef} readonly={readonly} />\r\n        <Modal show={showConfirm} onHide={() => setShowConfirm(false)}>\r\n          <Modal.Header>\r\n            <Modal.Title>Confirmar submision</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Icon\r\n              icon='remind'\r\n              style={{\r\n                color: '#ffb300',\r\n                fontSize: 24,\r\n              }}\r\n            />\r\n            Una vez confirmada la submision no podra modificar sus respuestas.\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button color='red' onClick={() => setShowConfirm(false)}>\r\n              Cancelar\r\n            </Button>\r\n            <Button color='blue' onClick={saveExam} loading={loading}>\r\n              Confirmar\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button color='red' onClick={props.close}>\r\n          {props.readonly ? 'Cerrar' : 'Cancelar'}\r\n        </Button>\r\n        {props.readonly ? null : (\r\n          <Button color='blue' onClick={() => setShowConfirm(true)}>\r\n            Confirmar\r\n          </Button>\r\n        )}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n","import React, { useCallback, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, ControlLabel, Input, Modal } from 'rsuite';\r\nimport FileUploader from '../../../../../core/components/controls/FileUploader';\r\nimport { DeliveredAssignation } from '../../../../../core/models/DeliveredAssignation.model';\r\nimport { Exam } from '../../../../../core/models/Exam.model';\r\nimport { createDeliveredAssignationAction } from '../../../../../store/actions/course.action';\r\nimport { setCurrentExamAction } from '../../../../../store/actions/exam.actions';\r\nimport { AppState } from '../../../../../store/reducers';\r\nimport CreateDeliveredExamModal from '../CreateDeliveredExamModal/CreateDeliveredExamModal';\r\n\r\nexport interface CreateDeliveredModalProps {\r\n  show: boolean;\r\n  close: () => void;\r\n}\r\n\r\nexport default ({ show, close }: CreateDeliveredModalProps) => {\r\n  const [createdAttachments, setCreatedAttachments] = useState([]);\r\n  const [showExam, setShowExam] = useState(false);\r\n  const [comment, setComment] = useState('');\r\n  const dispatch = useDispatch();\r\n  const uploader = useRef<any>(null);\r\n  const currentDeliveredExam = useSelector(\r\n    (state: AppState) => state.exams.currentDeliveredExam\r\n  );\r\n  const assignation = useSelector(\r\n    (state: AppState) => state.courses.currentAssignation\r\n  );\r\n\r\n  const handleUploadSuccess = useCallback(\r\n    (newAttach) => {\r\n      if (!newAttach) {\r\n        dispatch(\r\n          createDeliveredAssignationAction({\r\n            comment,\r\n            attachments: [],\r\n            assignation: assignation?._id,\r\n            exam: currentDeliveredExam ? currentDeliveredExam._id : '',\r\n          } as DeliveredAssignation)\r\n        );\r\n        close();\r\n      } else {\r\n        const nextAttachs = [...createdAttachments, newAttach];\r\n        setCreatedAttachments(nextAttachs);\r\n        if (nextAttachs.length === uploader.current.state.fileList.length) {\r\n          dispatch(\r\n            createDeliveredAssignationAction({\r\n              attachments: nextAttachs.map((x) => x._id),\r\n              assignation: assignation?._id,\r\n              comment,\r\n              exam: currentDeliveredExam ? currentDeliveredExam._id : '',\r\n            } as DeliveredAssignation)\r\n          );\r\n          close();\r\n        }\r\n      }\r\n    },\r\n    [\r\n      dispatch,\r\n      createdAttachments,\r\n      close,\r\n      comment,\r\n      assignation,\r\n      currentDeliveredExam,\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>Entrega de asignacion</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <ControlLabel>Comentario</ControlLabel>\r\n          <Input\r\n            onChange={setComment}\r\n            value={comment}\r\n            type='textarea'\r\n            style={{ marginBottom: 20 }}\r\n          />\r\n          {assignation?.exam ? (\r\n            currentDeliveredExam ? (\r\n              <Button\r\n                onClick={() => {\r\n                  dispatch(setCurrentExamAction(assignation.exam as Exam));\r\n                  setShowExam(true);\r\n                }}\r\n                color='blue'\r\n                block\r\n                style={{ marginBottom: 20 }}\r\n              >\r\n                Ver respuestas\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                color='blue'\r\n                style={{ marginBottom: 20 }}\r\n                block\r\n                onClick={() => {\r\n                  dispatch(setCurrentExamAction(assignation.exam as Exam));\r\n                  setShowExam(true);\r\n                }}\r\n              >\r\n                Realizar examen\r\n              </Button>\r\n            )\r\n          ) : null}\r\n          <FileUploader\r\n            action='/attachments/upload'\r\n            onUploadSuccess={handleUploadSuccess}\r\n            uploaderRef={uploader}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button color='red' onClick={close}>\r\n            Cancelar\r\n          </Button>\r\n          <Button\r\n            color='blue'\r\n            onClick={() => {\r\n              if (uploader.current.state.fileList.length > 0) {\r\n                uploader.current.start();\r\n              } else {\r\n                handleUploadSuccess(null);\r\n              }\r\n            }}\r\n          >\r\n            Confirmar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <CreateDeliveredExamModal\r\n        show={showExam}\r\n        close={() => setShowExam(false)}\r\n        deliveredExam={currentDeliveredExam}\r\n        readonly={!!currentDeliveredExam}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React, { useCallback, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Button,\r\n  Col,\r\n  Divider,\r\n  Grid,\r\n  Icon,\r\n  List,\r\n  Modal,\r\n  Row,\r\n  SelectPicker,\r\n} from 'rsuite';\r\nimport { Attachment } from '../../../../../core/models/Attachment.model';\r\nimport { CourseGrade } from '../../../../../core/models/CourseGrade.model';\r\nimport { DeliveredAssignation } from '../../../../../core/models/DeliveredAssignation.model';\r\nimport { DeliveredExam } from '../../../../../core/models/DeliveredExam.model';\r\nimport { Exam } from '../../../../../core/models/Exam.model';\r\nimport { User } from '../../../../../core/models/User.model';\r\nimport {\r\n  createAlumnGradeAction,\r\n  updateAlumnGradeAction,\r\n} from '../../../../../store/actions/course.action';\r\nimport { setCurrentExamAction } from '../../../../../store/actions/exam.actions';\r\nimport { AppState } from '../../../../../store/reducers';\r\nimport CreateDeliveredExamModal from '../CreateDeliveredExamModal/CreateDeliveredExamModal';\r\n\r\nexport interface DeliveredDetailModalProps {\r\n  show: boolean;\r\n  close: () => void;\r\n  delivered: DeliveredAssignation;\r\n}\r\n\r\nconst possibleGrades = [\r\n  'SI',\r\n  'NP',\r\n  '01',\r\n  '02',\r\n  '03',\r\n  '04',\r\n  '05',\r\n  '06',\r\n  '07',\r\n  '08',\r\n  '09',\r\n  '10',\r\n  '11',\r\n  '12',\r\n  '13',\r\n  '14',\r\n  '15',\r\n  '16',\r\n  '17',\r\n  '18',\r\n  '19',\r\n  '20',\r\n];\r\n\r\nexport default ({ show, close, delivered }: DeliveredDetailModalProps) => {\r\n  const dispatch = useDispatch();\r\n  const [grade, setGrade] = useState(delivered.grade?.value);\r\n  const [showExam, setShowExam] = useState(false);\r\n  const course = useSelector((state: AppState) => state.courses.currentCourse);\r\n  const currentUser = useSelector((state: AppState) => state.auth.currentUser);\r\n  const assignation = useSelector(\r\n    (state: AppState) => state.courses.currentAssignation\r\n  );\r\n\r\n  const saveGrade = useCallback(() => {\r\n    if (delivered.grade) {\r\n      dispatch(\r\n        updateAlumnGradeAction({\r\n          alumn: delivered.owner._id,\r\n          grade: (assignation.grade as CourseGrade)._id,\r\n          value: grade,\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        createAlumnGradeAction({\r\n          alumn: delivered.owner._id,\r\n          grade: (assignation.grade as CourseGrade)._id,\r\n          value: grade,\r\n        })\r\n      );\r\n    }\r\n\r\n    close();\r\n  }, [dispatch, grade, assignation, delivered, close]);\r\n\r\n  return (\r\n    <Modal show={show} onHide={close} backdrop='static'>\r\n      <Modal.Header>\r\n        <Modal.Title>\r\n          Entrega de {delivered?.owner.name} {delivered?.owner.lastname} - C.I.{' '}\r\n          {delivered?.owner.identification}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <p>{delivered?.comment}</p>\r\n\r\n        {delivered?.exam ? (\r\n          <>\r\n            <h4>Examen</h4>\r\n            <Divider />\r\n            <Button\r\n              color='blue'\r\n              block\r\n              onClick={() => {\r\n                dispatch(setCurrentExamAction(assignation.exam as Exam));\r\n                setShowExam(true);\r\n              }}\r\n            >\r\n              Ver respuestas\r\n            </Button>\r\n          </>\r\n        ) : null}\r\n        {delivered?.attachments.length === 0 ? null : (\r\n          <>\r\n            <h4>Archivos adjuntos</h4>\r\n          </>\r\n        )}\r\n        <List hover>\r\n          {(delivered?.attachments as Attachment[])?.map((x) => (\r\n            <List.Item\r\n              key={x._id}\r\n              style={{ cursor: 'pointer' }}\r\n              onClick={() => window.open(x.url)}\r\n            >\r\n              <Grid fluid>\r\n                <Row>\r\n                  <Col sm={4}>\r\n                    <Icon\r\n                      icon='file-text-o'\r\n                      style={{ cursor: 'pointer', display: 'inline' }}\r\n                      onClick={() => window.open(x.url)}\r\n                      size='4x'\r\n                    ></Icon>\r\n                  </Col>\r\n                  <Col sm={20}>\r\n                    <h5>{x.title}</h5>\r\n                  </Col>\r\n                </Row>\r\n              </Grid>\r\n            </List.Item>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <h3>Nota</h3>\r\n        {(course?.professor as User)?._id === currentUser._id ? (\r\n          <>\r\n            <SelectPicker\r\n              searchable={false}\r\n              placement='topStart'\r\n              onChange={setGrade}\r\n              value={grade}\r\n              data={possibleGrades.map((x) => ({ label: x, value: x }))}\r\n            />\r\n          </>\r\n        ) : delivered.grade ? (\r\n          <h5>{delivered.grade?.value}</h5>\r\n        ) : (\r\n          <h5>Pendiente</h5>\r\n        )}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button color='red' onClick={close}>\r\n          Cerrar\r\n        </Button>\r\n        {(course?.professor as User)?._id === currentUser._id ? (\r\n          <Button color='blue' onClick={saveGrade} disabled={!grade}>\r\n            Guardar\r\n          </Button>\r\n        ) : null}\r\n      </Modal.Footer>\r\n      <CreateDeliveredExamModal\r\n        show={showExam}\r\n        close={() => setShowExam(false)}\r\n        readonly={true}\r\n        deliveredExam={delivered?.exam as DeliveredExam}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Icon,\r\n  List,\r\n  Row,\r\n  Tooltip,\r\n  Whisper,\r\n} from 'rsuite';\r\nimport {\r\n  deleteAssignationAction,\r\n  deleteDeliveredAssignationAction,\r\n  searchSingleAssignationAction,\r\n} from '../../../../store/actions/course.action';\r\nimport { AppState } from '../../../../store/reducers';\r\nimport moment from 'moment';\r\nimport { Attachment } from '../../../../core/models/Attachment.model';\r\nimport { User } from '../../../../core/models/User.model';\r\nimport { deleteAttachmentAction } from '../../../../store/actions/core.actions';\r\nimport CreateDeliveredModal from './CreateDeliveredModal/CreateDeliveredModal';\r\nimport { DeliveredAssignation } from '../../../../core/models/DeliveredAssignation.model';\r\nimport DeliveredDetailModal from './DeliveredDetailModal/DeliveredDetailModal';\r\nimport { CourseGrade } from '../../../../core/models/CourseGrade.model';\r\n\r\nexport default () => {\r\n  const [showDelivered, setShowDelivered] = useState(false);\r\n  const [currentDelivered, setCurrentDelivered] = useState(null);\r\n  const match = useRouteMatch();\r\n  const dispatch = useDispatch();\r\n  const course = useSelector((state: AppState) => state.courses.currentCourse);\r\n  const currentUser = useSelector((state: AppState) => state.auth.currentUser);\r\n  const loading = useSelector((state: AppState) => state.courses.loading);\r\n\r\n  const assignation = useSelector(\r\n    (state: AppState) => state.courses.currentAssignation\r\n  );\r\n  const { assignId } = match.params as any;\r\n\r\n  useEffect(() => {\r\n    if (!course) return;\r\n    dispatch(\r\n      searchSingleAssignationAction({\r\n        courseId: course?._id,\r\n        assignId,\r\n        filter:\r\n          currentUser._id !== (course.professor as User)._id\r\n            ? 'alumn'\r\n            : 'professor',\r\n      })\r\n    );\r\n  }, [dispatch, course, assignId, currentUser]);\r\n\r\n  const deleteAssignation = useCallback(() => {\r\n    assignation?.attachments.forEach((x) =>\r\n      dispatch(deleteAttachmentAction(x))\r\n    );\r\n    dispatch(deleteAssignationAction(assignId));\r\n  }, [dispatch, assignId, assignation]);\r\n\r\n  const deleteDeliveredAssignation = useCallback(\r\n    (delivered) => {\r\n      dispatch(deleteDeliveredAssignationAction(delivered));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <Grid>\r\n        <Row>\r\n          <Col md={16}>\r\n            <h2 style={{ display: 'inline', marginRight: 20 }}>\r\n              {assignation?.title} -{' '}\r\n              {(assignation?.grade as CourseGrade)?.percentage + '%'}\r\n            </h2>\r\n            {(course?.professor as User)?._id === currentUser?._id ? (\r\n              <Button color='red' onClick={deleteAssignation} loading={loading}>\r\n                Eliminar asignación\r\n              </Button>\r\n            ) : null}\r\n            <Divider />\r\n            <p>{assignation?.content}</p>\r\n            <Divider />\r\n            <h3>Archivos adjuntos</h3>\r\n            {(assignation?.attachments as Attachment[])?.map((x) => {\r\n              let icon = 'text';\r\n\r\n              if (x.contentType.includes('image')) icon = 'image';\r\n\r\n              return (\r\n                <Whisper\r\n                  key={x._id}\r\n                  placement='bottom'\r\n                  trigger='hover'\r\n                  speaker={<Tooltip>{x.title}</Tooltip>}\r\n                >\r\n                  <Icon\r\n                    onClick={() => window.open(x.url)}\r\n                    style={{ margin: 20, cursor: 'pointer' }}\r\n                    icon={`file-${icon}-o` as any}\r\n                    size='4x'\r\n                  />\r\n                </Whisper>\r\n              );\r\n            })}\r\n          </Col>\r\n          <Col md={8} style={{ paddingLeft: '20px' }}>\r\n            <h3>Fecha de entrega: </h3>\r\n            <h3>{moment(assignation?.dueDate).format('DD/MM/YYYY hh:mm a')}</h3>\r\n            {course?.alumns.find((x) => x._id === currentUser._id) ? (\r\n              <Button\r\n                onClick={() => setShowDelivered(true)}\r\n                style={{ marginBottom: 20 }}\r\n                color='blue'\r\n                disabled={\r\n                  assignation?.delivered.findIndex(\r\n                    (x) => x.owner._id === currentUser._id\r\n                  ) > -1\r\n                }\r\n              >\r\n                Entregar asignacion\r\n              </Button>\r\n            ) : null}\r\n            <h3>Entregas:</h3>\r\n            <List hover>\r\n              {(assignation?.delivered as DeliveredAssignation[])?.map((x) => (\r\n                <List.Item\r\n                  key={x._id}\r\n                  style={{ cursor: 'pointer' }}\r\n                  onClick={() => setCurrentDelivered(x)}\r\n                >\r\n                  <Grid fluid>\r\n                    <Row style={{ width: '100%' }}>\r\n                      <Col sm={x.attachments.length > 0 ? 16 : 24}>\r\n                        <strong>\r\n                          {x.owner.name} {x.owner.lastname} - (\r\n                          {x.grade ? 'Corregida' : 'Pendiente'})\r\n                        </strong>\r\n                        <br />\r\n                        {new Date(x.uploadedDate).getTime() >\r\n                        new Date(assignation.dueDate).getTime() ? (\r\n                          <span style={{ color: 'red' }}></span>\r\n                        ) : (\r\n                          moment(x.uploadedDate).format('DD/MM/YYYY hh:mm a')\r\n                        )}\r\n                        <p style={{ marginTop: 10 }}>{x.comment}</p>\r\n                      </Col>\r\n                      {x.attachments.length > 0 ? (\r\n                        <Col sm={7}>\r\n                          <Icon icon='file-text-o' size='4x' />\r\n                        </Col>\r\n                      ) : null}\r\n                      {x.owner._id === currentUser._id ||\r\n                      currentUser._id === (course.professor as User)?._id ? (\r\n                        <Col sm={1}>\r\n                          <Icon\r\n                            icon='close'\r\n                            style={{ color: 'red', cursor: 'pointer' }}\r\n                            onClick={() => deleteDeliveredAssignation(x)}\r\n                          ></Icon>\r\n                        </Col>\r\n                      ) : null}\r\n                    </Row>\r\n                  </Grid>\r\n                </List.Item>\r\n              ))}\r\n            </List>\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n      {currentDelivered ? (\r\n        <DeliveredDetailModal\r\n          delivered={currentDelivered}\r\n          show={!!currentDelivered}\r\n          close={() => setCurrentDelivered(null)}\r\n        />\r\n      ) : null}\r\n      <CreateDeliveredModal\r\n        show={showDelivered}\r\n        close={() => setShowDelivered(false)}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Col, Container, Grid, Icon, Row } from 'rsuite';\r\nimport moment from 'moment';\r\nimport { Assignation } from '../../../../core/models/Assignation.model';\r\n\r\nexport default ({ assignation }: { assignation: Assignation }) => {\r\n  return (\r\n    <Container style={{ paddingTop: '20px', paddingBottom: '20px' }}>\r\n      <Grid>\r\n        <Row>\r\n          <Col md={16}>\r\n            <Row>\r\n              <Col md={24}>\r\n                <h5>{assignation.title}</h5>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={24}>{assignation.content}</Col>\r\n            </Row>\r\n          </Col>\r\n          <Col md={3}>\r\n            Para el dia:\r\n            <br />\r\n            {moment(assignation.dueDate).format('DD/MM/YYYY')}\r\n          </Col>\r\n          <Col md={3}>\r\n            {assignation.attachments.length > 0 ? (\r\n              <Icon icon='file-zip-o' size='5x'></Icon>\r\n            ) : null}\r\n          </Col>\r\n          <Col md={2}>\r\n            <Icon icon='chevron-right' size='4x'/>\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Col,\r\n  ControlLabel,\r\n  Form,\r\n  Grid,\r\n  Modal,\r\n  Row,\r\n  Schema,\r\n} from 'rsuite';\r\nimport FileUploader from '../../../../core/components/controls/FileUploader';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  createCourseAssignationAction,\r\n  getCourseGradesAction,\r\n} from '../../../../store/actions/course.action';\r\nimport { Assignation } from '../../../../core/models/Assignation.model';\r\nimport { Course } from '../../../../core/models/Course.model';\r\nimport Input from '../../../../core/components/controls/Input';\r\nimport { AppState } from '../../../../store/reducers';\r\nimport { getExamsAction } from '../../../../store/actions/exam.actions';\r\n\r\nexport interface CreateAssignationModal {\r\n  show: boolean;\r\n  close: () => void;\r\n  course: Course;\r\n}\r\n\r\nconst { StringType, DateType } = Schema.Types;\r\nconst model = Schema.Model({\r\n  title: StringType('Por favor ingrese un numero de cedula valido.')\r\n    .isRequired('Este campo es obligatorio.')\r\n    .maxLength(100),\r\n  content: StringType('Por favor ingrese una contraseña valida.')\r\n    .isRequired('Este campo es obligatorio.')\r\n    .maxLength(10000),\r\n  dueDate: DateType().isRequired('Este campo es obligatorio.'),\r\n  grade: StringType('Por favor ingrese una nota valida.').isRequired(\r\n    'Este campo es obligatorio.'\r\n  ),\r\n  exam: StringType('Por favor ingrese una nota valida.'),\r\n});\r\n\r\nexport default ({ show, close, course }: CreateAssignationModal) => {\r\n  const initialValue = {\r\n    title: '',\r\n    content: '',\r\n    dueDate: new Date(),\r\n    grade: '',\r\n    exam: '',\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const courseGrades = useSelector(\r\n    (state: AppState) => state.courses.currentCourseGrades\r\n  );\r\n  const exams = useSelector((state: AppState) => state.exams.currentExams);\r\n  const uploader = useRef(null);\r\n  const [formValue, setFormValue] = useState(initialValue);\r\n  let form = useRef<any>(null);\r\n  const [createdAttachments, setCreatedAttachments] = useState([]);\r\n  const courseId = course?._id;\r\n\r\n  useEffect(() => {\r\n    if (!course) return;\r\n    dispatch(getCourseGradesAction(course._id));\r\n    dispatch(getExamsAction());\r\n  }, [dispatch, course]);\r\n\r\n  const resetForm = useCallback(() => {\r\n    setCreatedAttachments([]);\r\n    setFormValue(initialValue);\r\n  }, [initialValue]);\r\n\r\n  const handleUploadSuccess = useCallback(\r\n    (newAttach) => {\r\n      if (!newAttach) {\r\n        dispatch(\r\n          createCourseAssignationAction({\r\n            attachments: [],\r\n            course: courseId,\r\n            ...formValue,\r\n          } as Assignation)\r\n        );\r\n        resetForm();\r\n        close();\r\n      } else {\r\n        const nextAttachs = [...createdAttachments, newAttach];\r\n        setCreatedAttachments(nextAttachs);\r\n        if (nextAttachs.length === uploader.current.state.fileList.length) {\r\n          dispatch(\r\n            createCourseAssignationAction({\r\n              attachments: nextAttachs.map((x) => x._id),\r\n              course: courseId,\r\n              ...formValue,\r\n            } as Assignation)\r\n          );\r\n          resetForm();\r\n          close();\r\n        }\r\n      }\r\n    },\r\n    [dispatch, createdAttachments, courseId, formValue, close, resetForm]\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      full\r\n      backdrop={true}\r\n      show={show}\r\n      onHide={() => {\r\n        resetForm();\r\n        close();\r\n      }}\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title>Crear nueva asignacion</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form\r\n          ref={form}\r\n          fluid\r\n          onChange={(formValue) => setFormValue(formValue as any)}\r\n          formValue={formValue}\r\n          model={model}\r\n        >\r\n          <Grid>\r\n            <Row style={{ marginBottom: 20 }}>\r\n              <Input label='Titulo de la asignación' name='title' />\r\n            </Row>\r\n            <Row style={{ marginBottom: 20 }}>\r\n              <Input label='Descripcion' name='content' type='textarea' />\r\n            </Row>\r\n            <Row style={{ marginBottom: 20 }}>\r\n              <Col sm={10}>\r\n                <Input\r\n                  label='Fecha de entrega'\r\n                  name='dueDate'\r\n                  type='date'\r\n                  allowHour={true}\r\n                />\r\n              </Col>\r\n              <Col sm={10} smOffset={4}>\r\n                <Input\r\n                  disableSearch={true}\r\n                  label='Nota relacionada'\r\n                  name='grade'\r\n                  data={courseGrades.map((x) => ({\r\n                    label: `${x.name} - ${x.percentage}%`,\r\n                    value: x._id,\r\n                  }))}\r\n                  type='select'\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ marginBottom: 20 }}>\r\n              <Col sm={10}>\r\n                <Input\r\n                  disableSearch={true}\r\n                  label='Examen relacionado'\r\n                  name='exam'\r\n                  data={exams.map((x) => ({\r\n                    label: x.name,\r\n                    value: x._id,\r\n                  }))}\r\n                  type='select'\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <ControlLabel>Archivos adjuntos</ControlLabel>\r\n              <FileUploader\r\n                action={'/attachments/upload'}\r\n                uploaderRef={uploader}\r\n                onUploadSuccess={handleUploadSuccess}\r\n              ></FileUploader>\r\n            </Row>\r\n          </Grid>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={close} color='red'>\r\n          Cerrar\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            if (!form.current.check()) return;\r\n            if (uploader.current.state.fileList.length > 0) {\r\n              uploader.current.start();\r\n            } else {\r\n              handleUploadSuccess(null);\r\n            }\r\n          }}\r\n          appearance='primary'\r\n        >\r\n          Guardar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\nimport { Container, Divider, Icon, IconButton, List, Loader } from 'rsuite';\r\nimport { User } from '../../../../core/models/User.model';\r\nimport { searchCourseAssignationsAction } from '../../../../store/actions/course.action';\r\nimport { AppState } from '../../../../store/reducers';\r\nimport Assignation from '../Assignation/Assignation';\r\nimport CreateAssignationModal from '../CreateAssignationModal/CreateAssignationModal';\r\n\r\nexport default () => {\r\n  const [showAssignModal, setShowAssignModal] = useState(false);\r\n  const assignations = useSelector(\r\n    (state: AppState) => state.courses.currentCourseAssignations\r\n  );\r\n  const loading = useSelector((state: AppState) => state.courses.loading);\r\n  const currentUser = useSelector((state: AppState) => state.auth.currentUser);\r\n  const course = useSelector((state: AppState) => state.courses.currentCourse);\r\n  const dispatch = useDispatch();\r\n  const match = useRouteMatch();\r\n  const history = useHistory();\r\n  const { id } = match.params as any;\r\n\r\n  const closeAssignModal = useCallback(() => {\r\n    setShowAssignModal(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(searchCourseAssignationsAction(id));\r\n  }, [dispatch, id]);\r\n\r\n  return (\r\n    <Container style={{ flex: 0 }}>\r\n      <div>\r\n        <h3 style={{ color: 'white', display: 'inline' }}>Pendientes</h3>\r\n        {currentUser?._id === (course?.professor as User)?._id ? (\r\n          <>\r\n            &nbsp; &#8226; Agregar nueva asignacion\r\n            <IconButton\r\n              style={{ marginLeft: 10 }}\r\n              icon={<Icon icon='plus' />}\r\n              circle\r\n              onClick={() => setShowAssignModal(true)}\r\n            />\r\n          </>\r\n        ) : null}\r\n      </div>\r\n      <Divider />\r\n      {loading ? (\r\n        <Loader center />\r\n      ) : assignations.length === 0 ? (\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            padding: 20,\r\n          }}\r\n        >\r\n          <span>No hay asignaciones pendientes </span>&nbsp;&nbsp;&nbsp;\r\n          <Icon icon='smile-o' size='3x' />\r\n        </div>\r\n      ) : (\r\n        <List hover>\r\n          {assignations\r\n            .filter((x) => new Date().getTime() < new Date(x.dueDate).getTime())\r\n            .map((x) => (\r\n              <List.Item\r\n                key={x._id}\r\n                style={{ cursor: 'pointer' }}\r\n                onClick={() =>\r\n                  history.push(match.path.replace(':id', id) + x._id)\r\n                }\r\n              >\r\n                <Assignation assignation={x}></Assignation>\r\n              </List.Item>\r\n            ))}\r\n        </List>\r\n      )}\r\n      <br />\r\n      <h3 style={{ color: 'white', display: 'inline' }}>Finalizadas </h3>\r\n      <Divider />\r\n      {loading ? (\r\n        <Loader center />\r\n      ) : (\r\n        <List hover>\r\n          {assignations\r\n            .filter((x) => new Date().getTime() > new Date(x.dueDate).getTime())\r\n            .map((x) => (\r\n              <List.Item\r\n                key={x._id}\r\n                style={{ cursor: 'pointer' }}\r\n                onClick={() =>\r\n                  history.push(match.path.replace(':id', id) + x._id)\r\n                }\r\n              >\r\n                <Assignation assignation={x}></Assignation>\r\n              </List.Item>\r\n            ))}\r\n        </List>\r\n      )}\r\n      <CreateAssignationModal\r\n        show={showAssignModal}\r\n        close={closeAssignModal}\r\n        course={course}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport { Container } from 'rsuite';\r\nimport AssignationDetail from './AssignationDetail/AssignationDetail';\r\nimport AssignationsList from './AssignationsList/AssignationsList';\r\n\r\nexport default () => {\r\n  const match = useRouteMatch();\r\n  return (\r\n    <Container style={{ flex: 0 }}>\r\n      <Switch>\r\n        <Route path={match.path + '/'} exact component={AssignationsList} />\r\n        <Route path={match.path + '/:assignId'} exact component={AssignationDetail} />\r\n      </Switch>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useCallback, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Input,\r\n  List,\r\n  Avatar,\r\n  FlexboxGrid,\r\n  Badge,\r\n} from 'rsuite';\r\nimport { AppState } from '../../../store/reducers';\r\nimport moment from 'moment';\r\nimport { createCourseFeedAction } from '../../../store/actions/course.action';\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((state: AppState) => state.courses.loading);\r\n  const course = useSelector((state: AppState) => state.courses.currentCourse);\r\n  const [newComment, setNewComment] = useState('');\r\n\r\n  const saveComment = useCallback(() => {\r\n    dispatch(\r\n      createCourseFeedAction({ course: course._id, content: newComment })\r\n    );\r\n  }, [dispatch, newComment, course]);\r\n\r\n  return (\r\n    <Container>\r\n      <img\r\n        style={{ width: '100%', height: 200, borderRadius: 5 }}\r\n        alt='Banner'\r\n        src={'https://image.freepik.com/free-photo/back-school-education-banner-background_8087-1192.jpg'}\r\n      ></img>\r\n\r\n      <div style={{ marginTop: 20 }}>\r\n        <Input\r\n          value={newComment}\r\n          onChange={setNewComment}\r\n          placeholder='Comparte algo con la clase...'\r\n        ></Input>\r\n        <Button\r\n          color='blue'\r\n          appearance='primary'\r\n          style={{ marginTop: 20 }}\r\n          block={false}\r\n          onClick={saveComment}\r\n          loading={loading}\r\n        >\r\n          Compartir\r\n        </Button>\r\n      </div>\r\n      <Divider />\r\n      <h3>Comentarios</h3>\r\n      <List>\r\n        {course?.feed\r\n          .sort(\r\n            (a, b) =>\r\n              new Date(b.createdDate).getTime() -\r\n              new Date(a.createdDate).getTime()\r\n          )\r\n          .map((x) => (\r\n            <List.Item key={x.createdDate}>\r\n              <FlexboxGrid style={{ paddingLeft: '20px' }}>\r\n                <FlexboxGrid.Item\r\n                  colspan={4}\r\n                  style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'left',\r\n                  }}\r\n                >\r\n                  <Avatar src={x.owner?.profileImg} />\r\n                  <span>\r\n                    {x.owner?.name} - <Badge content={x.owner?.rating} />\r\n                  </span>\r\n                  <span>{moment(x.createdDate).fromNow()}</span>\r\n                </FlexboxGrid.Item>\r\n                <FlexboxGrid.Item\r\n                  colspan={16}\r\n                  style={{\r\n                    padding: 10,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'left',\r\n                  }}\r\n                >\r\n                  <p>{x.content}</p>\r\n                </FlexboxGrid.Item>\r\n              </FlexboxGrid>\r\n            </List.Item>\r\n          ))}\r\n      </List>\r\n    </Container>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Table } from 'rsuite';\r\nimport { AlumnGrade } from '../../../../core/models/AlumnGrade.model';\r\nimport { CourseGrade } from '../../../../core/models/CourseGrade.model';\r\n\r\ninterface AlumnGradesTableProps {\r\n  loading: boolean;\r\n  grades: AlumnGrade[];\r\n}\r\n\r\nexport default (props: AlumnGradesTableProps) => {\r\n  return (\r\n    <Table loading={props.loading} data={props.grades} height={500} width={1100}>\r\n      <Table.Column width={500}>\r\n        <Table.HeaderCell>Asignación</Table.HeaderCell>\r\n        <Table.Cell>\r\n          {(rowData: AlumnGrade) => {\r\n            return (rowData.grade as CourseGrade).name;\r\n          }}\r\n        </Table.Cell>\r\n      </Table.Column>\r\n\r\n      <Table.Column width={200}>\r\n        <Table.HeaderCell>Estado</Table.HeaderCell>\r\n        <Table.Cell dataKey='state' />\r\n      </Table.Column>\r\n\r\n      <Table.Column width={200}>\r\n        <Table.HeaderCell>Nota</Table.HeaderCell>\r\n        <Table.Cell dataKey='value' />\r\n      </Table.Column>\r\n      <Table.Column>\r\n        <Table.HeaderCell>Porcentaje</Table.HeaderCell>\r\n        <Table.Cell>\r\n          {(rowData: AlumnGrade) => {\r\n            return (rowData.grade as CourseGrade).percentage + '%';\r\n          }}\r\n        </Table.Cell>\r\n      </Table.Column>\r\n    </Table>\r\n  );\r\n};\r\n","import React, { useCallback, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Form, Modal, Schema } from 'rsuite';\r\nimport Input from '../../../../core/components/controls/Input';\r\nimport { createCourseGradeAction } from '../../../../store/actions/course.action';\r\nimport { AppState } from '../../../../store/reducers';\r\n\r\nexport interface CreateGradeModalProps {\r\n  show: boolean;\r\n  close: () => void;\r\n}\r\n\r\nconst { StringType, NumberType } = Schema.Types;\r\nconst model = Schema.Model({\r\n  name: StringType('Por favor ingrese un nombre valido.').isRequired(\r\n    'Este campo es obligatorio.'\r\n  ),\r\n  percentage: NumberType('Por favor ingrese un porcentaje valida.')\r\n    .isRequired('Este campo es obligatorio.')\r\n    .min(1)\r\n    .max(100),\r\n});\r\n\r\nexport default (props: CreateGradeModalProps) => {\r\n  const dispatch = useDispatch();\r\n  const course = useSelector((state: AppState) => state.courses.currentCourse);\r\n  const loading = useSelector((state: AppState) => state.courses.loading);\r\n\r\n  const [formValue, setFormValue] = useState({\r\n    name: '',\r\n    percentage: 25,\r\n  });\r\n  const form = useRef<any>(null);\r\n\r\n  const saveGrade = useCallback(() => {\r\n    if (form.current.check()) {\r\n      dispatch(\r\n        createCourseGradeAction({\r\n          ...formValue,\r\n          course: course._id,\r\n        })\r\n      );\r\n    }\r\n  }, [dispatch, formValue, course]);\r\n\r\n  return (\r\n    <Modal show={props.show} onHide={props.close}>\r\n      <Modal.Header>\r\n        <Modal.Title>Agregar nota</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form\r\n          ref={form}\r\n          fluid\r\n          onChange={(formValue) => setFormValue(formValue as any)}\r\n          formValue={formValue}\r\n          model={model}\r\n        >\r\n          <Input name='name' label='Nombre' disabled={loading} />\r\n          <Input\r\n            name='percentage'\r\n            label='Porcentaje'\r\n            type='number'\r\n            disabled={loading}\r\n          />\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button color='red' onClick={props.close}>\r\n          Cancelar\r\n        </Button>\r\n        <Button color='blue' onClick={saveGrade} loading={loading}>\r\n          Guardar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Table } from 'rsuite';\r\nimport { ProfessorGrade } from '../../../../core/models/ProfessorGrade.model';\r\nimport { AppState } from '../../../../store/reducers';\r\n\r\ninterface ProfessorGradesTableProps {\r\n  loading: boolean;\r\n  grades: ProfessorGrade[];\r\n}\r\n\r\nexport default (props: ProfessorGradesTableProps) => {\r\n  const courseGrades = useSelector(\r\n    (state: AppState) => state.courses.currentCourseGrades\r\n  );\r\n  return (\r\n    <Table\r\n      loading={props.loading}\r\n      data={props.grades.sort((a, b) => {\r\n        if(a.alumn.name < b.alumn.name) { return -1; }\r\n        if(a.alumn.name > b.alumn.name) { return 1; }\r\n        else {\r\n          if(a.alumn.lastname < b.alumn.lastname) { return -1; }\r\n          if(a.alumn.lastname > b.alumn.lastname) { return 1; }\r\n          return 0;\r\n        }\r\n      })}\r\n      height={500}\r\n      width={1000}\r\n    >\r\n      <Table.Column width={200}>\r\n        <Table.HeaderCell>Alumno</Table.HeaderCell>\r\n        <Table.Cell>\r\n          {(rowData: ProfessorGrade) => `${rowData.alumn.name} ${rowData.alumn.lastname}`}\r\n        </Table.Cell>\r\n      </Table.Column>\r\n      <Table.Column width={150}>\r\n        <Table.HeaderCell>Cedula</Table.HeaderCell>\r\n        <Table.Cell>\r\n          {(rowData: ProfessorGrade) => rowData.alumn.identification}\r\n        </Table.Cell>\r\n      </Table.Column>\r\n\r\n      {courseGrades.map((grade) => {\r\n        return (\r\n          <Table.Column width={200} key={grade._id} align='center'>\r\n            <Table.HeaderCell>{grade.name} ({grade.percentage}%)</Table.HeaderCell>\r\n            <Table.Cell>\r\n              {(rowData: any) => rowData.grades[grade.name]}\r\n            </Table.Cell>\r\n          </Table.Column>\r\n        );\r\n      })}\r\n    </Table>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button } from 'rsuite';\r\nimport { User } from '../../../core/models/User.model';\r\nimport {\r\n  getAllProfessorGradesAction,\r\n  getAlumnGradesAction,\r\n  getCourseGradesAction,\r\n} from '../../../store/actions/course.action';\r\nimport { AppState } from '../../../store/reducers';\r\nimport AlumnGradesTable from './AlumnGradesTable/AlumnGradesTable';\r\nimport CreateGradeModal from './CreateGradeModal/CreateGradeModal';\r\nimport ProfessorGradesTable from './ProfessorGradesTable/ProfessorGradesTable';\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const [showCreateGrade, setShowCreateGrade] = useState(false);\r\n  const course = useSelector((state: AppState) => state.courses.currentCourse);\r\n  const currentUser = useSelector((state: AppState) => state.auth.currentUser);\r\n  const loading = useSelector((state: AppState) => state.courses.loading);\r\n  const alumnGrades = useSelector(\r\n    (state: AppState) => state.courses.currentAlumnGrades\r\n  );\r\n  const professorGrades = useSelector(\r\n    (state: AppState) => state.courses.currentProfessorGrades\r\n  );\r\n\r\n  const isProfessor = (course?.professor as User)?._id === currentUser._id;\r\n\r\n  useEffect(() => {\r\n    if (!course || !currentUser) return;\r\n\r\n    if (isProfessor) {\r\n      dispatch(getCourseGradesAction(course._id));\r\n      dispatch(getAllProfessorGradesAction(course._id));\r\n    } else {\r\n      dispatch(\r\n        getAlumnGradesAction({\r\n          course: course._id,\r\n          alumn: currentUser._id,\r\n          filter: currentUser._id !== (course.professor as User)._id ? 'alumn' : 'professor'\r\n        })\r\n      );\r\n    }\r\n  }, [dispatch, course, currentUser, isProfessor]);\r\n\r\n  return (\r\n    <div>\r\n      <CreateGradeModal\r\n        show={showCreateGrade}\r\n        close={() => setShowCreateGrade(false)}\r\n      />\r\n      {(course?.professor as User)?._id === currentUser._id ? (\r\n        <Button\r\n          style={{ marginBottom: 20 }}\r\n          color='blue'\r\n          onClick={() => setShowCreateGrade(true)}\r\n        >\r\n          Agregar nota\r\n        </Button>\r\n      ) : null}\r\n      {isProfessor ? (\r\n        <ProfessorGradesTable loading={loading} grades={professorGrades} />\r\n      ) : (\r\n        <AlumnGradesTable loading={loading} grades={alumnGrades} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AutoComplete, Avatar, Col, Grid } from 'rsuite';\r\nimport { AppState } from '../../../store/reducers';\r\nimport { User } from '../../models/User.model';\r\nimport _ from 'lodash';\r\nimport { authActions } from '../../../store/actions';\r\n\r\nexport interface UserAutocompleteProps {\r\n  label: string;\r\n  onSelect: (user: User) => void;\r\n  filter?: (users: User[]) => User[];\r\n}\r\n\r\nexport default ({ label, onSelect, filter }: UserAutocompleteProps) => {\r\n  const dispatch = useDispatch();\r\n  const users = useSelector((state: AppState) => state.auth.autocompleteUsers);\r\n\r\n  const delayedQuery = useCallback(\r\n    _.debounce((q) => {\r\n      //setLoading(true);\r\n      dispatch(authActions.searchUsersAction(q));\r\n    }, 500),\r\n    []\r\n  );\r\n\r\n  const handleChange = useCallback(\r\n    (val) => {\r\n      val && delayedQuery(val);\r\n    },\r\n    [delayedQuery]\r\n  );\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      delayedQuery.cancel();\r\n    }\r\n  }, [delayedQuery]);\r\n  \r\n  return (\r\n    <>\r\n      <label>{label}</label>\r\n      <br/>\r\n      <AutoComplete\r\n        filterBy={(value, item) => true}\r\n        renderItem={(item) => {\r\n          const user = item as User;\r\n          return (\r\n            <div\r\n              style={{ display: 'flex', alignItems: 'center' }}\r\n              key={user._id}\r\n            >\r\n              <Grid style={{ width: '500px' }}>\r\n                <Col sm={2} md={2}>\r\n                  <Avatar circle src={user.profileImg}></Avatar>\r\n                </Col>\r\n                <Col sm={1}></Col>\r\n                <Col sm={21} md={21}>\r\n                  <p>{user.name + ' ' + user.lastname}</p>\r\n                  <p>{user.email}</p>\r\n                </Col>\r\n              </Grid>\r\n            </div>\r\n          );\r\n        }}\r\n        onChange={handleChange}\r\n        data={filter ? filter(users) : users}\r\n        onSelect={(e) => onSelect(e as User)}\r\n      ></AutoComplete>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Avatar, Col, Container, Grid, IconButton } from 'rsuite';\r\nimport { User } from '../../../../core/models/User.model';\r\n\r\nexport interface MemberProps {\r\n  user?: User;\r\n  buttonIcon?: React.ReactElement;\r\n  onButtonClick?: (args: any) => void;\r\n}\r\n\r\nexport default ({ user, buttonIcon, onButtonClick }: MemberProps) => {\r\n  const [avatarColor] = useState(\r\n    '#' + Math.floor(Math.random() * 16777215).toString(16)\r\n  );\r\n  return (\r\n    <Container style={{ width: '100%'}}>\r\n      <Grid style={{ width: '100%' }}>\r\n        <Col sm={2} md={2}>\r\n          {user?.profileImg ? (\r\n            <Avatar circle src={user?.profileImg}></Avatar>\r\n          ) : (\r\n            <Avatar circle style={{ background: avatarColor }}>\r\n              {user?.name?.substr(0, 1).toUpperCase()}\r\n              {user?.lastname?.substr(0, 1).toUpperCase()}\r\n            </Avatar>\r\n          )}\r\n        </Col>\r\n        <Col sm={1}/>\r\n        <Col sm={19} md={19}>\r\n          <h4>\r\n            {user?.name} {user?.lastname}\r\n          </h4>\r\n        </Col>\r\n        {buttonIcon ? (\r\n          <Col sm={2} md={2}>\r\n            <IconButton icon={buttonIcon} onClick={onButtonClick} />\r\n          </Col>\r\n        ) : null}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal, Button, Divider, List, Icon, Loader } from 'rsuite';\r\nimport UsersAutocomplete from '../../../../core/components/controls/UsersAutocomplete';\r\nimport { Course } from '../../../../core/models/Course.model';\r\nimport { User } from '../../../../core/models/User.model';\r\nimport {\r\n  addCourseMemberAction,\r\n  removeCourseMemberAction,\r\n} from '../../../../store/actions/course.action';\r\nimport { AppState } from '../../../../store/reducers';\r\nimport Member from '../Member/Member';\r\n\r\nimport './ManageMembersModal.css';\r\n\r\nexport interface ManageMembersModalProps {\r\n  show: boolean;\r\n  close: () => void;\r\n  course: Course | null;\r\n}\r\n\r\nexport default ({ show, close, course }: ManageMembersModalProps) => {\r\n  const loading = useSelector((state: AppState) => state.courses.loading);\r\n  const dispatch = useDispatch();\r\n  const handleUserAdd = useCallback(\r\n    (user: User) => {\r\n      dispatch(\r\n        addCourseMemberAction({\r\n          user,\r\n          course: course as Course,\r\n        })\r\n      );\r\n    },\r\n    [dispatch, course]\r\n  );\r\n\r\n  const handleUserRemove = useCallback(\r\n    (user: User) => {\r\n      dispatch(\r\n        removeCourseMemberAction({\r\n          user,\r\n          course: course as Course,\r\n        })\r\n      );\r\n    },\r\n    [dispatch, course]\r\n  );\r\n\r\n  return (\r\n    <div className='modal-container'>\r\n      <Modal overflow={true} backdrop={true} show={show} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>Miembros del curso</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <UsersAutocomplete\r\n            label='Agregar miembro'\r\n            filter={(users: User[]) =>\r\n              users.filter((x) => !course?.alumns?.find((a) => a._id === x._id) && x.type === 'alumn')\r\n            }\r\n            onSelect={handleUserAdd}\r\n          />\r\n          <Divider />\r\n          <List style={{ display: loading ? 'none' : 'initial' }}>\r\n            {course?.alumns?.map((x) => (\r\n              <List.Item key={x._id}>\r\n                <Member\r\n                  user={x}\r\n                  buttonIcon={<Icon icon='close' style={{ color: 'red' }} />}\r\n                  onButtonClick={() => handleUserRemove(x)}\r\n                ></Member>\r\n              </List.Item>\r\n            ))}\r\n          </List>\r\n          {loading ? <Loader /> : null}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={close} appearance='primary'>\r\n            Cerrar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useCallback, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Container, Divider, Icon, IconButton, List } from 'rsuite';\r\nimport { User } from '../../../core/models/User.model';\r\nimport { AppState } from '../../../store/reducers';\r\n\r\nimport './CourseMembers.css';\r\nimport ManageMembersModal from './ManageMembersModal/ManageMembersModal';\r\nimport Member from './Member/Member';\r\n\r\nexport default () => {\r\n  const course = useSelector((state: AppState) => state.courses.currentCourse);\r\n  const currentUser = useSelector((state: AppState) => state.auth.currentUser);\r\n  const [showMembersModal, setShowMembersModal] = useState(false);\r\n\r\n  const closeMembersModal = useCallback(() => {\r\n    setShowMembersModal(false);\r\n  }, [setShowMembersModal]);\r\n\r\n  return (\r\n    <Container style={{ flex: 0 }}>\r\n      <h3 style={{ color: 'white' }}>Profesor</h3>\r\n      <Divider />\r\n      <Member user={course?.professor as User}></Member>\r\n      <br />\r\n      <div>\r\n        <h3 style={{ color: 'white', display: 'inline' }}>Alumnos </h3> &#8226;{' '}\r\n        {course?.alumns?.length} estudiante (s)\r\n        {currentUser?._id === (course?.professor as User)?._id ? (\r\n          <>\r\n            &nbsp; &#8226;{' '}\r\n            <IconButton\r\n              icon={<Icon icon='cog' />}\r\n              circle\r\n              onClick={() => setShowMembersModal(true)}\r\n            />\r\n          </>\r\n        ) : null}\r\n      </div>\r\n      <br />\r\n      {course?.alumns.length === 0 ? (\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <span>Aun no hay alumnos en este curso</span>&nbsp;&nbsp;&nbsp;{' '}\r\n          <Icon icon='frown-o' size='2x' />\r\n        </div>\r\n      ) : (\r\n        <List>\r\n          {course?.alumns?.map((x) => (\r\n            <List.Item key={x._id}>\r\n              <Member user={x}></Member>\r\n            </List.Item>\r\n          ))}\r\n        </List>\r\n      )}\r\n      <ManageMembersModal\r\n        show={showMembersModal}\r\n        course={course}\r\n        close={closeMembersModal}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  Route,\r\n  Switch,\r\n  useHistory,\r\n  useLocation,\r\n  useRouteMatch,\r\n} from 'react-router-dom';\r\nimport { Container, Nav } from 'rsuite';\r\nimport { courseActions } from '../../store/actions';\r\nimport CourseArchives from './CourseArchives/CourseArchives';\r\nimport CourseAssignations from './CourseAssignations/CourseAssignations';\r\nimport CourseFeed from './CourseFeed/CourseFeed';\r\nimport CourseGrades from './CourseGrades/CourseGrades';\r\nimport CourseMembers from './CourseMembers/CourseMembers';\r\n\r\nimport './CourseView.css';\r\n\r\nexport default () => {\r\n  const [activeTab, setActiveTab] = useState('feed');\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const match = useRouteMatch();\r\n  const { id } = match.params as any;\r\n\r\n  const selectHandle = useCallback(\r\n    (eventKey: string) => {\r\n      setActiveTab(eventKey);\r\n      history.push(match.path.replace(':id', id) + '/' + eventKey);\r\n    },\r\n    [history, match.path, id, setActiveTab]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setActiveTab(\r\n      location.pathname.substr(location.pathname.lastIndexOf('/') + 1)\r\n    );\r\n  }, [location.pathname]);\r\n\r\n  useEffect(() => {\r\n    dispatch(courseActions.searchCourseByIdAction(id));\r\n  }, [dispatch, id]);\r\n\r\n  return (\r\n    <Container>\r\n      <Nav appearance='subtle' activeKey={activeTab} onSelect={selectHandle}>\r\n        <Nav.Item eventKey='feed'>Feed</Nav.Item>\r\n        <Nav.Item eventKey='assignments'>Asignaciones</Nav.Item>\r\n        <Nav.Item eventKey='members'>Miembros</Nav.Item>\r\n        <Nav.Item eventKey='grades'>Notas</Nav.Item>\r\n        <Nav.Item eventKey='archives'>Archivos</Nav.Item>\r\n      </Nav>\r\n      <Container style={{ padding: 20 }}>\r\n        <Switch>\r\n          <Route\r\n            path={match.path + '/feed'}\r\n            exact\r\n            component={CourseFeed}\r\n          ></Route>\r\n          <Route\r\n            path={match.path + '/members'}\r\n            exact\r\n            component={CourseMembers}\r\n          />\r\n          <Route\r\n            path={match.path + '/assignments'}\r\n            component={CourseAssignations}\r\n          />\r\n          <Route path={match.path + '/grades'} exact component={CourseGrades} />\r\n          <Route\r\n            path={match.path + '/archives'}\r\n            exact\r\n            component={CourseArchives}\r\n          />\r\n        </Switch>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Input, Message, Modal } from 'rsuite';\r\nimport { resetVerifiedAction, verifiyCodeAction } from '../../store/actions/auth.actions';\r\nimport { AppState } from '../../store/reducers';\r\n\r\nexport interface VerifyCodeModalProps {\r\n  onCancel: () => void;\r\n  onSuccessVerify: () => void;\r\n  phoneNumber: string;\r\n  show: boolean;\r\n  title: string;\r\n}\r\n\r\nexport default (props: VerifyCodeModalProps) => {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((state: AppState) => state.auth.loading);\r\n  const error = useSelector((state: AppState) => state.auth.error);\r\n  const isVerified = useSelector((state: AppState) => state.auth.codeVerified);\r\n  const { onSuccessVerify } = props;\r\n  useEffect(() => {\r\n    if (isVerified) {\r\n      onSuccessVerify();\r\n      dispatch(resetVerifiedAction(false));\r\n    }\r\n  }, [dispatch, isVerified, onSuccessVerify]);\r\n\r\n  const [verificationCode, setVerificationCode] = useState('');\r\n\r\n  const sendVerificationCode = useCallback(() => {\r\n      dispatch(verifiyCodeAction({\r\n        phoneNumber: props.phoneNumber,\r\n        verificationCode: verificationCode\r\n      }))\r\n  }, [dispatch, verificationCode, props.phoneNumber]);\r\n\r\n  const isValid = useCallback(() => {\r\n    let valid = true;\r\n    if (verificationCode.length !== 5) valid = false;\r\n    else if (isNaN(parseInt(verificationCode))) valid = false;\r\n    \r\n    return valid;\r\n  }, [verificationCode]);\r\n\r\n  return (\r\n    <Modal show={props.show}>\r\n      <Modal.Header>\r\n        <Modal.Title>{props.title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {error ? <Message showIcon type='error' description={error.message} /> : null}\r\n        <Input label='Codigo de verificación' onChange={setVerificationCode}/>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onCancel}>Cancelar</Button>\r\n        <Button onClick={sendVerificationCode} loading={loading} disabled={!isValid()}> \r\n          Confirmar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Col, Form, Grid, Row, Schema } from 'rsuite';\r\nimport Input from '../../core/components/controls/Input';\r\n\r\nconst { StringType, DateType } = Schema.Types;\r\nconst model = Schema.Model({\r\n  email: StringType()\r\n    .isRequired('Este campo es obligatorio.')\r\n    .isEmail('El formato no es correcto.')\r\n    .maxLength(100),\r\n  name: StringType()\r\n    .isRequired('Este campo es obligatorio.')\r\n    .minLength(3)\r\n    .maxLength(100),\r\n  lastname: StringType()\r\n    .isRequired('Este campo es obligatorio.')\r\n    .minLength(3)\r\n    .maxLength(100),\r\n  birthdate: DateType().isRequired('Este campo es obligatorio.'),\r\n  phoneNumber: StringType('Por favor ingrese un numero valido')\r\n    .isRequired('Este campo es obligatorio')\r\n    .maxLength(100)\r\n    .minLength(6)\r\n    .addRule(\r\n      (value: string) => value.startsWith('+'),\r\n      'Por favor ingrese un codigo de pais valido.'\r\n    ),\r\n});\r\n\r\nexport interface BasicInfoFormProps {\r\n  value: {\r\n    email: string;\r\n    name: string;\r\n    lastname: string;\r\n    birthdate: Date;\r\n    phoneNumber: string;\r\n  };\r\n  setValue: (value) => void;\r\n}\r\n\r\nexport default ({ value, setValue }: BasicInfoFormProps) => {\r\n  return (\r\n    <>\r\n      <Form\r\n        fluid\r\n        onChange={(formValue) => setValue(formValue)}\r\n        formValue={value}\r\n        model={model}\r\n      >\r\n        <Grid fluid>\r\n          <Row style={{ marginBottom: 20 }}>\r\n            <Col sm={11}>\r\n              <Input name='name' label='Nombre' />\r\n            </Col>\r\n            <Col smOffset={2} sm={11}>\r\n              <Input name='lastname' label='Apellido' />\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ marginBottom: 20 }}>\r\n            <Col sm={11}>\r\n              <Input name='email' label='Correo electronico' />\r\n            </Col>\r\n            <Col smOffset={2} sm={11}>\r\n              <Input name='birthdate' label='Fecha de nacimiento' type='date' />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={11}>\r\n              <Input name='phoneNumber' label='Numero de telefono' />\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Col, Form, Grid, Row, Schema } from 'rsuite';\r\nimport Input from '../../core/components/controls/Input';\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\nconst model = Schema.Model({\r\n  githubLink: StringType('None'),\r\n});\r\n\r\nexport interface ExternalLinksFormProps {\r\n  value: {\r\n    githubLink: string;\r\n  };\r\n  setValue: (formValue) => void;\r\n}\r\n\r\nexport default ({ value, setValue }: ExternalLinksFormProps) => {\r\n  return (\r\n    <Form\r\n      fluid\r\n      onChange={(formValue) => setValue(formValue)}\r\n      formValue={value}\r\n      model={model}\r\n    >\r\n      <Grid fluid>\r\n        <Row>\r\n          <Col sm={24}>\r\n            <Input name='githubLink' label='Github' />\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    </Form>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  Button,\r\n  Col,\r\n  Form,\r\n  Grid,\r\n  Row,\r\n  Schema,\r\n} from 'rsuite';\r\nimport Input from '../../core/components/controls/Input';\r\nimport { AppState } from '../../store/reducers';\r\n\r\nconst { StringType, BooleanType } = Schema.Types;\r\n\r\nconst model = Schema.Model({\r\n  password: StringType('Por favor ingrese una contraseña valida.')\r\n    .isRequired('Este campo es obligatorio.')\r\n    .minLength(6),\r\n  verifyPassword: StringType('Por favor ingrese una contraseña valida.')\r\n    .isRequired('Este campo es obligatorio.')\r\n    .minLength(6)\r\n    .addRule((value, data) => {\r\n      if (value !== data.password) return false;\r\n      return true;\r\n    }, 'Las contraseñas no coinciden.'),\r\n  mfa: BooleanType('Por favor ingrese una opcion valida.'),\r\n});\r\n\r\nexport interface SecurityFormProps {\r\n  value: {\r\n    password: string;\r\n    verifyPassword: string;\r\n    mfa: boolean;\r\n  };\r\n  setValue: (formValue) => void;\r\n  saveChanges: (changes: any) => void;\r\n}\r\n\r\nexport default ({ value, setValue, saveChanges }: SecurityFormProps) => {\r\n  const loading = useSelector((state: AppState) => state.auth.loading);\r\n  return (\r\n    <Form\r\n      fluid\r\n      onChange={(formValue) => setValue(formValue)}\r\n      formValue={value}\r\n      model={model}\r\n    >\r\n      <Grid fluid>\r\n        <Row style={{ marginBottom: 20 }}>\r\n          <Col sm={24}>\r\n            <Input name='password' label='Contraseña' />\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ marginBottom: 20 }}>\r\n          <Col sm={24}>\r\n            <Input name='verifyPassword' label='Verificar contraseña' />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col sm={24}>\r\n            <Button\r\n              color={value.mfa ? 'red' : 'blue'}\r\n              onClick={() => {\r\n                setValue({\r\n                  ...value,\r\n                  mfa: !value.mfa\r\n                });\r\n                saveChanges({ mfa: !value.mfa })\r\n              }}\r\n              loading={loading}\r\n            >\r\n              {value.mfa\r\n                ? 'Desactivar autenticacion de dos pasos '\r\n                : 'Activar autenticacion de dos pasos (telefono)'}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    </Form>\r\n  );\r\n};\r\n","import React, { useCallback, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Alert, Button, Col, Container, Divider, Grid } from 'rsuite';\r\nimport VerifyCodeModal from '../auth/VerifyCodeModal/VerifyCodeModal';\r\nimport ImageUploader from '../core/components/controls/ImageUploader';\r\nimport environment from '../core/environment';\r\nimport {\r\n  loginUserSuccessAction,\r\n  sendVerificationCodeAction,\r\n  updateUserAction,\r\n} from '../store/actions/auth.actions';\r\nimport { AppState } from '../store/reducers';\r\nimport BasicInfoForm from './BasicInfoForm/BasicInfoForm';\r\nimport ExternalLinksForm from './ExternalLinksForm/ExternalLinksForm';\r\nimport SecurityForm from './SecurityForm/SecurityForm';\r\n\r\nexport default () => {\r\n  const loading = useSelector((state: AppState) => state.auth.loading);\r\n  const dispatch = useDispatch();\r\n  const currentUser = useSelector((state: AppState) => state.auth.currentUser);\r\n  const [showVerify, setShowVerify] = useState(false);\r\n  const [basicInfoValue, setBasicInfoValue] = useState({\r\n    email: currentUser.email,\r\n    name: currentUser.name,\r\n    lastname: currentUser.lastname,\r\n    phoneNumber: currentUser.phoneNumber,\r\n    birthdate: new Date(currentUser.birthdate),\r\n  });\r\n  const [securityInfoValue, setSecurityInfoValue] = useState({\r\n    password: '',\r\n    verifyPassword: '',\r\n    mfa: currentUser.mfa,\r\n  });\r\n  const [externalLinksValue, setExternalLinksValue] = useState({\r\n    githubLink: currentUser.githubLink,\r\n  });\r\n\r\n  const sendVerificationCode = useCallback(() => {\r\n    dispatch(sendVerificationCodeAction(basicInfoValue.phoneNumber));\r\n    setShowVerify(true);\r\n  }, [dispatch, basicInfoValue.phoneNumber]);\r\n\r\n  const saveChanges = useCallback(\r\n    (changes = {}) => {\r\n      dispatch(\r\n        updateUserAction({\r\n          ...currentUser,\r\n          ...basicInfoValue,\r\n          ...externalLinksValue,\r\n          ...changes,\r\n        })\r\n      );\r\n      setShowVerify(false);\r\n    },\r\n    [dispatch, currentUser, basicInfoValue, externalLinksValue]\r\n  );\r\n\r\n  const isDifferent = useCallback(\r\n    (value) => {\r\n      let different = false;\r\n      for (const key in value) {\r\n        if (key === 'birthdate') {\r\n          different =\r\n            value[key].getTime() !== new Date(currentUser[key]).getTime();\r\n        } else {\r\n          different = value[key] !== currentUser[key];\r\n        }\r\n        if (different) break;\r\n      }\r\n\r\n      return different;\r\n    },\r\n    [currentUser]\r\n  );\r\n\r\n  const onSuccessImgUpload = useCallback(\r\n    (response) => {\r\n      Alert.success('Imagen actualizada con exito.');\r\n      dispatch(loginUserSuccessAction(response));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const onClickSave = useCallback(() => {\r\n    if (basicInfoValue.phoneNumber !== currentUser.phoneNumber) {\r\n      sendVerificationCode();\r\n    } else {\r\n      saveChanges();\r\n    }\r\n  }, [\r\n    basicInfoValue.phoneNumber,\r\n    currentUser.phoneNumber,\r\n    saveChanges,\r\n    sendVerificationCode,\r\n  ]);\r\n\r\n  return (\r\n    <Container style={{ width: '100%' }}>\r\n      <VerifyCodeModal\r\n        title='Verificacion de nuevo telefono'\r\n        show={showVerify}\r\n        onSuccessVerify={saveChanges}\r\n        phoneNumber={basicInfoValue.phoneNumber}\r\n        onCancel={() => setShowVerify(false)}\r\n      />\r\n      <Grid style={{ height: '100%' }}>\r\n        <Col\r\n          sm={8}\r\n          style={{\r\n            height: '100%',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            flexDirection: 'column',\r\n          }}\r\n        >\r\n          <h3 style={{ marginBottom: 10 }}>Perfil</h3>\r\n          <ImageUploader\r\n            action={environment.API_BASE + '/auth/users/uploadProfileImg'}\r\n            img={currentUser.profileImg}\r\n            onSuccessUpload={onSuccessImgUpload}\r\n          ></ImageUploader>\r\n          <h4 style={{ marginTop: 20 }}>\r\n            {currentUser.name} {currentUser.lastname}\r\n          </h4>\r\n          <Grid style={{ width: '100%', marginTop: 30 }}>\r\n            <Col\r\n              sm={11}\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <h5>{0}</h5>\r\n              posts\r\n            </Col>\r\n            <Col sm={2} style={{ height: '100%' }}>\r\n              <Divider vertical style={{ height: '100%' }} />\r\n            </Col>\r\n            <Col\r\n              sm={11}\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <h5>{currentUser.rating}</h5>\r\n              puntuacion\r\n            </Col>\r\n          </Grid>\r\n        </Col>\r\n        <Col\r\n          sm={2}\r\n          style={{ height: '100%', display: 'flex', justifyContent: 'center' }}\r\n        >\r\n          <Divider style={{ height: '100%' }} vertical />\r\n        </Col>\r\n        <Col sm={14}>\r\n          <Container\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'row',\r\n              justifyContent: 'space-between',\r\n            }}\r\n          >\r\n            <h4>Datos personales</h4>\r\n            <div>\r\n              <Button\r\n                color='red'\r\n                disabled={\r\n                  (!isDifferent(basicInfoValue) &&\r\n                    !isDifferent(externalLinksValue)) ||\r\n                  loading\r\n                }\r\n              >\r\n                Cancelar\r\n              </Button>\r\n              <Divider vertical style={{ height: '100%' }} />\r\n              <Button\r\n                color='blue'\r\n                disabled={\r\n                  !isDifferent(basicInfoValue) &&\r\n                  !isDifferent(externalLinksValue)\r\n                }\r\n                loading={loading}\r\n                onClick={onClickSave}\r\n              >\r\n                Guardar\r\n              </Button>\r\n            </div>\r\n          </Container>\r\n          <Divider />\r\n          <BasicInfoForm value={basicInfoValue} setValue={setBasicInfoValue} />\r\n          <h4 style={{ marginTop: 30 }}>Seguridad</h4>\r\n          <Divider />\r\n          <SecurityForm\r\n            value={securityInfoValue}\r\n            setValue={setSecurityInfoValue}\r\n            saveChanges={saveChanges}\r\n          />\r\n          <h4 style={{ marginTop: 30 }}>Links externos</h4>\r\n          <Divider />\r\n          <ExternalLinksForm\r\n            value={externalLinksValue}\r\n            setValue={setExternalLinksValue}\r\n          />\r\n        </Col>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useCallback, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Form, Modal, Schema } from 'rsuite';\r\nimport Input from '../../core/components/controls/Input';\r\nimport { examActions } from '../../store/actions';\r\nimport { AppState } from '../../store/reducers';\r\n\r\ninterface CreateExamModalProps {\r\n  show: boolean;\r\n  close: () => void;\r\n}\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\nconst model = Schema.Model({\r\n  name: StringType('Por favor ingrese una contraseña valida.')\r\n    .isRequired('Este campo es obligatorio.')\r\n    .minLength(6),\r\n});\r\n\r\nexport default (props: CreateExamModalProps) => {\r\n  const initialValue = {\r\n    name: '',\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((state: AppState) => state.exams.loading);\r\n\r\n  const [formValue, setFormValue] = useState(initialValue);\r\n  const form = useRef<any>(null);\r\n\r\n  const saveExam = useCallback(() => {\r\n    if (form.current.check()) {\r\n      dispatch(\r\n        examActions.createExamAction({\r\n          ...formValue,\r\n          questions: [],\r\n        })\r\n      );\r\n      setFormValue(initialValue);\r\n      props.close();\r\n    }\r\n  }, [dispatch, props, initialValue, formValue]);\r\n\r\n  return (\r\n    <Modal show={props.show} onHide={props.close}>\r\n      <Modal.Header>\r\n        <Modal.Title>Crear nuevo examen</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form\r\n          model={model}\r\n          fluid\r\n          ref={form}\r\n          onChange={setFormValue}\r\n          formValue={formValue}\r\n        >\r\n          <Input label='Nombre' name='name'></Input>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button color='red' onClick={props.close}>\r\n          Cancelar\r\n        </Button>\r\n        <Button appearance='primary' onClick={saveExam} loading={loading}>\r\n          Guardar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Button, Divider, List, Loader } from 'rsuite';\r\nimport { getExamsAction, setCurrentExamAction } from '../../store/actions/exam.actions';\r\nimport { AppState } from '../../store/reducers';\r\nimport CreateExamModal from '../CreateExamModal/CreateExamModal';\r\n\r\nexport default () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [showCreate, setShowCreate] = useState(false);\r\n  const currentExams = useSelector(\r\n    (state: AppState) => state.exams.currentExams\r\n  );\r\n  const loading = useSelector((state: AppState) => state.exams.loading);\r\n\r\n  useEffect(() => {\r\n    dispatch(getExamsAction());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      {' '}\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        <h1 style={{ display: 'inline' }}>Examenes</h1>\r\n        <Button color='blue' onClick={() => setShowCreate(true)}>\r\n          Agregar examen\r\n        </Button>\r\n      </div>\r\n      <Divider />\r\n      <List hover>\r\n        {loading ? (\r\n          <Loader center />\r\n        ) : (\r\n          currentExams.map((x) => (\r\n            <List.Item\r\n              style={{ cursor: 'pointer' }}\r\n              key={x._id}\r\n              onClick={() => {\r\n                history.push('/app/exams/' + x._id);\r\n                dispatch(setCurrentExamAction(x));\r\n              }}\r\n            >\r\n              <h1>{x.name}</h1>\r\n            </List.Item>\r\n          ))\r\n        )}\r\n      </List>\r\n      <CreateExamModal show={showCreate} close={() => setShowCreate(false)} />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport {  Container } from 'rsuite';\r\nimport ExamViewer from './ExamViewer/ExamViewer';\r\nimport ExamsList from './ExamsList/ExamsList';\r\n\r\nexport default () => {\r\n  const match = useRouteMatch();\r\n\r\n  return (\r\n    <Container>\r\n      <Switch>\r\n        <Route path={match.path + '/saved'} exact component={ExamsList} />\r\n        <Route path={match.path + '/:id'} exact component={ExamViewer} />\r\n      </Switch>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport Navbar from './Navbar/Navbar';\r\nimport SideNav from './SideNav/SideNav';\r\n\r\nimport './MainLayout.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState } from '../../store/reducers';\r\nimport { Redirect, Route, Switch, useHistory, useRouteMatch } from 'react-router-dom';\r\nimport { Container, Sidebar } from 'rsuite';\r\nimport PostList from '../../posts/PostList/PostList';\r\nimport CreatePostPage from '../../posts/CreatePostPage/CreatePostPage';\r\nimport ViewPostPage from '../../posts/ViewPostPage/ViewPostPage';\r\nimport CoursesList from '../../courses/CoursesList/CoursesList';\r\nimport CourseView from '../../courses/CourseView/CourseView';\r\nimport ProfileView from '../../profile/ProfileView';\r\nimport ExamView from '../../exams/ExamView';\r\n\r\ninterface MainLayoutProps {}\r\n\r\nexport default (props: MainLayoutProps) => {\r\n  const history = useHistory();\r\n  const match = useRouteMatch();\r\n  const [activeKey, setActiveKey] = useState('1');\r\n\r\n  const handleSelect = (key: string) => {\r\n    setActiveKey(key);\r\n    switch (key) {\r\n      case '1':\r\n        history.push(match.path + '/');\r\n        break;\r\n      \r\n      case '2':\r\n        history.push(match.path + '/courses');\r\n        break;\r\n      \r\n      case '3':\r\n        history.push(match.path + '/exams/saved');\r\n        break;\r\n    \r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const currentUser = useSelector((state: AppState) => state.auth.currentUser);\r\n  if (!currentUser) {\r\n    history.push('/auth/login');\r\n    return <></>;\r\n  }\r\n  return (\r\n    <>\r\n      <Navbar onSelect={handleSelect}></Navbar>\r\n      <Container style={{ height: '92%' }}>\r\n        <Sidebar style={{ display: 'flex', flexDirection: 'column', minHeight: '100vh' }}>\r\n          <SideNav activeKey={activeKey} handleSelect={handleSelect}></SideNav>\r\n        </Sidebar>\r\n        <Container style={{ padding: '20px', overflow: 'auto' }}>\r\n          <Switch>\r\n            <Route path={match.path + '/posts'} exact component={PostList}/>\r\n            <Route path={match.path + '/posts/create'} exact component={CreatePostPage}/>\r\n            <Route path={match.path + '/posts/:id'} exact component={ViewPostPage}/>\r\n            <Route path={match.path + '/posts/:id/edit'} exact component={CreatePostPage}/>\r\n            <Route path={match.path + '/courses'} exact component={CoursesList} />\r\n            <Route path={match.path + '/courses/:id'} component={CourseView} />\r\n            <Route path={match.path + '/profile'} component={ProfileView} />\r\n            <Route path={match.path + '/exams'} component={ExamView} />\r\n            <Redirect from={match.path + '/'} to={match.path + '/posts'} />\r\n          </Switch>\r\n        </Container>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useRef, useCallback } from 'react';\r\nimport { Schema, Form, Button, Message } from 'rsuite';\r\nimport Input from '../../core/components/controls/Input';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState } from '../../store/reducers';\r\nimport { Link } from 'react-router-dom';\r\nimport { loginUserAction } from '../../store/actions/auth.actions';\r\n\r\nconst { StringType, NumberType } = Schema.Types;\r\nconst model = Schema.Model({\r\n  identification: NumberType(\r\n    'Por favor ingrese un numero de cedula valido.'\r\n  ).isRequired('Este campo es obligatorio.'),\r\n  password: StringType('Por favor ingrese una contraseña valida.')\r\n    .isRequired('Este campo es obligatorio.')\r\n    .minLength(6),\r\n});\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((state: AppState) => state.auth.loading);\r\n  const [formValue, setFormValue] = useState({\r\n    identification: '',\r\n    password: '',\r\n  });\r\n  const error = useSelector((state: AppState) =>\r\n    state.auth.error ? state.auth.error : null\r\n  );\r\n  let form = useRef<any>(null);\r\n  const submitLogin = useCallback(() => {\r\n    if (form.current.check()) {\r\n      dispatch(loginUserAction(formValue));\r\n    }\r\n  }, [dispatch, form, formValue]);\r\n  return (\r\n    <>\r\n      {error ? <Message showIcon type='error' description={error.message} /> : null}\r\n      <Form\r\n        ref={form}\r\n        fluid\r\n        onChange={(formValue) => setFormValue(formValue as any)}\r\n        formValue={formValue}\r\n        model={model}\r\n      >\r\n        <Input name='identification' label='Cedula' />\r\n        <Input name='password' label='Contraseña' type='password' />\r\n        <p>\r\n          <Link to='/auth/register'>Aun no tienes una cuenta ?</Link>\r\n        </p>\r\n        <p>\r\n          <Link to='/auth/passwordRecovery'>Olvidaste tu contraseña ?</Link>\r\n        </p>\r\n        <br></br>\r\n        <Button\r\n          loading={loading}\r\n          appearance='primary'\r\n          disabled={loading}\r\n          onClick={submitLogin}\r\n        >\r\n          Iniciar Sesion\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useRef, useCallback } from 'react';\r\nimport { Schema, Form, Button, Message, Grid, Row, Col } from 'rsuite';\r\nimport Input from '../../core/components/controls/Input';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState } from '../../store/reducers';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  registerUserAction,\r\n  sendVerificationCodeAction,\r\n} from '../../store/actions/auth.actions';\r\n\r\nimport './RegisterForm.css';\r\nimport VerifyCodeModal from '../VerifyCodeModal/VerifyCodeModal';\r\n\r\nconst { StringType, NumberType, DateType } = Schema.Types;\r\nconst model = Schema.Model({\r\n  identification: NumberType(\r\n    'Por favor ingrese un numero de cedula valido.'\r\n  ).isRequired('Este campo es obligatorio.'),\r\n  email: StringType()\r\n    .isRequired('Este campo es obligatorio.')\r\n    .isEmail('El formato no es correcto.')\r\n    .maxLength(100),\r\n  name: StringType()\r\n    .isRequired('Este campo es obligatorio.')\r\n    .minLength(3)\r\n    .maxLength(100),\r\n  lastname: StringType()\r\n    .isRequired('Este campo es obligatorio.')\r\n    .minLength(3)\r\n    .maxLength(100),\r\n  birthdate: DateType().isRequired('Este campo es obligatorio.'),\r\n  phoneNumber: StringType('Por favor ingrese un numero valido')\r\n    .isRequired('Este campo es obligatorio')\r\n    .maxLength(100)\r\n    .minLength(6)\r\n    .addRule(\r\n      (value: string) => value.startsWith('+'),\r\n      'Por favor ingrese un codigo de pais valido.'\r\n    ),\r\n  password: StringType('Por favor ingrese una contraseña valida.')\r\n    .isRequired('Este campo es obligatorio.')\r\n    .minLength(6),\r\n  verifyPassword: StringType('Por favor ingrese una contraseña valida.')\r\n    .isRequired('Este campo es obligatorio.')\r\n    .minLength(6)\r\n    .addRule((value, data) => {\r\n      if (value !== data.password) return false;\r\n      return true;\r\n    }, 'Las contraseñas no coinciden.'),\r\n});\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((state: AppState) => state.auth.loading);\r\n  const [showVerify, setShowVerify] = useState(false);\r\n  const [formValue, setFormValue] = useState({\r\n    identification: 0,\r\n    email: '',\r\n    name: '',\r\n    lastname: '',\r\n    birthdate: new Date(),\r\n    phoneNumber: '',\r\n    password: '',\r\n    verifyPassword: '',\r\n  });\r\n  const error = useSelector((state: AppState) =>\r\n    state.auth.error ? state.auth.error : null\r\n  );\r\n  let form = useRef<any>(null);\r\n\r\n  const sendVerificationCode = useCallback(() => {\r\n    if (!form.current.check()) return;\r\n    dispatch(sendVerificationCodeAction(formValue.phoneNumber));\r\n    setShowVerify(true);\r\n  }, [dispatch, formValue.phoneNumber]);\r\n\r\n  const submitRegister = useCallback(() => {\r\n    if (form.current.check()) {\r\n      dispatch(registerUserAction({ ...formValue, isActive: true }));\r\n    }\r\n  }, [dispatch, form, formValue]);\r\n  return (\r\n    <>\r\n      {error ? (\r\n        <Message showIcon type='error' description={error.message} />\r\n      ) : null}\r\n      <Form\r\n        ref={form}\r\n        fluid\r\n        onChange={(formValue) => setFormValue(formValue as any)}\r\n        formValue={formValue}\r\n        model={model}\r\n      >\r\n        <Grid fluid>\r\n          <Row className='grid-row'>\r\n            <Col sm={24}>\r\n              <Input name='identification' label='Cedula' />\r\n            </Col>\r\n          </Row>\r\n          <Row className='grid-row'>\r\n            <Col sm={24}>\r\n              <Input name='email' label='Correo Electronico' />\r\n            </Col>\r\n          </Row>\r\n          <Row className='grid-row'>\r\n            <Col sm={24} md={12}>\r\n              <Input name='name' label='Nombre' />\r\n            </Col>\r\n            <Col sm={24} md={12}>\r\n              <Input name='lastname' label='Apellido' />\r\n            </Col>\r\n          </Row>\r\n          <Row className='grid-row'>\r\n            <Col sm={24} md={12}>\r\n              <Input name='birthdate' label='Fecha de Nacimiento' type='date' />\r\n            </Col>\r\n            <Col sm={24} md={12}>\r\n              <Input name='phoneNumber' label='Numero de telefono' />\r\n            </Col>\r\n          </Row>\r\n          <Row className='grid-row'>\r\n            <Col sm={24} md={12}>\r\n              <Input name='password' label='Contraseña' type='password' />\r\n            </Col>\r\n            <Col sm={24} md={12}>\r\n              <Input\r\n                name='verifyPassword'\r\n                label='Repetir contraseña'\r\n                type='password'\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n        <p>\r\n          <Link to='/auth/login'>Ya tienes una cuenta ? Inicia Sesion</Link>\r\n        </p>\r\n        <br></br>\r\n        <Button\r\n          loading={loading}\r\n          appearance='primary'\r\n          disabled={loading}\r\n          onClick={sendVerificationCode}\r\n        >\r\n          Registrarse\r\n        </Button>\r\n      </Form>\r\n      <VerifyCodeModal\r\n        title='Verificacion de telefono'\r\n        onSuccessVerify={submitRegister}\r\n        show={showVerify}\r\n        phoneNumber={formValue.phoneNumber}\r\n        onCancel={() => setShowVerify(false)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useRef, useCallback } from 'react';\r\nimport { Form, Button, Message, HelpBlock, Schema } from 'rsuite';\r\nimport Input from '../../core/components/controls/Input';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState } from '../../store/reducers';\r\nimport {\r\n  sendRecoveryCodeAction,\r\n  submitRecoveryCodeAction,\r\n  resetPasswordAction,\r\n} from '../../store/actions/auth.actions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst resetPassModel = Schema.Model({\r\n  email: Schema.Types.StringType().isEmail().isRequired(),\r\n  password: Schema.Types.StringType().isRequired('Este campo es obligatorio.'),\r\n  verifyPassword: Schema.Types.StringType(\r\n    'Por favor ingrese una contraseña valida.'\r\n  )\r\n    .isRequired('Este campo es obligatorio.')\r\n    .minLength(6)\r\n    .addRule((value, data) => {\r\n      if (value !== data.password) return false;\r\n      return true;\r\n    }, 'Las contraseñas no coinciden.'),\r\n});\r\n\r\nexport default () => {\r\n  const loading = useSelector((state: AppState) => state.auth.loading);\r\n  const error = useSelector((state: AppState) =>\r\n    state.auth.error ? state.auth.error : null\r\n  );\r\n  const currentResetEmail = useSelector(\r\n    (state: AppState) => state.auth.currentResetEmail\r\n  );\r\n  const message = useSelector((state: AppState) => state.auth.message);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [stage, setStage] = useState(1);\r\n\r\n  const [sendCodeFormValue, setSendCodeFormValue] = useState({\r\n    identification: '',\r\n  });\r\n  const [submitCodeFormValue, setSubmitCodeFormValue] = useState({\r\n    email: '',\r\n    code: '',\r\n  });\r\n  const [resetPassFormValue, setResetPassFormValue] = useState({\r\n    email: '',\r\n    password: '',\r\n    verifyPassword: '',\r\n  });\r\n\r\n  let form = useRef<any>(null);\r\n\r\n  const sendCode = useCallback(() => {\r\n    if (sendCodeFormValue.identification !== '') {\r\n      dispatch(sendRecoveryCodeAction(sendCodeFormValue.identification));\r\n    }\r\n  }, [dispatch, sendCodeFormValue]);\r\n\r\n  const submitCode = useCallback(() => {\r\n    if (submitCodeFormValue.code !== '') {\r\n      dispatch(submitRecoveryCodeAction(submitCodeFormValue));\r\n    }\r\n  }, [submitCodeFormValue, dispatch]);\r\n\r\n  const resetPassword = useCallback(() => {\r\n    if (form.current.check()) {\r\n      dispatch(resetPasswordAction(resetPassFormValue));\r\n    }\r\n  }, [form, dispatch, resetPassFormValue]);\r\n\r\n  if (currentResetEmail && stage === 1) {\r\n    setSubmitCodeFormValue({\r\n      email: currentResetEmail,\r\n      code: '',\r\n    });\r\n    setStage(2);\r\n  } else if (message !== '' && stage === 2) {\r\n    setResetPassFormValue({\r\n      email: currentResetEmail,\r\n      password: '',\r\n      verifyPassword: '',\r\n    });\r\n    setStage(3);\r\n  }\r\n\r\n  switch (stage) {\r\n    case 1:\r\n      return (\r\n        <>\r\n          {error ? (\r\n            <Message showIcon type='error' description={error.message} />\r\n          ) : null}\r\n          <Form\r\n            ref={form}\r\n            fluid\r\n            onChange={(formValue) => setSendCodeFormValue(formValue as any)}\r\n            formValue={sendCodeFormValue}\r\n          >\r\n            <Input name='identification' label='Cedula' />\r\n            <HelpBlock>\r\n              Ingresa tu cedula y enviaremos un codigo a tu correo electronico\r\n              asociado que te servirá para recuperar tu contraseña.\r\n            </HelpBlock>\r\n            <br></br>\r\n            <Button\r\n              loading={loading}\r\n              appearance='primary'\r\n              disabled={loading}\r\n              onClick={sendCode}\r\n            >\r\n              Solicitar Codigo\r\n            </Button>\r\n          </Form>\r\n        </>\r\n      );\r\n    case 2:\r\n      return (\r\n        <>\r\n          <Message\r\n            showIcon\r\n            type='warning'\r\n            description='No recargues ni dejes esta pagina!'\r\n          />\r\n          {error ? (\r\n            <Message showIcon type='error' description={error.message} />\r\n          ) : null}\r\n          <Form\r\n            ref={form}\r\n            fluid\r\n            onChange={(formValue) => setSubmitCodeFormValue(formValue as any)}\r\n            formValue={submitCodeFormValue}\r\n          >\r\n            <Input name='code' label='Codigo de recuperación' />\r\n\r\n            <HelpBlock>\r\n              Ingresa el codigo que te hemos enviado al correo para recuperar tu\r\n              contraseña.\r\n            </HelpBlock>\r\n            <br></br>\r\n            <Button\r\n              loading={loading}\r\n              appearance='primary'\r\n              disabled={loading}\r\n              onClick={submitCode}\r\n            >\r\n              Enviar Codigo\r\n            </Button>\r\n          </Form>\r\n        </>\r\n      );\r\n    case 3:\r\n      return (\r\n        <>\r\n          {message ? (\r\n            <Message\r\n              showIcon\r\n              type='success'\r\n              description={\r\n                <p>\r\n                  {message}\r\n                  <br />\r\n                  {message.includes('recuperado') ? <Link to=\"/auth/login\">Ir a la pagina de login</Link> : null}\r\n                </p>\r\n              }\r\n            />\r\n          ) : null}\r\n          {error ? (\r\n            <Message showIcon type='error' description={error.message} />\r\n          ) : null}\r\n          <Form\r\n            ref={form}\r\n            fluid\r\n            onChange={(formValue) => setResetPassFormValue(formValue as any)}\r\n            formValue={resetPassFormValue}\r\n            model={resetPassModel}\r\n          >\r\n            <Input name='password' label='Nueva contraseña' type='password' />\r\n            <Input\r\n              name='verifyPassword'\r\n              label='Repetir nueva contraseña'\r\n              type='password'\r\n            />\r\n\r\n            <HelpBlock>\r\n              Ingresa el codigo que te hemos enviado al correo para recuperar tu\r\n              contraseña.\r\n            </HelpBlock>\r\n            <br></br>\r\n            <Button\r\n              loading={loading}\r\n              appearance='primary'\r\n              disabled={loading}\r\n              onClick={resetPassword}\r\n            >\r\n              Reestablecer contraseña\r\n            </Button>\r\n          </Form>\r\n        </>\r\n      );\r\n    default:\r\n      return <></>;\r\n  }\r\n};\r\n","import React, { useCallback, useState } from 'react';\r\nimport {\r\n  Container,\r\n  Header,\r\n  Navbar,\r\n  Content,\r\n  FlexboxGrid,\r\n  Panel,\r\n  Footer,\r\n  Icon,\r\n  IconButton,\r\n} from 'rsuite';\r\nimport {\r\n  Route,\r\n  RouteComponentProps,\r\n  Switch,\r\n  useHistory,\r\n} from 'react-router-dom';\r\nimport LoginForm from '../../auth/LoginForm/LoginForm';\r\n\r\nimport './AuthLayout.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppState } from '../../store/reducers';\r\nimport RegisterForm from '../../auth/registerForm/RegisterForm';\r\nimport PasswordRecoveryForm from '../../auth/PasswordRecoveryForm/PasswordRecoveryForm';\r\nimport VerifyCodeModal from '../../auth/VerifyCodeModal/VerifyCodeModal';\r\nimport { sendVerificationCodeAction } from '../../store/actions/auth.actions';\r\n\r\ninterface AuthLayoutProps {}\r\n\r\nexport default (props: RouteComponentProps<AuthLayoutProps>) => {\r\n  const currentUser = useSelector((state: AppState) => state.auth.currentUser);\r\n  const codeVerified = useSelector(\r\n    (state: AppState) => state.auth.codeVerified\r\n  );\r\n  const [showVerify, setShowVerify] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const sendVerificationCode = useCallback(() => {\r\n    dispatch(sendVerificationCodeAction(currentUser?.phoneNumber));\r\n  }, [dispatch, currentUser]);\r\n\r\n  if (currentUser && (!currentUser.mfa || codeVerified)) {\r\n    const history = useHistory();\r\n    history.push('/app');\r\n    return <></>;\r\n  } else if (currentUser?.mfa && !showVerify && !codeVerified) {\r\n    setShowVerify(true);\r\n    sendVerificationCode();\r\n  }\r\n\r\n  return (\r\n    <Container style={{ height: '100%' }}>\r\n      <VerifyCodeModal\r\n        title='Autenticacion multi factor'\r\n        show={showVerify}\r\n        onCancel={() => setShowVerify(false)}\r\n        onSuccessVerify={() => {}}\r\n        phoneNumber={currentUser?.phoneNumber}\r\n      />\r\n      <Header>\r\n        <Navbar\r\n          appearance='inverse'\r\n          style={{ display: 'flex', alignItems: 'center', height: 50 }}\r\n        >\r\n          <Navbar.Header\r\n            style={{\r\n              backgroundColor: '#000066',\r\n              height: '80%',\r\n              width: 100,\r\n              borderRadius: 5,\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              marginLeft: 20,\r\n            }}\r\n          >\r\n            URUOnline\r\n          </Navbar.Header>\r\n        </Navbar>\r\n      </Header>\r\n      <Content className='auth-background'>\r\n        <FlexboxGrid justify='center' align='middle' style={{ height: '100%' }}>\r\n          <FlexboxGrid.Item colspan={12}>\r\n            <Panel\r\n              className='form-panel'\r\n              header={\r\n                <Switch>\r\n                  <Route\r\n                    exact\r\n                    path={props.match.path + '/login'}\r\n                    render={() => (\r\n                      <h1 style={{ color: 'black' }}>Iniciar Sesion</h1>\r\n                    )}\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path={props.match.path + '/register'}\r\n                    component={() => (\r\n                      <h1 style={{ color: 'black' }}>Registrarse</h1>\r\n                    )}\r\n                  />\r\n                </Switch>\r\n              }\r\n              bordered\r\n            >\r\n              <Route\r\n                exact\r\n                path={props.match.path + '/login'}\r\n                component={LoginForm}\r\n              />\r\n              <Route\r\n                exact\r\n                path={props.match.path + '/register'}\r\n                component={RegisterForm}\r\n              />\r\n              <Route\r\n                exact\r\n                path={props.match.path + '/passwordRecovery'}\r\n                component={PasswordRecoveryForm}\r\n              />\r\n            </Panel>\r\n          </FlexboxGrid.Item>\r\n        </FlexboxGrid>\r\n      </Content>\r\n      <Footer\r\n        style={{\r\n          height: 100,\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          backgroundColor: 'black',\r\n        }}\r\n      >\r\n        <IconButton\r\n          style={{ marginRight: 3, marginLeft: 3 }}\r\n          icon={<Icon icon='twitter' />}\r\n          circle\r\n          size='lg'\r\n          onClick={() => window.open('https://twitter.com/notiuru')}\r\n        />\r\n        <IconButton\r\n          style={{ marginRight: 3, marginLeft: 3 }}\r\n          icon={<Icon icon='instagram' />}\r\n          circle\r\n          size='lg'\r\n          onClick={() => window.open('https://www.instagram.com/notiuruoficial/?hl=en')}\r\n        />\r\n        <IconButton\r\n          style={{ marginRight: 3, marginLeft: 3 }}\r\n          icon={<Icon icon='desktop' />}\r\n          circle\r\n          size='lg'\r\n          onClick={() => window.open('http://uru.insiemp.com/educa/')}\r\n        />\r\n      </Footer>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\nimport './App.css';\n\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport MainLayout from './hoc/MainLayout/MainLayout';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { checkAuthenticatedAction } from './store/actions/auth.actions';\nimport { Switch, Route, Redirect, useHistory } from 'react-router-dom';\nimport AuthLayout from './hoc/AuthLayout/AuthLayout';\nimport { Loader } from 'rsuite';\nimport { AppState } from './store/reducers';\nimport 'moment/locale/es';\nimport moment from 'moment';\nimport { coreActions } from './store/actions';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const checked = useSelector(\n    (state: AppState) => state.auth.authenticatedChecked\n  );\n  const redirectUri = useSelector(\n    (state: AppState) => state.general.redirectUrl\n  );\n\n  moment.locale('es');\n  useEffect(() => {\n    dispatch(checkAuthenticatedAction());\n  }, [dispatch]);\n\n  const mainclasses = ['main-container'];\n  !checked && mainclasses.push('loader-container');\n\n  if (redirectUri) {\n    dispatch(coreActions.setRedirectAction(''));\n    history.push(redirectUri);\n  }\n  return (\n    <div className='App'>\n      <div className={mainclasses.join(' ')}>\n        {!checked ? (\n          <Loader size='lg' content='Cargando...' />\n        ) : (\n          <Switch>\n            <Redirect exact path='/' to='/auth/login' />\n            <Route path='/auth' component={AuthLayout} />\n            <Route path='/app' component={MainLayout} />\n          </Switch>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { User } from '../../core/models/User.model';\r\nimport { Action } from '../actions/action.model';\r\nimport { authActions } from '../actions';\r\nimport { ApiError } from '../../core/models/ApiError.model';\r\n\r\nexport interface AuthState {\r\n  authenticatedChecked: boolean;\r\n  currentUser: User | null;\r\n  currentResetEmail: string;\r\n  autocompleteUsers: User[];\r\n  loading: boolean;\r\n  error: ApiError | null;\r\n  codeVerified: boolean;\r\n  message: string;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  authenticatedChecked: false,\r\n  currentUser: null,\r\n  currentResetEmail: '',\r\n  autocompleteUsers: [],\r\n  loading: true,\r\n  codeVerified: false,\r\n  error: null,\r\n  message: '',\r\n};\r\n\r\nexport const authReducer = (\r\n  state: AuthState = initialState,\r\n  action: Action\r\n) => {\r\n  switch (action.type) {\r\n    case authActions.CHECK_AUTHENTICATED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case authActions.CHECK_AUTHENTICATED_SUCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentUser: action.payload,\r\n        authenticatedChecked: true,\r\n      };\r\n    case authActions.CHECK_AUTHENTICATED_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        authenticatedChecked: true,\r\n      };\r\n    case authActions.LOGIN_USER:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        currentUser: null,\r\n      };\r\n    case authActions.LOGIN_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentUser: action.payload,\r\n      };\r\n    case authActions.LOGIN_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case authActions.RESET_VERIFIED: \r\n      return {\r\n        ...state,\r\n        codeVerified: action.payload,\r\n      }\r\n    case authActions.SEND_VERIFICATION_CODE:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: true,\r\n        codeVerified: false,\r\n        message: '',\r\n      };\r\n    case authActions.SEND_VERIFICATION_CODE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: false,\r\n        codeVerified: false,\r\n        message: action.payload,\r\n      };\r\n    case authActions.VERIFY_CODE:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: true,\r\n      };\r\n    case authActions.VERIFY_CODE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: false,\r\n        codeVerified: true,\r\n      };\r\n    case authActions.REGISTER_USER:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        currentUser: null,\r\n        error: null,\r\n      };\r\n    case authActions.REGISTER_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentUser: action.payload,\r\n        error: null,\r\n      };\r\n    case authActions.UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case authActions.UPDATE_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentUser: action.payload,\r\n        error: null,\r\n      };\r\n    case authActions.LOGOUT_USER:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case authActions.LOGOUT_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentUser: null,\r\n      };\r\n    case authActions.SEND_RECOVERY_CODE:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n        message: '',\r\n      };\r\n    case authActions.SEND_RECOVERY_CODE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        currentResetEmail: action.payload.email,\r\n        // message: action.payload.message,\r\n      };\r\n    case authActions.SUBMIT_RECOVERY_CODE:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n        message: '',\r\n      };\r\n    case authActions.SUBMIT_RECOVERY_CODE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload.message,\r\n      };\r\n    case authActions.RESET_PASSWORD:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case authActions.RESET_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload.message,\r\n        currentResetEmail: null,\r\n      };\r\n    case authActions.SEARCH_USERS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        autocompleteUsers: [],\r\n      };\r\n    case authActions.SEARCH_USERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        autocompleteUsers: action.payload,\r\n      };\r\n    case authActions.AUTH_ACTION_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { AlumnGrade } from '../../core/models/AlumnGrade.model';\r\nimport { Assignation } from '../../core/models/Assignation.model';\r\nimport { Attachment } from '../../core/models/Attachment.model';\r\nimport { Course } from '../../core/models/Course.model';\r\nimport { CourseGrade } from '../../core/models/CourseGrade.model';\r\nimport { DeliveredAssignation } from '../../core/models/DeliveredAssignation.model';\r\nimport { ProfessorGrade } from '../../core/models/ProfessorGrade.model';\r\nimport { User } from '../../core/models/User.model';\r\nimport { courseActions } from '../actions';\r\nimport { Action } from '../actions/action.model';\r\n\r\nexport interface CoursesState {\r\n  currentCourses: Course[];\r\n  currentCourse: Course | null;\r\n  currentCourseAssignations: Assignation[];\r\n  currentCourseGrades: CourseGrade[];\r\n  currentAlumnGrades: AlumnGrade[];\r\n  currentProfessorGrades: ProfessorGrade[];\r\n  currentAssignation: Assignation;\r\n  currentAttachments: Attachment[];\r\n  error: string;\r\n  message: string;\r\n  loading: boolean;\r\n}\r\n\r\nconst initialState: CoursesState = {\r\n  currentCourses: [],\r\n  currentCourse: null,\r\n  currentCourseAssignations: [],\r\n  currentProfessorGrades: [],\r\n  currentCourseGrades: [],\r\n  currentAlumnGrades: [],\r\n  currentAttachments: [],\r\n  currentAssignation: null,\r\n  error: '',\r\n  message: '',\r\n  loading: false,\r\n};\r\n\r\nexport const courseReducer = (\r\n  state: CoursesState = initialState,\r\n  action: Action\r\n): CoursesState => {\r\n  switch (action.type) {\r\n    case courseActions.SEARCH_COURSES:\r\n      return {\r\n        ...state,\r\n        currentCourses: [],\r\n        loading: true,\r\n        error: '',\r\n      };\r\n\r\n    case courseActions.SEARCH_COURSES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentCourses: action.payload,\r\n        loading: false,\r\n      };\r\n    case courseActions.CREATE_COURSE:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case courseActions.CREATE_COURSE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentCourses: [...state.currentCourses, action.payload],\r\n      };\r\n    case courseActions.SEARCH_COURSE_BY_ID:\r\n      return {\r\n        ...state,\r\n        currentCourse: null,\r\n        loading: true,\r\n        error: '',\r\n      };\r\n    case courseActions.SEARCH_COURSE_BY_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentCourse: action.payload,\r\n        loading: false,\r\n        error: '',\r\n      };\r\n    case courseActions.ADD_COURSE_MEMBER:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n      };\r\n    case courseActions.ADD_COURSE_MEMBER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentCourse: {\r\n          ...state.currentCourse,\r\n          alumns: [action.payload, ...(state.currentCourse?.alumns as User[])],\r\n        },\r\n      };\r\n    case courseActions.REMOVE_COURSE_MEMBER:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n      };\r\n    case courseActions.REMOVE_COURSE_MEMBER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentCourse: {\r\n          ...state.currentCourse,\r\n          alumns: state.currentCourse?.alumns?.filter(\r\n            (x) => x._id !== action.payload._id\r\n          ),\r\n        },\r\n      };\r\n    case courseActions.CREATE_DELIVERED_ASSIGNATION:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n        message: '',\r\n      };\r\n    case courseActions.CREATE_DELIVERED_ASSIGNATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        message: '',\r\n        currentAssignation: {\r\n          ...state.currentAssignation,\r\n          delivered: [...state.currentAssignation.delivered, action.payload],\r\n        },\r\n      };\r\n    case courseActions.DELETE_DELIVERED_ASSIGNATION:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n        message: '',\r\n      };\r\n    case courseActions.DELETE_DELIVERED_ASSIGNATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        message: 'Se ha eliminado la entrega con exito.',\r\n        currentAssignation: {\r\n          ...state.currentAssignation,\r\n          delivered: (state.currentAssignation\r\n            .delivered as DeliveredAssignation[])?.filter(\r\n            (x) => x._id !== action.payload._id\r\n          ),\r\n        },\r\n      };\r\n    case courseActions.CREATE_COURSE_ASSIGNATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        message: 'Se ha creado la asignacion con exito.',\r\n        currentCourseAssignations: [\r\n          ...state.currentCourseAssignations,\r\n          action.payload,\r\n        ],\r\n      };\r\n    case courseActions.DELETE_ASSIGNATION:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n        message: '',\r\n      };\r\n    case courseActions.DELETE_ASSIGNATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        message: action.payload,\r\n        currentAssignation: null,\r\n      };\r\n    case courseActions.SEARCH_COURSE_ASSIGNATIONS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        currentCourseAssignations: [],\r\n      };\r\n    case courseActions.SEARCH_COURSE_ASSIGNATIONS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentCourseAssignations: action.payload,\r\n      };\r\n    case courseActions.SEARCH_SINGLE_ASSIGNATION:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        currentAssignation: null,\r\n      };\r\n    case courseActions.SEARCH_SINGLE_ASSIGNATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        currentAssignation: action.payload,\r\n      };\r\n\r\n    case courseActions.CREATE_COURSE_GRADE:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n        message: '',\r\n      };\r\n    case courseActions.CREATE_COURSE_GRADE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        currentCourseGrades: [...state.currentCourseGrades, action.payload],\r\n      };\r\n    case courseActions.GET_COURSE_GRADES:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n        message: '',\r\n        currentCourseGrades: [],\r\n      };\r\n    case courseActions.GET_COURSE_GRADES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        currentCourseGrades: action.payload,\r\n      };\r\n    case courseActions.GET_ALL_PROFESSOR_GRADES:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: '',\r\n        error: '',\r\n        currentProfessorGrades: [],\r\n      };\r\n    case courseActions.GET_ALL_PROFESSOR_GRADES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        currentProfessorGrades: action.payload,\r\n      };\r\n    case courseActions.CREATE_ALUMN_GRADE:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n        message: '',\r\n      };\r\n    case courseActions.CREATE_ALUMN_GRADE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        currentAlumnGrades: [...state.currentAlumnGrades, action.payload],\r\n      };\r\n    case courseActions.GET_ALUMN_GRADES:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n        currentAlumnGrades: [],\r\n      };\r\n    case courseActions.UPDATE_ALUMN_GRADE:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n      };\r\n    case courseActions.UPDATE_ALUMN_GRADE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        currentAlumnGrades: [\r\n          ...state.currentAlumnGrades.filter(\r\n            (x) => x._id !== action.payload._id\r\n          ),\r\n          action.payload,\r\n        ],\r\n      };\r\n    case courseActions.GET_ALUMN_GRADES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentAlumnGrades: action.payload,\r\n      };\r\n    case courseActions.GET_COURSE_ATTACHMENTS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n        message: '',\r\n        currentAttachments: [],\r\n      };\r\n    case courseActions.GET_COURSE_ATTACHMENTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        message: '',\r\n        currentAttachments: action.payload,\r\n      };\r\n    case courseActions.CREATE_COURSE_FEED:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n        message: '',\r\n      };\r\n    case courseActions.CREATE_COURSE_FEED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        currentCourse: {\r\n          ...state.currentCourse,\r\n          feed: action.payload,\r\n        },\r\n      };\r\n    case courseActions.COURSE_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.message,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { coreActions } from '../actions';\r\nimport { Action } from '../actions/action.model';\r\n\r\nexport interface GeneralState {\r\n  redirectUrl: string;\r\n  loading: boolean;\r\n}\r\n\r\nconst initialState: GeneralState = {\r\n  redirectUrl: '',\r\n  loading: false,\r\n};\r\n\r\nexport const generalReducer = (\r\n  state: GeneralState = initialState,\r\n  action: Action\r\n) => {\r\n  switch (action.type) {\r\n    case coreActions.SET_REDIRECT:\r\n      return {\r\n        ...state,\r\n        redirectUrl: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { Aggregator } from '../../core/models/Aggregator.model';\r\nimport { Comment } from '../../core/models/Comment.model';\r\nimport { PagingInfo } from '../../core/models/PagingInfo.model';\r\nimport { Post } from '../../core/models/Post.model';\r\nimport { postActions } from '../actions';\r\nimport { Action } from '../actions/action.model';\r\n\r\nexport interface PostsState {\r\n  loading: boolean;\r\n  posts: Post[];\r\n  currentPost: Post | null;\r\n  currentPostComments: Comment[];\r\n  paging: PagingInfo | null;\r\n}\r\n\r\nconst initialState: PostsState = {\r\n  loading: false,\r\n  posts: [],\r\n  currentPost: null,\r\n  currentPostComments: [],\r\n  paging: null,\r\n};\r\n\r\nexport const postsReducer = (\r\n  state: PostsState = initialState,\r\n  action: Action\r\n) => {\r\n  switch (action.type) {\r\n    case postActions.SEARCH_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: [],\r\n        loading: true,\r\n        paging: null,\r\n      };\r\n    case postActions.SEARCH_POSTS_SUCCESS:\r\n      const payload: Aggregator<Post> = action.payload;\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        posts: payload.docs,\r\n        paging: payload,\r\n      };\r\n    case postActions.SEARCH_POST_BY_ID:\r\n      return {\r\n        ...state,\r\n        currentPost: null,\r\n        loading: true,\r\n      };\r\n    case postActions.SEARCH_POST_BY_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentPost: action.payload,\r\n      };\r\n\r\n    case postActions.CREATE_POST_SUCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case postActions.UPVOTE_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentPost: {\r\n          ...state.currentPost,\r\n          votes:\r\n            typeof state.currentPost?.votes !== 'undefined'\r\n              ? state.currentPost?.votes + 1\r\n              : 0,\r\n          voted: true,\r\n        },\r\n      };\r\n    case postActions.DOWNVOTE_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentPost: {\r\n          ...state.currentPost,\r\n          votes:\r\n            typeof state.currentPost?.votes !== 'undefined'\r\n              ? state.currentPost?.votes - 1\r\n              : 0,\r\n          voted: false,\r\n        },\r\n      };\r\n    case postActions.SEARCH_COMMENTS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        currentPostComments: [],\r\n      };\r\n    case postActions.SEARCH_COMMENTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentPostComments: action.payload,\r\n      };\r\n    case postActions.CREATE_COMMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentPostComments: [\r\n          ...state.currentPostComments,\r\n          action.payload.payload,\r\n        ],\r\n      };\r\n    case postActions.UPVOTE_COMMENT_SUCCESS:\r\n      const index = state.currentPostComments.findIndex(\r\n        (c) => c._id === action.payload.payload\r\n      );\r\n      const updatedComments = [...state.currentPostComments];\r\n      updatedComments[index] = {\r\n        ...updatedComments[index],\r\n        votes: (updatedComments[index]?.votes as number) + 1,\r\n        voted: true,\r\n      };\r\n      return {\r\n        ...state,\r\n        currentPostComments: updatedComments,\r\n      };\r\n    case postActions.DOWNVOTE_COMMENT_SUCCESS:\r\n      const i = state.currentPostComments.findIndex(\r\n        (c) => c._id === action.payload.payload\r\n      );\r\n      const updated = [...state.currentPostComments];\r\n      updated[i] = {\r\n        ...updated[i],\r\n        votes: (updated[i]?.votes as number) - 1,\r\n        voted: false,\r\n      };\r\n      return {\r\n        ...state,\r\n        currentPostComments: updated,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { DeliveredExam } from '../../core/models/DeliveredExam.model';\r\nimport { Exam } from '../../core/models/Exam.model';\r\nimport { examActions } from '../actions';\r\nimport { Action } from '../actions/action.model';\r\n\r\nexport interface ExamsState {\r\n  currentExams: Exam[];\r\n  currentExam: Exam;\r\n  currentDeliveredExam: DeliveredExam;\r\n  loading: boolean;\r\n  error: string;\r\n  message: string;\r\n}\r\n\r\nconst initialState: ExamsState = {\r\n  currentExam: null,\r\n  currentExams: [],\r\n  currentDeliveredExam: null,\r\n  loading: false,\r\n  error: '',\r\n  message: '',\r\n};\r\n\r\nexport const examsReducer = (\r\n  state: ExamsState = initialState,\r\n  action: Action\r\n): ExamsState => {\r\n  switch (action.type) {\r\n    case examActions.CREATE_EXAM:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n        message: '',\r\n      };\r\n    case examActions.CREATE_EXAM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        currentExams: [...state.currentExams, action.payload],\r\n      };\r\n    case examActions.GET_EXAMS:\r\n      const auxState = {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n        message: '',\r\n      };\r\n      if (action.payload) auxState.currentExam = null;\r\n      else auxState.currentExams = [];\r\n      return auxState;\r\n    case examActions.GET_EXAMS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentExams: action.payload,\r\n        error: '',\r\n      };\r\n    case examActions.DELETE_EXAM:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n        message: '',\r\n      };\r\n    case examActions.DELETE_EXAM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        currentExams: state.currentExams.filter(\r\n          (x) => x._id !== action.payload\r\n        ),\r\n      };\r\n    case examActions.ADD_EXAM_QUESTION:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n        message: '',\r\n      };\r\n    case examActions.ADD_EXAM_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        currentExam: {\r\n          ...state.currentExam,\r\n          questions: action.payload,\r\n        },\r\n      };\r\n    case examActions.CREATE_DELIVERED_EXAM:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        currentDeliveredExam: null,\r\n        error: '',\r\n      };\r\n    case examActions.CREATE_DELIVERED_EXAM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentDeliveredExam: action.payload,\r\n        loading: false,\r\n      };\r\n    case examActions.SET_CURRENT_EXAM:\r\n      return {\r\n        ...state,\r\n        currentExam: action.payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { authReducer, AuthState } from './auth.reducer';\r\nimport { courseReducer, CoursesState } from './course.reducer';\r\nimport { ExamsState } from './exams.reducer';\r\nimport { generalReducer, GeneralState } from './general.reducer';\r\nimport { postsReducer, PostsState } from './posts.reducer';\r\nimport { examsReducer } from './exams.reducer';\r\n\r\nexport interface AppState {\r\n  auth: AuthState;\r\n  posts: PostsState;\r\n  general: GeneralState;\r\n  exams: ExamsState;\r\n  courses: CoursesState\r\n}\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  posts: postsReducer,\r\n  general: generalReducer,\r\n  courses: courseReducer,\r\n  exams: examsReducer\r\n});\r\n","import axios from 'axios';\r\nimport environment from './environment';\r\n\r\n\r\nconst api = axios.create({\r\n    baseURL: environment.API_BASE\r\n});\r\n\r\napi.defaults.withCredentials = true;\r\n\r\nexport default api;","import { put } from 'redux-saga/effects';\r\nimport api from '../../core/axios';\r\nimport { Action } from '../actions/action.model';\r\nimport { authActions } from '../actions/index';\r\n\r\nexport function* checkAuthenticatedEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get('/auth');\r\n    yield put(authActions.checkAuthenticatedSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(authActions.checkAuthenticatedFailAction());\r\n  }\r\n}\r\n\r\nexport function* loginUserEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/auth/login', action.payload);\r\n    yield put(authActions.loginUserSuccessAction(data));\r\n  } catch (error) {\r\n    console.log(error);\r\n    yield put(\r\n      authActions.loginUserFailAction({\r\n        message: error.message,\r\n        stack: error.stack,\r\n        status: error.response.status,\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport function* registerUserEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/auth/register', action.payload);\r\n    yield put(authActions.registerUserSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(authActions.authActionFail(error));\r\n  }\r\n}\r\n\r\nexport function* sendVerificationCodeEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/auth/sendCode', {\r\n      phoneNumber: action.payload\r\n    });\r\n    yield put(authActions.sendVerificationCodeSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(authActions.authActionFail(error));\r\n  }\r\n}\r\n\r\nexport function* verifyCodeEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/auth/verifyCode', {\r\n      verificationCode: action.payload.verificationCode,\r\n      phoneNumber: action.payload.phoneNumber\r\n    });\r\n    yield put(authActions.verifyCodeSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(authActions.authActionFail(error));\r\n  } \r\n}\r\n\r\nexport function* updateUserEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.put('/auth/users', action.payload);\r\n    yield put(authActions.updateUserSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(authActions.authActionFail(error));\r\n  }\r\n}\r\n\r\nexport function* logoutUserEffect(action: Action) {\r\n  try {\r\n    yield api.get('/auth/logout');\r\n    yield put(authActions.logoutUserSuccessAction());\r\n  } catch (error) {\r\n    yield put(\r\n      authActions.authActionFail({\r\n        message: error.message,\r\n        stack: error.stack,\r\n        status: error.response.status,\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport function* sendRecoveryCodeEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get('/auth/passResetCode?id=' + action.payload);\r\n    yield put(authActions.sendRecoveryCodeSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(authActions.authActionFail(error.response.data));\r\n  }\r\n}\r\n\r\nexport function* submitRecoveryCodeEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/auth/passResetCode', action.payload);\r\n    yield put(authActions.submitRecoveryCodeSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(authActions.authActionFail(error.response.data));\r\n  }\r\n}\r\n\r\nexport function* resetPasswordEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/auth/resetPass', action.payload);\r\n    yield put(authActions.resetPasswordSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(authActions.authActionFail(error.response.data));\r\n  }\r\n}\r\n\r\nexport function* searchUsersEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get('/auth/users?term=' + action.payload);\r\n    yield put(authActions.searchUsersActionSuccess(data));\r\n  } catch (error) {\r\n    yield put(authActions.authActionFail(error.response.data));\r\n  }\r\n}\r\n\r\nconst authEffects = [\r\n  {\r\n    action: authActions.CHECK_AUTHENTICATED,\r\n    effect: checkAuthenticatedEffect,\r\n  },\r\n  {\r\n    action: authActions.LOGIN_USER,\r\n    effect: loginUserEffect,\r\n  },\r\n  {\r\n    action: authActions.REGISTER_USER,\r\n    effect: registerUserEffect,\r\n  },\r\n  {\r\n    action: authActions.SEND_VERIFICATION_CODE,\r\n    effect: sendVerificationCodeEffect\r\n  },\r\n  {\r\n    action: authActions.VERIFY_CODE,\r\n    effect: verifyCodeEffect\r\n  },\r\n  {\r\n    action: authActions.UPDATE_USER,\r\n    effect: updateUserEffect,\r\n  },\r\n  {\r\n    action: authActions.LOGOUT_USER,\r\n    effect: logoutUserEffect,\r\n  },\r\n  {\r\n    action: authActions.SEND_RECOVERY_CODE,\r\n    effect: sendRecoveryCodeEffect,\r\n  },\r\n  {\r\n    action: authActions.SUBMIT_RECOVERY_CODE,\r\n    effect: submitRecoveryCodeEffect,\r\n  },\r\n  {\r\n    action: authActions.RESET_PASSWORD,\r\n    effect: resetPasswordEffect,\r\n  },\r\n  {\r\n    action: authActions.SEARCH_USERS,\r\n    effect: searchUsersEffect,\r\n  },\r\n];\r\n\r\nexport default authEffects;\r\n","import { put } from 'redux-saga/effects';\r\nimport api from '../../core/axios';\r\nimport { courseActions } from '../actions';\r\nimport { Action } from '../actions/action.model';\r\nimport { setRedirectAction } from '../actions/core.actions';\r\n\r\nexport function* searchCoursesEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get(`/courses/${action.payload.userType}?period=${action.payload.period}`);\r\n    yield put(courseActions.searchCoursesSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* createCourseEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/courses', action.payload);\r\n    yield put(courseActions.createCourseSuccessAction(data.course));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n} \r\n\r\nexport function* searchCourseByIdEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get(`/courses?courseId=${action.payload}`);\r\n    yield put(courseActions.searchCourseByIdSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* addCourseMemberEffect(action: Action) {\r\n  try {\r\n    yield api.post(`/courses/members?courseId=${action.payload.course._id}&alumnId=${action.payload.user._id}`);\r\n    yield put(courseActions.addCourseMemberSucessAction(action.payload.user));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* removeCourseMemberEffect(action: Action) {\r\n  try {\r\n    yield api.delete(`/courses/members?courseId=${action.payload.course._id}&alumnId=${action.payload.user._id}`);\r\n    yield put(courseActions.removeCourseMemberSuccessAction(action.payload.user));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* searchCourseAssignationsEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get(`/courses/assignations?courseId=${action.payload}`);\r\n    yield put(courseActions.searchCourseAssignationsSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* searchSingleAssignationEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get(`/courses/assignations?courseId=${action.payload.courseId}&assignId=${action.payload.assignId}&filter=${action.payload.filter}`);\r\n    yield put(courseActions.searchSingleAssignationSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* deleteAssignationEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.delete(`/courses/assignations?assignationId=${action.payload}`);\r\n    yield put(courseActions.deleteAssignationSuccessAction(data.message));\r\n    yield put(setRedirectAction('/app/courses'))\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* createCourseAssignationEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/courses/assignations', action.payload);\r\n    yield put(courseActions.createCourseAssignationSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* createDeliveredAssignationEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/courses/deliveredAssignations', action.payload);\r\n    yield put(courseActions.createDeliveredAssignationSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* deleteDeliveredAssignationEffect(action: Action) {\r\n  try {\r\n    yield api.delete('/courses/deliveredAssignations', { data: action.payload });\r\n    yield put(courseActions.deleteDeliveredAssignationSuccessAction(action.payload));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* createCourseGradeEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/courses/grades', action.payload);\r\n    yield put(courseActions.getAllProfessorGradesAction(action.payload.course));\r\n    yield put(courseActions.createCourseGradeSuccessAction(data.grade));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* getCourseGradesEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get('/courses/grades?courseId=' + action.payload);\r\n    yield put(courseActions.getCourseGradesSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* createAlumnGradeEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/courses/grades/alumn', action.payload);\r\n    yield put(courseActions.createAlumnGradeSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* getAlumnGradesEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get(`/courses/grades/alumn?courseId=${action.payload.course}&alumnId=${action.payload.alumn}&filter=${action.payload.filter}`);\r\n    yield put(courseActions.getAlumnGradesSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* updateAlumnGradeEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.put(`/courses/grades/alumn?gradeId=${action.payload.grade}&alumnId=${action.payload.alumn}`, action.payload);\r\n    yield put(courseActions.updateAlumnGradeSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* getAllProfessorGradesEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get(`/courses/grades/professor?courseId=${action.payload}`);\r\n    yield put(courseActions.getAllProfessorGradesSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* getAllCourseAttachmentsEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get(`/courses/attachments?courseId=${action.payload}`);\r\n    yield put(courseActions.getAllCourseAttachmentsSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* createCourseFeedEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/courses/feed', action.payload);\r\n    yield put(courseActions.createCourseFeedSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nconst courseEffects = [\r\n  {\r\n    action: courseActions.SEARCH_COURSES,\r\n    effect: searchCoursesEffect\r\n  },\r\n  {\r\n    action: courseActions.CREATE_COURSE,\r\n    effect: createCourseEffect\r\n  },\r\n  {\r\n    action: courseActions.SEARCH_COURSE_BY_ID,\r\n    effect: searchCourseByIdEffect\r\n  },\r\n  {\r\n    action: courseActions.ADD_COURSE_MEMBER,\r\n    effect: addCourseMemberEffect\r\n  },\r\n  {\r\n    action: courseActions.REMOVE_COURSE_MEMBER,\r\n    effect: removeCourseMemberEffect\r\n  },\r\n  {\r\n    action: courseActions.SEARCH_COURSE_ASSIGNATIONS,\r\n    effect: searchCourseAssignationsEffect\r\n  },\r\n  {\r\n    action: courseActions.DELETE_ASSIGNATION,\r\n    effect: deleteAssignationEffect\r\n  },\r\n  {\r\n    action: courseActions.SEARCH_SINGLE_ASSIGNATION,\r\n    effect: searchSingleAssignationEffect\r\n  },\r\n  {\r\n    action: courseActions.CREATE_COURSE_ASSIGNATION,\r\n    effect: createCourseAssignationEffect\r\n  },\r\n  {\r\n    action: courseActions.CREATE_DELIVERED_ASSIGNATION,\r\n    effect: createDeliveredAssignationEffect\r\n  },\r\n  {\r\n    action: courseActions.DELETE_DELIVERED_ASSIGNATION,\r\n    effect: deleteDeliveredAssignationEffect\r\n  },\r\n  {\r\n    action: courseActions.CREATE_COURSE_GRADE,\r\n    effect: createCourseGradeEffect,\r\n  },\r\n  {\r\n    action: courseActions.CREATE_ALUMN_GRADE,\r\n    effect: createAlumnGradeEffect\r\n  },\r\n  {\r\n    action: courseActions.GET_ALUMN_GRADES,\r\n    effect: getAlumnGradesEffect\r\n  },\r\n  {\r\n    action: courseActions.GET_COURSE_GRADES,\r\n    effect: getCourseGradesEffect\r\n  },\r\n  {\r\n    action: courseActions.UPDATE_ALUMN_GRADE,\r\n    effect: updateAlumnGradeEffect\r\n  },\r\n  {\r\n    action: courseActions.GET_ALL_PROFESSOR_GRADES,\r\n    effect: getAllProfessorGradesEffect\r\n  },\r\n  {\r\n    action: courseActions.GET_COURSE_ATTACHMENTS,\r\n    effect: getAllCourseAttachmentsEffect\r\n  },\r\n  {\r\n    action: courseActions.CREATE_COURSE_FEED,\r\n    effect: createCourseFeedEffect\r\n  }\r\n]\r\n\r\nexport default courseEffects;\r\n","import { put } from 'redux-saga/effects';\r\nimport api from '../../core/axios';\r\nimport { examActions } from '../actions';\r\nimport { Action } from '../actions/action.model';\r\n\r\nfunction* createExamEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/exams', action.payload);\r\n    yield put(examActions.createExamSuccessAction(data.exam));\r\n  } catch (error) {\r\n    yield put(examActions.examFailAction(error));\r\n  }\r\n}\r\n\r\nfunction* getExamsEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get('/exams?id=' + action.payload);\r\n    yield put(\r\n      action.payload\r\n        ? examActions.setCurrentExamAction(data)\r\n        : examActions.getExamsSuccessAction(data)\r\n    );\r\n  } catch (error) {\r\n    yield put(examActions.examFailAction(error));\r\n  }\r\n}\r\n\r\nfunction* deleteExamEffect(action: Action) {\r\n  try {\r\n    yield api.delete('/exams', {\r\n      data: { examId: action.payload },\r\n    });\r\n    yield put(examActions.deleteExamSuccessAction(action.payload));\r\n  } catch (error) {\r\n    yield put(examActions.examFailAction(error));\r\n  }\r\n}\r\n\r\nfunction* addExamQuestionEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.put('/exams', action.payload);\r\n    yield put(examActions.addExamQuestionSuccess(data.exam.questions));\r\n  } catch (error) {\r\n    yield put(examActions.examFailAction(error));\r\n  }\r\n}\r\n\r\nfunction* createDeliveredExamEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/exams/delivered', action.payload);\r\n    yield put(examActions.createDeliveredExamSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(examActions.examFailAction(error));\r\n  }\r\n}\r\nconst examEffects = [\r\n  {\r\n    action: examActions.CREATE_EXAM,\r\n    effect: createExamEffect,\r\n  },\r\n  {\r\n    action: examActions.GET_EXAMS,\r\n    effect: getExamsEffect,\r\n  },\r\n  {\r\n    action: examActions.DELETE_EXAM,\r\n    effect: deleteExamEffect,\r\n  },\r\n  {\r\n    action: examActions.ADD_EXAM_QUESTION,\r\n    effect: addExamQuestionEffect,\r\n  },\r\n  {\r\n    action: examActions.CREATE_DELIVERED_EXAM,\r\n    effect: createDeliveredExamEffect,\r\n  },\r\n];\r\n\r\nexport default examEffects;\r\n","import api from '../../core/axios';\r\nimport { Action } from '../actions/action.model';\r\nimport { DELETE_ATTACHMENT } from '../actions/core.actions';\r\n\r\nexport function* deleteAttachmentEffect(action: Action) {\r\n  try {\r\n    yield api.delete('/attachments', { data: action.payload });\r\n  } catch (error) {}\r\n}\r\n\r\nconst generalEffects = [\r\n  {\r\n    action: DELETE_ATTACHMENT,\r\n    effect: deleteAttachmentEffect,\r\n  },\r\n];\r\n\r\nexport default generalEffects;\r\n","import { put } from 'redux-saga/effects';\r\nimport api from '../../core/axios';\r\nimport { coreActions, postActions } from '../actions';\r\nimport { Action } from '../actions/action.model';\r\n\r\nexport function* searchPostsEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get(\r\n      `/posts?page=${action.payload.page}&filter=${action.payload.filter}`\r\n    );\r\n    yield put(postActions.searchPostsSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* searchPostByIdEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get('/posts?id=' + action.payload);\r\n    yield put(postActions.searchPostByIdSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* createPostEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/posts', action.payload);\r\n    yield put(\r\n      postActions.createPostSuccessAction({\r\n        message: data.message,\r\n        payload: data.post,\r\n      })\r\n    );\r\n    yield put(coreActions.setRedirectAction('/app/posts/' + data.post._id));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* updatePost(action: Action) {\r\n  try {\r\n    const { data } = yield api.put('/posts', action.payload);\r\n    yield put(postActions.updatePostSuccessAction(data));\r\n    yield put(coreActions.setRedirectAction('/app/posts/' + action.payload._id));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* deletePostEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.delete('/posts?postId=' + action.payload);\r\n    yield put(postActions.deletePostSuccessAction(data));\r\n    yield put(coreActions.setRedirectAction('/app/posts'));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* upvotePostEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/posts/vote?parentId=' + action.payload);\r\n    yield put(postActions.upvotePostSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* downvotePostEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.delete('/posts/vote?parentId=' + action.payload);\r\n    yield put(postActions.downvotePostSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* searchCommentsEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get('/posts/comments?postId=' + action.payload);\r\n    yield put(postActions.searchCommentsSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* createCommentEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/posts/comments', action.payload);\r\n    data.comment.votes = 0;\r\n    yield put(\r\n      postActions.createCommentSuccessAction({\r\n        message: data.message,\r\n        payload: data.comment,\r\n      })\r\n    );\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* deleteCommentEffect(action: Action) {\r\n  try {\r\n    yield api.delete(\r\n      '/post/comments?commentId=' + action.payload\r\n    );\r\n    // yield put(postActions.deleteCommentSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* upvoteCommentEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/posts/vote?parentId=' + action.payload);\r\n    yield put(\r\n      postActions.upvoteCommentSuccessAction({\r\n        ...data,\r\n        payload: action.payload,\r\n      })\r\n    );\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* downvoteCommentEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.delete('/posts/vote?parentId=' + action.payload);\r\n    yield put(\r\n      postActions.downvoteCommentSuccessAction({\r\n        ...data,\r\n        payload: action.payload,\r\n      })\r\n    );\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nconst postEffects = [\r\n  {\r\n    action: postActions.SEARCH_POSTS,\r\n    effect: searchPostsEffect\r\n  },\r\n  {\r\n    action: postActions.SEARCH_POST_BY_ID,\r\n    effect: searchPostByIdEffect\r\n  },\r\n  {\r\n    action: postActions.CREATE_POST,\r\n    effect: createPostEffect\r\n  },\r\n  {\r\n    action: postActions.UPDATE_POST,\r\n    effect: updatePost\r\n  },\r\n  {\r\n    action: postActions.DELETE_POST,\r\n    effect: deletePostEffect\r\n  },\r\n  {\r\n    action: postActions.UPVOTE_POST,\r\n    effect: upvotePostEffect\r\n  },\r\n  {\r\n    action: postActions.DOWNVOTE_POST,\r\n    effect: downvotePostEffect\r\n  },\r\n  {\r\n    action: postActions.SEARCH_COMMENTS,\r\n    effect: searchCommentsEffect\r\n  },\r\n  {\r\n    action: postActions.CREATE_COMMENT,\r\n    effect: createCommentEffect\r\n  },\r\n  {\r\n    action: postActions.UPVOTE_COMMENT,\r\n    effect: upvoteCommentEffect\r\n  },\r\n  {\r\n    action: postActions.DOWNVOTE_COMMENT,\r\n    effect: downvoteCommentEffect\r\n  }\r\n];\r\n\r\nexport default postEffects;\r\n","import { takeEvery } from 'redux-saga/effects';\r\nimport authEffects from './auth.effects';\r\nimport courseEffects from './course.effects';\r\nimport examEffects from './exam.effects';\r\nimport generalEffects from './general.effects';\r\nimport postEffects from './post.effects';\r\n\r\nexport function* watchAuth() {\r\n  for (let i = 0; i < authEffects.length; i++) {\r\n    const el = authEffects[i];\r\n    yield takeEvery(el.action, el.effect);\r\n  }\r\n}\r\n\r\nexport function* watchPosts() {\r\n  for (let i = 0; i < postEffects.length; i++) {\r\n    const el = postEffects[i];\r\n    yield takeEvery(el.action, el.effect);\r\n  }\r\n}\r\n\r\nexport function* watchCourses() {\r\n  for (let i = 0; i < courseEffects.length; i++) {\r\n    const el = courseEffects[i];\r\n    yield takeEvery(el.action, el.effect);\r\n  }\r\n}\r\n\r\nexport function* watchGeneral() {\r\n  for (let i = 0; i < generalEffects.length; i++) {\r\n    const el = generalEffects[i];\r\n    yield takeEvery(el.action, el.effect);\r\n  }\r\n}\r\n\r\nexport function* watchExams() {\r\n  for (let i = 0; i < examEffects.length; i++) {\r\n    const el = examEffects[i];\r\n    yield takeEvery(el.action, el.effect);\r\n  }\r\n}\r\n\r\nexport const watchers = [watchAuth, watchPosts, watchCourses, watchGeneral, watchExams];\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducer from './store/reducers';\nimport { watchers } from './store/effects';\nimport { IntlProvider } from 'rsuite';\nimport esES from 'rsuite/lib/IntlProvider/locales/es_ES';\n\nconst composeEnhancers =\n  process.env.NODE_ENV === 'development'\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null || compose;\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\n\nwatchers.forEach((watcher) => {\n  sagaMiddleware.run(watcher);\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <IntlProvider locale={esES}>\n          <App />\n        </IntlProvider>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}