{"version":3,"sources":["core/components/controls/Input.tsx","store/actions/auth.actions.ts","hoc/MainLayout/Navbar/Navbar.tsx","hoc/MainLayout/SideNav/SideNav.tsx","store/actions/post.actions.ts","posts/PostList/PostListFooter/PostListFooter.tsx","posts/PostList/PostListHeader/PostListHeader.tsx","posts/PostList/PostSummary/PostSummary.tsx","posts/PostList/PostList.tsx","core/components/controls/DynamicTag.tsx","core/environment.ts","posts/CreatePostPage/PostEditor/PostEditor.tsx","posts/CreatePostPage/CreatePostPage.tsx","posts/ViewPostPage/AddComment/AddComment.tsx","posts/ViewPostPage/PostCommentsList/PostComment/PostComment.tsx","posts/ViewPostPage/PostCommentsList/PostCommentList.tsx","posts/ViewPostPage/ViewPostHeader/ViewPostHeader.tsx","posts/ViewPostPage/ViewPostPage.tsx","hoc/MainLayout/MainLayout.tsx","auth/LoginForm/LoginForm.tsx","auth/registerForm/RegisterForm.tsx","auth/PasswordRecoveryForm/PasswordRecoveryForm.tsx","hoc/AuthLayout/AuthLayout.tsx","App.tsx","serviceWorker.ts","store/reducers/auth.reducer.ts","store/reducers/posts.reducer.ts","store/reducers/index.ts","core/axios.ts","store/effects/auth.effects.ts","store/effects/post.effects.ts","store/effects/index.ts","index.tsx"],"names":["ControlTypesEnum","CHECK_AUTHENTICATED","checkAuthenticatedAction","type","CHECK_AUTHENTICATED_SUCESS","checkAuthenticatedSuccessAction","user","payload","CHECK_AUTHENTICATED_FAIL","checkAuthenticatedFailAction","LOGIN_USER","loginUserAction","LOGIN_USER_SUCCESS","loginUserSuccessAction","LOGIN_USER_FAIL","loginUserFailAction","error","REGISTER_USER","registerUserAction","REGISTER_USER_SUCCESS","registerUserSuccessAction","LOGOUT_USER","logoutUserAction","LOGOUT_USER_SUCCESS","logoutUserSuccessAction","SEND_RECOVERY_CODE","sendRecoveryCodeAction","identification","SEND_RECOVERY_CODE_SUCCESS","sendRecoveryCodeSuccessAction","SUBMIT_RECOVERY_CODE","submitRecoveryCodeAction","SUBMIT_RECOVERY_CODE_SUCCESS","submitRecoveryCodeSuccessAction","RESET_PASSWORD","resetPasswordAction","RESET_PASSWORD_SUCCESS","resetPasswordSuccessAction","AUTH_ACTION_FAIL","authActionFail","props","dispatch","useDispatch","currentUser","useSelector","state","auth","Navbar","Header","className","Body","Nav","onSelect","Item","eventKey","icon","Icon","Dropdown","title","pullRight","justified","name","onClick","style","display","alignItems","Avatar","src","profileImg","useState","expanded","setExpanded","width","height","Sidenav","activeKey","handleSelect","placement","Menu","IconButton","size","SEARCH_POSTS","searchPostsAction","page","filter","SEARCH_POSTS_SUCCESS","searchPostsSuccessAction","SEARCH_POST_BY_ID","searchPostByIdAction","SEARCH_POST_BY_ID_SUCCESS","searchPostByIdSuccessAction","CREATE_POST","createPostAction","CREATE_POST_SUCESS","createPostSuccessAction","UPDATE_POST","updatePostAction","UPDATE_POST_SUCCESS","updatePostSuccessAction","DELETE_POST","deletePostAction","DELETE_POST_SUCCESS","deletePostSuccessAction","UPVOTE_POST","upvotePostAction","UPVOTE_POST_SUCCESS","upvotePostSuccessAction","DOWNVOTE_POST","downvotePostAction","DOWNVOTE_POST_SUCCESS","downvotePostSuccessAction","SEARCH_COMMENTS","searchCommentsAction","SEARCH_COMMENTS_SUCCESS","searchCommentsSuccessAction","CREATE_COMMENT","createCommentAction","CREATE_COMMENT_SUCCESS","createCommentSuccessAction","UPVOTE_COMMENT","upvoteCommentAction","UPVOTE_COMMENT_SUCCESS","upvoteCommentSuccessAction","DOWNVOTE_COMMENT","downvoteCommentAction","DOWNVOTE_COMMENT_SUCCESS","downvoteCommentSuccessAction","POST_ACTION_FAIL","postFailedAction","paging","posts","history","useHistory","location","useLocation","Footer","Container","Pagination","activePage","first","next","hasNextPage","prev","hasPrevPage","last","totalPages","pages","URLSearchParams","search","get","push","onSelectFilter","pathname","FlexboxGrid","align","colspan","order","Button","appearance","marginTop","ButtonToolbar","ButtonGroup","post","paddingLeft","flexDirection","votes","comments","viewed","padding","to","_id","content","TagGroup","tags","map","tag","index","Tag","key","color","justifyContent","owner","Badge","rating","moment","createdDate","fromNow","loading","useEffect","params","postActions","parseInt","PostListHeader","Divider","Content","Loader","List","hover","item","PostSummary","PostListFooter","typing","inputValue","input","handleButtonClick","bind","handleInputChange","handleInputConfirm","this","setState","focus","nextTags","onChangeTags","Input","inputRef","ref","value","onChange","onBlur","onPressEnter","margin","closable","onClose","handleTagRemove","renderInput","React","Component","component","TEXTAREA","FormControl","disabled","readOnly","rows","componentClass","SELECT","data","PASSWORD","passwordVisible","setPasswordVisible","FormGroup","InputGroup","inside","Addon","cursor","DATE","accepter","DatePicker","TEXT","ControlLabel","label","apiKey","environment","initialValue","init","menubar","plugins","toolbar","onEditorChange","Schema","Types","StringType","ArrayType","model","Model","isRequiredOrEmpty","minLength","of","formValue","setFormValue","form","useRef","onPostSubmit","useCallback","current","check","Form","fluid","PostEditor","postId","isRequired","currentPost","sendComment","Date","undefined","comment","upvote","downvote","fontSize","voted","paddingTop","dangerouslySetInnerHTML","__html","currentPostComments","com","PostComment","maxHeight","id","useParams","ViewPostHeader","PostCommentList","AddComment","console","log","Sidebar","minHeight","overflow","path","match","exact","PostList","CreatePostPage","ViewPostPage","from","NumberType","password","submitLogin","Message","showIcon","description","message","DateType","email","isEmail","maxLength","lastname","birthdate","verifyPassword","addRule","submitRegister","Grid","Row","Col","sm","md","resetPassModel","currentResetEmail","stage","setStage","sendCodeFormValue","setSendCodeFormValue","code","submitCodeFormValue","setSubmitCodeFormValue","resetPassFormValue","setResetPassFormValue","sendCode","submitCode","resetPassword","HelpBlock","includes","justify","Panel","header","render","bordered","LoginForm","RegisterForm","PasswordRecoveryForm","App","checked","authenticatedChecked","locale","mainclasses","join","AuthLayout","MainLayout","Boolean","window","hostname","initialState","combineReducers","action","authActions","docs","findIndex","c","updatedComments","i","updated","api","axios","create","baseURL","defaults","withCredentials","checkAuthenticatedEffect","loginUserEffect","registerUserEffect","logoutUserEffect","sendRecoveryCodeEffect","submitRecoveryCodeEffect","resetPasswordEffect","put","stack","status","response","searchPostsEffect","searchPostByIdEffect","createPostEffect","updatePost","deletePostEffect","upvotePostEffect","downvotePostEffect","searchCommentsEffect","createCommentEffect","upvoteCommentEffect","downvoteCommentEffect","delete","watchAuth","watchPosts","takeEvery","composeEnhancers","compose","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","applyMiddleware","run","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.011953c2.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  FormGroup,\r\n  ControlLabel,\r\n  FormControl,\r\n  InputGroup,\r\n  Icon,\r\n  DatePicker,\r\n} from 'rsuite';\r\n\r\ninterface InputProps {\r\n  type?: 'text' | 'checkbox' | 'textarea' | 'select' | 'password' | 'date';\r\n  label?: string;\r\n  name: string;\r\n  disabled?: boolean;\r\n  readonly?: boolean;\r\n\r\n  rows?: number;\r\n  data?: any[];\r\n}\r\n\r\nexport enum ControlTypesEnum {\r\n  TEXT = 'text',\r\n  CHECKBOX = 'checkbox',\r\n  TEXTAREA = 'textarea',\r\n  SELECT = 'select',\r\n  PASSWORD = 'password',\r\n  DATE = 'date',\r\n}\r\n\r\nexport default (props: InputProps) => {\r\n  let component = null;\r\n  switch (props.type) {\r\n    case ControlTypesEnum.TEXTAREA:\r\n      component = (\r\n        <FormControl\r\n          name={props.name}\r\n          disabled={props.disabled}\r\n          readOnly={props.disabled}\r\n          rows={props.rows ? props.rows : 5}\r\n          componentClass='textarea'\r\n        />\r\n      );\r\n      break;\r\n    case ControlTypesEnum.SELECT:\r\n      component = (\r\n        <FormControl\r\n          name={props.name}\r\n          data={props.data}\r\n          disabled={props.disabled}\r\n          readOnly={props.disabled}\r\n        />\r\n      );\r\n      break;\r\n    case ControlTypesEnum.PASSWORD:\r\n      const [passwordVisible, setPasswordVisible] = useState(false);\r\n      component = (\r\n        <FormGroup>\r\n          <InputGroup style={{ width: '100%' }} inside>\r\n            <FormControl\r\n              name={props.name}\r\n              data={props.data}\r\n              disabled={props.disabled}\r\n              readOnly={props.disabled}\r\n              type={passwordVisible ? 'text' : 'password'}\r\n            />\r\n            <InputGroup.Addon\r\n              style={{ cursor: 'pointer' }}\r\n              onClick={() => setPasswordVisible(!passwordVisible)}\r\n            >\r\n              <Icon icon={passwordVisible ? 'eye-slash' : 'eye'} />\r\n            </InputGroup.Addon>\r\n          </InputGroup>\r\n        </FormGroup>\r\n      );\r\n      break;\r\n    case ControlTypesEnum.DATE:\r\n      component = (\r\n        <FormControl\r\n          style={{ width: '100%' }}\r\n          accepter={DatePicker}\r\n          name={props.name}\r\n          disabled={props.disabled}\r\n          readOnly={props.disabled}\r\n        />\r\n      );\r\n      break;\r\n    case ControlTypesEnum.TEXT:\r\n    default:\r\n      component = (\r\n        <FormControl\r\n          name={props.name}\r\n          disabled={props.disabled}\r\n          readOnly={props.disabled}\r\n        />\r\n      );\r\n      break;\r\n  }\r\n  return (\r\n    <FormGroup>\r\n      <ControlLabel>{props.label}</ControlLabel>\r\n      {component}\r\n    </FormGroup>\r\n  );\r\n};\r\n","import { User } from '../../core/models/User.model';\r\nimport { Action } from './action.model';\r\nimport { ApiError } from '../../core/models/ApiError.model';\r\n\r\nexport const CHECK_AUTHENTICATED = 'CHECK_AUTHENTICATED';\r\nexport const checkAuthenticatedAction = (): Action => ({\r\n  type: CHECK_AUTHENTICATED,\r\n});\r\nexport const CHECK_AUTHENTICATED_SUCESS = 'CHECK_AUTHENTICATED_SUCCESS';\r\nexport const checkAuthenticatedSuccessAction = (user: User): Action => ({\r\n  type: CHECK_AUTHENTICATED_SUCESS,\r\n  payload: user,\r\n});\r\nexport const CHECK_AUTHENTICATED_FAIL = 'CHECK_AUTHENTICATED_FAIL';\r\nexport const checkAuthenticatedFailAction = (): Action => ({\r\n  type: CHECK_AUTHENTICATED_FAIL,\r\n});\r\n\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const loginUserAction = (payload: {\r\n  identification: string;\r\n  password: string;\r\n}): Action => ({ type: LOGIN_USER, payload });\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const loginUserSuccessAction = (user: User): Action => ({\r\n  type: LOGIN_USER_SUCCESS,\r\n  payload: user,\r\n});\r\nexport const LOGIN_USER_FAIL = 'LOGIN_USER_FAIL';\r\nexport const loginUserFailAction = (error: ApiError) => ({\r\n  type: LOGIN_USER_FAIL,\r\n  payload: error,\r\n});\r\n\r\nexport const REGISTER_USER = 'REGISTER_USER';\r\nexport const registerUserAction = (payload: User): Action => ({\r\n  type: REGISTER_USER,\r\n  payload,\r\n});\r\n\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\r\nexport const registerUserSuccessAction = (payload: User): Action => ({\r\n  type: REGISTER_USER_SUCCESS,\r\n  payload,\r\n});\r\n\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\nexport const logoutUserAction = (): Action => ({\r\n  type: LOGOUT_USER,\r\n});\r\n\r\nexport const LOGOUT_USER_SUCCESS = 'LOGOUT_USER_SUCCESS';\r\nexport const logoutUserSuccessAction = (): Action => ({\r\n  type: LOGOUT_USER_SUCCESS,\r\n});\r\n\r\nexport const SEND_RECOVERY_CODE = 'SEND_RECOVERY_CODE';\r\nexport const sendRecoveryCodeAction = (identification: string): Action => ({\r\n  type: SEND_RECOVERY_CODE,\r\n  payload: identification,\r\n});\r\n\r\nexport const SEND_RECOVERY_CODE_SUCCESS = 'SEND_RECOVERY_CODE_SUCCESS';\r\nexport const sendRecoveryCodeSuccessAction = (payload: {\r\n  email: string;\r\n  message: string;\r\n}) => ({\r\n  type: SEND_RECOVERY_CODE_SUCCESS,\r\n  payload,\r\n});\r\n\r\nexport const SUBMIT_RECOVERY_CODE = 'SUBMIT_RECOVERY_CODE';\r\nexport const submitRecoveryCodeAction = (payload: {\r\n  email: string;\r\n  code: string;\r\n}) => ({\r\n  type: SUBMIT_RECOVERY_CODE,\r\n  payload,\r\n});\r\n\r\nexport const SUBMIT_RECOVERY_CODE_SUCCESS = 'SUBMIT_RECOVERY_CODE_SUCCESS';\r\nexport const submitRecoveryCodeSuccessAction = (payload: any) => ({\r\n  type: SUBMIT_RECOVERY_CODE_SUCCESS,\r\n  payload,\r\n});\r\n\r\nexport const RESET_PASSWORD = 'RESET_PASSWORD';\r\nexport const resetPasswordAction = (payload: any): Action => ({\r\n  type: RESET_PASSWORD,\r\n  payload,\r\n});\r\n\r\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\r\nexport const resetPasswordSuccessAction = (payload: {\r\n  message: string;\r\n}): Action => ({\r\n  type: RESET_PASSWORD_SUCCESS,\r\n  payload,\r\n});\r\n\r\nexport const AUTH_ACTION_FAIL = 'AUTH_ACTION_FAIL';\r\nexport const authActionFail = (error: ApiError): Action => ({\r\n  type: AUTH_ACTION_FAIL,\r\n  payload: error,\r\n});\r\n","import React from 'react';\r\nimport { Navbar, Nav, Icon, Dropdown, NavbarProps, Avatar } from 'rsuite';\r\n\r\nimport './Navbar.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState } from '../../../store/reducers';\r\nimport { User } from '../../../core/models/User.model';\r\nimport { logoutUserAction } from '../../../store/actions/auth.actions';\r\n\r\nexport default (props: NavbarProps) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const logoutUser = () => {\r\n    dispatch(logoutUserAction());\r\n  };\r\n\r\n  const currentUser: User | null = useSelector(\r\n    (state: AppState) => state.auth.currentUser\r\n  );\r\n  return (\r\n    <Navbar {...props} >\r\n      <Navbar.Header>\r\n        <h6 className='navbar-brand logo'>URUOnline</h6>\r\n      </Navbar.Header>\r\n      <Navbar.Body>\r\n        <Nav onSelect={props.onSelect}>\r\n          <Nav.Item eventKey='1' icon={<Icon icon='home' />}>\r\n            Home\r\n          </Nav.Item>\r\n          <Nav.Item eventKey='2'>News</Nav.Item>\r\n          <Nav.Item eventKey='3'>Products</Nav.Item>\r\n          <Dropdown title='About'>\r\n            <Dropdown.Item eventKey='4'>Company</Dropdown.Item>\r\n            <Dropdown.Item eventKey='5'>Team</Dropdown.Item>\r\n            <Dropdown.Item eventKey='6'>Contact</Dropdown.Item>\r\n          </Dropdown>\r\n        </Nav>\r\n        <Nav pullRight justified>\r\n          <Dropdown title={currentUser?.name}>\r\n            <Dropdown.Item eventKey='4' onClick={logoutUser}>\r\n              Cerrar Sesión\r\n            </Dropdown.Item>\r\n            <Dropdown.Item eventKey='5'>Team</Dropdown.Item>\r\n            <Dropdown.Item eventKey='6'>Contact</Dropdown.Item>\r\n          </Dropdown>\r\n          <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <Avatar src={currentUser?.profileImg} />\r\n          </div>\r\n        </Nav>\r\n      </Navbar.Body>\r\n    </Navbar>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Sidenav, Nav, Dropdown, Icon, IconButton } from 'rsuite';\r\n\r\nimport './SideNav.css';\r\n\r\ninterface SideNavProps {\r\n  activeKey: string;\r\n  handleSelect: (key: string) => void;\r\n}\r\n\r\nexport default (props: SideNavProps) => {\r\n  const [expanded, setExpanded] = useState(true);\r\n  return (\r\n    <div style={{ width: '250px', height: '92%' }}>\r\n      <Sidenav\r\n        expanded={expanded}\r\n        activeKey={props.activeKey}\r\n        onSelect={props.handleSelect}\r\n        className='sidenav'\r\n      >\r\n        <Sidenav.Body>\r\n          <Nav>\r\n            <Nav.Item eventKey='1' icon={<Icon icon='dashboard' />}>\r\n              Dashboard\r\n            </Nav.Item>\r\n            <Nav.Item eventKey='2' icon={<Icon icon='group' />}>\r\n              User Group\r\n            </Nav.Item>\r\n            <Dropdown\r\n              placement='rightStart'\r\n              eventKey='3'\r\n              title='Advanced'\r\n              icon={<Icon icon='magic' />}\r\n            >\r\n              <Dropdown.Item eventKey='3-1'>Geo</Dropdown.Item>\r\n              <Dropdown.Item eventKey='3-2'>Devices</Dropdown.Item>\r\n              <Dropdown.Item eventKey='3-3'>Loyalty</Dropdown.Item>\r\n              <Dropdown.Item eventKey='3-4'>Visit Depth</Dropdown.Item>\r\n            </Dropdown>\r\n            <Dropdown\r\n              placement='rightStart'\r\n              eventKey='4'\r\n              title='Settings'\r\n              icon={<Icon icon='gear-circle' />}\r\n            >\r\n              <Dropdown.Item eventKey='4-1'>Applications</Dropdown.Item>\r\n              <Dropdown.Item eventKey='4-2'>Channels</Dropdown.Item>\r\n              <Dropdown.Item eventKey='4-3'>Versions</Dropdown.Item>\r\n              <Dropdown.Menu eventKey='4-5' title='Custom Action'>\r\n                <Dropdown.Item eventKey='4-5-1'>Action Name</Dropdown.Item>\r\n                <Dropdown.Item eventKey='4-5-2'>Action Params</Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Nav>\r\n        </Sidenav.Body>\r\n        <IconButton\r\n          className='collapse-btn'\r\n          onClick={() => setExpanded(!expanded)}\r\n          icon={\r\n            <Icon\r\n              icon={expanded ? 'angle-double-left' : 'angle-double-right'}\r\n            />\r\n          }\r\n          size='lg'\r\n        ></IconButton>\r\n      </Sidenav>\r\n    </div>\r\n  );\r\n};\r\n","import { Aggregator } from \"../../core/models/Aggregator.model\";\r\nimport { ApiError } from \"../../core/models/ApiError.model\";\r\nimport { ApiResponse } from \"../../core/models/ApiResponse.model\";\r\nimport { Comment } from \"../../core/models/Comment.model\";\r\nimport { Post } from \"../../core/models/Post.model\";\r\nimport { Action } from \"./action.model\";\r\n\r\nexport const SEARCH_POSTS = 'SEARCH_POSTS';\r\nexport const searchPostsAction = (payload: { page: number, filter: string } = { page: 1, filter: 'rated' }) => ({\r\n  type: SEARCH_POSTS,\r\n  payload,\r\n});\r\n\r\nexport const SEARCH_POSTS_SUCCESS = 'SEARCH_POSTS_SUCCESS';\r\nexport const searchPostsSuccessAction = (payload: Aggregator<Post>) => ({\r\n    type: SEARCH_POSTS_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const SEARCH_POST_BY_ID = 'SEARCH_POST_BY_ID';\r\nexport const searchPostByIdAction = (payload: string) => ({\r\n    type: SEARCH_POST_BY_ID,\r\n    payload\r\n});\r\n\r\nexport const SEARCH_POST_BY_ID_SUCCESS = 'SEARCH_POST_BY_ID_SUCCESS';\r\nexport const searchPostByIdSuccessAction = (payload: Post) => ({\r\n    type: SEARCH_POST_BY_ID_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const CREATE_POST = 'CREATE_POST';\r\nexport const createPostAction = (payload: Post) => ({\r\n    type: CREATE_POST,\r\n    payload\r\n});\r\n\r\nexport const CREATE_POST_SUCESS = 'CREATE_POST_SUCCESS';\r\nexport const createPostSuccessAction = (payload: ApiResponse) => ({\r\n    type: CREATE_POST_SUCESS,\r\n    payload\r\n});\r\n\r\nexport const UPDATE_POST = 'UPDATE_POST';\r\nexport const updatePostAction = (payload: Post) => ({\r\n    type: UPDATE_POST,\r\n    payload\r\n});\r\n\r\n\r\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCESS';\r\nexport const updatePostSuccessAction = (payload: ApiResponse) => ({\r\n    type: UPDATE_POST_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const deletePostAction = (payload: string) => ({\r\n    type: DELETE_POST,\r\n    payload\r\n});\r\n\r\nexport const DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\r\nexport const deletePostSuccessAction = (payload: ApiResponse) => ({\r\n    type: DELETE_POST_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const UPVOTE_POST = 'UPVOTE_POST';\r\nexport const upvotePostAction = (payload: string) => ({\r\n    type: UPVOTE_POST,\r\n    payload\r\n});\r\n\r\nexport const UPVOTE_POST_SUCCESS = 'UPVOTE_POST_SUCCESS';\r\nexport const upvotePostSuccessAction = (payload: ApiResponse) => ({\r\n    type: UPVOTE_POST_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const DOWNVOTE_POST = 'DOWNVOTE_POST';\r\nexport const downvotePostAction = (payload: string) => ({\r\n    type: DOWNVOTE_POST,\r\n    payload\r\n})\r\n\r\nexport const DOWNVOTE_POST_SUCCESS = 'DOWNVOTE_POST_SUCCESS';\r\nexport const downvotePostSuccessAction = (payload: ApiResponse) => ({\r\n    type: DOWNVOTE_POST_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const SEARCH_COMMENTS = 'SEARCH_COMMENTS';\r\nexport const searchCommentsAction = (payload: string) => ({\r\n    type: SEARCH_COMMENTS,\r\n    payload\r\n});\r\n\r\nexport const SEARCH_COMMENTS_SUCCESS = 'SEARCH_COMMENTS_SUCCESS';\r\nexport const searchCommentsSuccessAction = (payload: Comment[]) => ({\r\n    type: SEARCH_COMMENTS_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const CREATE_COMMENT = 'CREATE_COMMENT';\r\nexport const createCommentAction = (payload: Comment) => ({\r\n    type: CREATE_COMMENT,\r\n    payload\r\n});\r\n\r\nexport const CREATE_COMMENT_SUCCESS = 'CREATE_COMMENT_SUCCESS';\r\nexport const createCommentSuccessAction = (payload: ApiResponse) => ({\r\n    type: CREATE_COMMENT_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const UPVOTE_COMMENT = 'UPVOTE_COMMENT';\r\nexport const upvoteCommentAction = (payload: string) => ({\r\n    type: UPVOTE_COMMENT,\r\n    payload\r\n});\r\n\r\nexport const UPVOTE_COMMENT_SUCCESS = 'UPVOTE_COMMENT_SUCCESS';\r\nexport const upvoteCommentSuccessAction = (payload: ApiResponse) => ({\r\n    type: UPVOTE_COMMENT_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const DOWNVOTE_COMMENT= 'DOWNVOTE_COMMENT';\r\nexport const downvoteCommentAction = (payload: string) => ({\r\n    type: DOWNVOTE_COMMENT,\r\n    payload\r\n})\r\n\r\nexport const DOWNVOTE_COMMENT_SUCCESS = 'DOWNVOTE_COMMENT_SUCCESS';\r\nexport const downvoteCommentSuccessAction = (payload: ApiResponse) => ({\r\n    type: DOWNVOTE_COMMENT_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const POST_ACTION_FAIL = 'POST_ACTION_FAIL';\r\nexport const postFailedAction = (error: ApiError): Action => ({\r\n    type: POST_ACTION_FAIL,\r\n    payload: error\r\n});","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { Container, Footer, Pagination } from 'rsuite';\r\nimport { AppState } from '../../../store/reducers';\r\n\r\nexport default () => {\r\n  const paging = useSelector((state: AppState) => state.posts.paging);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  return (\r\n    <Footer>\r\n      <Container>\r\n        <Pagination\r\n          activePage={paging?.page}\r\n          first={paging?.page !== 1}\r\n          next={paging?.hasNextPage}\r\n          prev={paging?.hasPrevPage}\r\n          last={paging?.page !== paging?.totalPages}\r\n          size='lg'\r\n          pages={paging?.totalPages}\r\n          onSelect={(page) => {\r\n            let filter = new URLSearchParams(location.search).get('filter');\r\n            history.push(`/app/posts?page=${page}&filter=${filter}`);\r\n          }}\r\n        ></Pagination>\r\n      </Container>\r\n    </Footer>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  ButtonToolbar,\r\n  Container,\r\n  FlexboxGrid,\r\n  Header,\r\n} from 'rsuite';\r\n\r\ninterface PostListHeaderProps {}\r\n\r\nexport default () => {\r\n  const history = useHistory();\r\n\r\n  const onSelectFilter = (filter: string) => {\r\n    history.push({\r\n      pathname: '/app/posts',\r\n      search: '?page=1&filter=' + filter\r\n    })\r\n  };\r\n\r\n  return (\r\n    <Header>\r\n      <Container>\r\n        <FlexboxGrid align='middle'>\r\n          <FlexboxGrid.Item colspan={20} order={1}>\r\n            <h1>Todas las publicaciones</h1>\r\n          </FlexboxGrid.Item>\r\n          <FlexboxGrid.Item colspan={4} order={2}>\r\n            <Button\r\n              appearance='primary'\r\n              onClick={() => history.push('/app/posts/create')}\r\n            >\r\n              Crear Post\r\n            </Button>\r\n          </FlexboxGrid.Item>\r\n          <FlexboxGrid.Item colspan={8} order={4} style={{ marginTop: '10px' }}>\r\n            <ButtonToolbar>\r\n              <ButtonGroup>\r\n                <Button\r\n                  appearance='ghost'\r\n                  onClick={() => onSelectFilter('new')}\r\n                >\r\n                  Nuevos\r\n                </Button>\r\n                <Button\r\n                  appearance='ghost'\r\n                  onClick={() => onSelectFilter('active')}\r\n                >\r\n                  Activos\r\n                </Button>\r\n                <Button\r\n                  appearance='ghost'\r\n                  onClick={() => onSelectFilter('rated')}\r\n                >\r\n                  Mas votados\r\n                </Button>\r\n                <Button\r\n                  appearance='ghost'\r\n                  onClick={() => onSelectFilter('career')}\r\n                >\r\n                  Carrera\r\n                </Button>\r\n              </ButtonGroup>\r\n            </ButtonToolbar>\r\n          </FlexboxGrid.Item>\r\n        </FlexboxGrid>\r\n      </Container>\r\n    </Header>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Avatar, Badge, FlexboxGrid, Tag, TagGroup } from 'rsuite';\r\nimport { Post } from '../../../core/models/Post.model';\r\nimport moment from 'moment';\r\n\r\ninterface PostSummaryProps {\r\n  post: Post;\r\n}\r\n\r\nexport default ({ post }: PostSummaryProps) => {\r\n  return (\r\n    <FlexboxGrid style={{ paddingLeft: '20px' }}>\r\n      <FlexboxGrid.Item\r\n        colspan={2}\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <h5>{post.votes}</h5>\r\n        <p>Votos</p>\r\n        <h5>{post.comments}</h5>\r\n        <p>Comentarios</p>\r\n        <br></br>\r\n        <p>Visto {post.viewed}</p>\r\n      </FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={18} style={{ padding: '10px' }}>\r\n        <Link to={'/app/posts/' + post._id}>\r\n          <h5>{post.title}</h5>\r\n        </Link>\r\n        <br />\r\n        <p>{post.content}</p>\r\n        <br />\r\n        <TagGroup>\r\n          {post.tags.map((tag, index) => (\r\n            <Tag key={index} color='blue'>{tag}</Tag>\r\n          ))}\r\n        </TagGroup>\r\n      </FlexboxGrid.Item>\r\n      <FlexboxGrid.Item\r\n        colspan={4}\r\n        style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center' }}\r\n      >\r\n        <Avatar src={post.owner?.profileImg} />\r\n\r\n        <span>\r\n          {post.owner?.name} - <Badge content={post.owner?.rating} />\r\n        </span>\r\n        <span>{moment(post.createdDate).fromNow()}</span>\r\n      </FlexboxGrid.Item>\r\n    </FlexboxGrid>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Container, Content, Divider, List, Loader } from 'rsuite';\r\nimport { postActions } from '../../store/actions';\r\nimport { AppState } from '../../store/reducers';\r\nimport PostListFooter from './PostListFooter/PostListFooter';\r\nimport PostListHeader from './PostListHeader/PostListHeader';\r\nimport PostSummary from './PostSummary/PostSummary';\r\n\r\ninterface PostListProps {}\r\n\r\nexport default (props: RouteComponentProps<PostListProps>) => {\r\n  const posts = useSelector((state: AppState) => state.posts.posts);\r\n  const loading = useSelector((state: AppState) => state.posts.loading);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(props.location.search);\r\n    let page = params.get('page');\r\n    let filter = params.get('filter');\r\n    if (!page) {\r\n      props.history.push({\r\n        pathname: props.location.pathname,\r\n        search: '?page=1&filter=new',\r\n      });\r\n    } else {\r\n      dispatch(\r\n        postActions.searchPostsAction({\r\n          page: parseInt(page),\r\n          filter: filter as string,\r\n        })\r\n      );\r\n    }\r\n  }, [dispatch, props.location.search, props.location.pathname, props.history]);\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <PostListHeader />\r\n        <Divider />\r\n        <Content>\r\n          {loading ? (\r\n            <Loader size='lg' content='Cargando...' />\r\n          ) : (\r\n            <List hover>\r\n              {posts.map((item, index) => (\r\n                <List.Item key={item['_id']} index={index}>\r\n                  <PostSummary post={item} />\r\n                </List.Item>\r\n              ))}\r\n            </List>\r\n          )}\r\n        </Content>\r\n        <Divider></Divider>\r\n        <PostListFooter></PostListFooter>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Icon, IconButton, Input, Tag, TagGroup } from 'rsuite';\r\n\r\ninterface DynamicTagProps {\r\n    onChangeTags: (tags: string[]) => void;\r\n}\r\n\r\nexport default class extends React.Component<DynamicTagProps> {\r\n  state = {\r\n    typing: false,\r\n    inputValue: '',\r\n    tags: [],\r\n  };\r\n  input: any = null;\r\n  constructor(props: DynamicTagProps) {\r\n    super(props);\r\n    this.handleButtonClick = this.handleButtonClick.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleInputConfirm = this.handleInputConfirm.bind(this);\r\n  }\r\n  handleButtonClick() {\r\n    this.setState(\r\n      {\r\n        typing: true,\r\n      },\r\n      () => {\r\n        this.input.focus();\r\n      }\r\n    );\r\n  }\r\n  handleInputChange(inputValue: string) {\r\n    this.setState({ inputValue });\r\n  }\r\n  handleInputConfirm() {\r\n    const { inputValue, tags } = this.state;\r\n    const nextTags = inputValue ? [...tags, inputValue] : tags;\r\n    this.setState({\r\n      tags: nextTags,\r\n      typing: false,\r\n      inputValue: '',\r\n    });\r\n    this.props.onChangeTags(nextTags);\r\n  }\r\n  handleTagRemove(tag: string) {\r\n    const { tags } = this.state;\r\n    const nextTags = tags.filter((item) => item !== tag);\r\n    this.setState({\r\n      tags: nextTags,\r\n    });\r\n    this.props.onChangeTags(nextTags);\r\n  }\r\n  renderInput() {\r\n    const { typing, inputValue } = this.state;\r\n\r\n    if (typing) {\r\n      return (\r\n        <Input\r\n          className='tag-input'\r\n          inputRef={(ref) => {\r\n            this.input = ref;\r\n          }}\r\n          size='xs'\r\n          style={{ width: 70 }}\r\n          value={inputValue}\r\n          onChange={this.handleInputChange}\r\n          onBlur={this.handleInputConfirm}\r\n          onPressEnter={this.handleInputConfirm}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <IconButton\r\n        className='tag-add-btn'\r\n        onClick={this.handleButtonClick}\r\n        icon={<Icon icon='plus' />}\r\n        appearance='ghost'\r\n        size='xs'\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    const { tags } = this.state;\r\n    return (\r\n      <TagGroup style={{ margin: '0 0' }}>\r\n        {tags.map((item, index) => (\r\n          <Tag\r\n            key={index}\r\n            closable\r\n            onClose={() => {\r\n              this.handleTagRemove(item);\r\n            }}\r\n          >\r\n            {item}\r\n          </Tag>\r\n        ))}\r\n        {this.renderInput()}\r\n      </TagGroup>\r\n    );\r\n  }\r\n}\r\n","export default {\r\n    tinyApiKey: 'r7lhlluswsk3hs9y4mrbwhg6taz9n6hrbk5ol14fuj9uzwaz'\r\n};","import React from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport environment from '../../../core/environment';\r\n\r\ninterface PostEditorProps {\r\n  onEditorChange: (content: string) => void;\r\n}\r\n\r\nexport default (props: PostEditorProps) => {\r\n  return (\r\n    <Editor\r\n      apiKey={environment.tinyApiKey}\r\n      initialValue='<p>This is the initial content of the editor</p>'\r\n      init={{\r\n        height: 300,\r\n        menubar: false,\r\n        plugins: [\r\n          'advlist autolink lists link charmap print preview anchor',\r\n          'searchreplace visualblocks code fullscreen',\r\n          'insertdatetime media table paste code codesample help wordcount',\r\n        ],\r\n        toolbar:\r\n          `undo redo | formatselect | bold italic backcolor codesample | \\\r\n              alignleft aligncenter alignright alignjustify | \\\r\n              bullist numlist outdent indent | removeformat | preview help`,\r\n      }}\r\n      onEditorChange={props.onEditorChange}\r\n    />\r\n  );\r\n};\r\n","import React, { useCallback, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Container, ControlLabel, Form, Schema } from 'rsuite';\r\nimport DynamicTag from '../../core/components/controls/DynamicTag';\r\nimport Input from '../../core/components/controls/Input';\r\nimport { postActions } from '../../store/actions';\r\nimport { AppState } from '../../store/reducers';\r\nimport PostEditor from './PostEditor/PostEditor';\r\n\r\nconst { StringType, ArrayType } = Schema.Types;\r\nconst model = Schema.Model({\r\n  title: StringType('Por favor ingrese un titulo valido.').isRequiredOrEmpty(\r\n    'Este campo es obligatorio.'\r\n  ),\r\n  content: StringType('Por favor ingrese una un contenido valido.')\r\n    .isRequiredOrEmpty('Este campo es obligatorio.')\r\n    .minLength(6),\r\n  tags: ArrayType().of(StringType()).minLength(3),\r\n});\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((state: AppState) => state.posts.loading);\r\n  const [formValue, setFormValue] = useState({\r\n    title: '',\r\n    content: '',\r\n    tags: [''],\r\n  });\r\n  let form = useRef<any>(null);\r\n  const onPostSubmit = useCallback(() => {\r\n    if (form.current.check()) {\r\n      dispatch(postActions.createPostAction(formValue));\r\n    }\r\n  }, [dispatch, formValue]);\r\n  return (\r\n    <Container>\r\n      <Form\r\n        ref={form}\r\n        fluid\r\n        onChange={(formValue) => setFormValue(formValue as any)}\r\n        formValue={formValue}\r\n        model={model}\r\n      >\r\n        <Input label='Titulo' name='title' />\r\n\r\n        <PostEditor\r\n          onEditorChange={(content: string) =>\r\n            setFormValue({ ...formValue, content })\r\n          }\r\n        />\r\n        <br></br>\r\n        <ControlLabel style={{ marginTop: '20px' }}>\r\n          Etiquetas (Minimo 3*)\r\n        </ControlLabel>\r\n        <br></br>\r\n        <DynamicTag onChangeTags={(tags) => setFormValue({ ...formValue, tags })} />\r\n        <br></br>\r\n        <Button\r\n          loading={loading}\r\n          disabled={loading}\r\n          appearance='primary'\r\n          onClick={onPostSubmit}\r\n        >\r\n          Crear Post\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useCallback, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Container, Form, Button, Schema } from 'rsuite';\r\nimport { postActions } from '../../../store/actions';\r\nimport { AppState } from '../../../store/reducers';\r\nimport PostEditor from '../../CreatePostPage/PostEditor/PostEditor';\r\n\r\nconst { StringType } = Schema.Types;\r\nconst model = Schema.Model({\r\n  postId: StringType('Este campo es requerido.').isRequired(),\r\n  content: StringType('Por favor ingrese una un contenido valido.')\r\n    .isRequiredOrEmpty('Este campo es obligatorio.')\r\n    .minLength(6),\r\n});\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const post = useSelector((state: AppState) => state.posts.currentPost);\r\n  const user = useSelector((state: AppState) => state.auth.currentUser);\r\n  const [formValue, setFormValue] = useState({\r\n    postId: post?._id ? post._id : '',\r\n    content: '',\r\n  });\r\n  let form = useRef<any>(null);\r\n\r\n  const sendComment = useCallback(() => {\r\n    if (form.current.check()) {\r\n      dispatch(\r\n        postActions.createCommentAction({\r\n          ...formValue,\r\n          votes: 0,\r\n          createdDate: new Date(),\r\n          owner: user ?? undefined,\r\n        })\r\n      );\r\n    }\r\n  }, [formValue, dispatch, user]);\r\n\r\n  return (\r\n    <Container>\r\n      <h3>Agregar Comentario</h3>\r\n      <Form\r\n        ref={form}\r\n        fluid\r\n        onChange={(formValue) => setFormValue(formValue as any)}\r\n        formValue={formValue}\r\n        model={model}\r\n      >\r\n        <PostEditor\r\n          onEditorChange={(content: string) =>\r\n            setFormValue({ ...formValue, content })\r\n          }\r\n        />\r\n        <br></br>\r\n        <Button appearance='primary' onClick={sendComment}>\r\n          Enviar comentario\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n","import moment from 'moment';\r\nimport React, { useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Avatar, Badge, Container, Divider, FlexboxGrid, Icon } from 'rsuite';\r\nimport { Comment } from '../../../../core/models/Comment.model';\r\nimport { postActions } from '../../../../store/actions';\r\n\r\ninterface PostCommentProps {\r\n  comment: Comment;\r\n}\r\n\r\nexport default ({ comment }: PostCommentProps) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const upvote = useCallback(() => {\r\n    dispatch(postActions.upvoteCommentAction(comment._id as string));\r\n  }, [comment, dispatch]);\r\n\r\n  const downvote = useCallback(() => {\r\n    dispatch(postActions.downvoteCommentAction(comment._id as string));\r\n  }, [comment, dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      <FlexboxGrid>\r\n        <FlexboxGrid.Item\r\n          colspan={2}\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Icon\r\n            icon='caret-up'\r\n            style={{\r\n              fontSize: '40px',\r\n              cursor: 'pointer',\r\n              color: comment?.voted ? 'cyan' : '',\r\n            }}\r\n            onClick={upvote}\r\n          ></Icon>\r\n          <h2>{comment?.votes}</h2>\r\n          <Icon\r\n            icon='caret-down'\r\n            style={{ fontSize: '40px', cursor: 'pointer' }}\r\n            onClick={downvote}\r\n          ></Icon>\r\n        </FlexboxGrid.Item>\r\n        <FlexboxGrid.Item colspan={18}>\r\n          <div\r\n            style={{ paddingTop: '20px' }}\r\n            dangerouslySetInnerHTML={{\r\n              __html: comment?.content ? comment?.content : '',\r\n            }}\r\n          ></div>\r\n        </FlexboxGrid.Item>\r\n        <FlexboxGrid.Item\r\n          colspan={4}\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          <Avatar src={comment.owner?.profileImg} />\r\n\r\n          <span>\r\n            {comment.owner?.name} - <Badge content={comment.owner?.rating} />\r\n          </span>\r\n          <span>{moment(comment.createdDate).fromNow()}</span>\r\n        </FlexboxGrid.Item>\r\n      </FlexboxGrid>\r\n      <Divider></Divider>\r\n    </Container>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Container } from 'rsuite';\r\nimport { AppState } from '../../../store/reducers';\r\nimport PostComment from './PostComment/PostComment';\r\n\r\nexport default () => {\r\n  const comments = useSelector(\r\n    (state: AppState) => state.posts.currentPostComments\r\n  );\r\n  return (\r\n    <Container>\r\n      <h3>Comentarios</h3>\r\n      {comments.map((com) => (\r\n        <PostComment key={com._id} comment={com}></PostComment>\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  ButtonToolbar,\r\n  Container,\r\n  FlexboxGrid,\r\n} from 'rsuite';\r\nimport { Post } from '../../../core/models/Post.model';\r\n\r\ninterface ViewPostHeaderProps {\r\n  post: Post | null;\r\n}\r\n\r\nexport default ({ post }: ViewPostHeaderProps) => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  return (\r\n    <Container style={{ maxHeight: '100px' }}>\r\n      <FlexboxGrid align='middle'>\r\n        <FlexboxGrid.Item colspan={20} order={1}>\r\n          <h1>{post?.title}</h1>\r\n        </FlexboxGrid.Item>\r\n        <FlexboxGrid.Item colspan={20}>\r\n          <ButtonToolbar>\r\n            <ButtonGroup>\r\n              <Button\r\n                appearance='subtle'\r\n                onClick={() => history.push(location.pathname + '/edit')}\r\n              >\r\n                Editar\r\n              </Button>\r\n              <Button appearance='subtle' color='red'>\r\n                Borrar\r\n              </Button>\r\n              <Button appearance='subtle'>Compartir</Button>\r\n            </ButtonGroup>\r\n          </ButtonToolbar>\r\n        </FlexboxGrid.Item>\r\n      </FlexboxGrid>\r\n    </Container>\r\n  );\r\n};\r\n","import moment from 'moment';\r\nimport React, { useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  Avatar,\r\n  Badge,\r\n  Container,\r\n  Divider,\r\n  FlexboxGrid,\r\n  Icon,\r\n  Loader,\r\n} from 'rsuite';\r\nimport FlexboxGridItem from 'rsuite/lib/FlexboxGrid/FlexboxGridItem';\r\nimport { postActions } from '../../store/actions';\r\nimport { AppState } from '../../store/reducers';\r\nimport AddComment from './AddComment/AddComment';\r\nimport PostCommentList from './PostCommentsList/PostCommentList';\r\nimport ViewPostHeader from './ViewPostHeader/ViewPostHeader';\r\n\r\nexport default () => {\r\n  const { id } = useParams() as any;\r\n  const dispatch = useDispatch();\r\n  const { loading, currentPost: post } = useSelector(\r\n    (state: AppState) => state.posts\r\n  );\r\n  useEffect(() => {\r\n    dispatch(postActions.searchPostByIdAction(id));\r\n    dispatch(postActions.searchCommentsAction(id));\r\n  }, [id, dispatch]);\r\n\r\n  const upvote = useCallback(() => {\r\n    dispatch(postActions.upvotePostAction(id));\r\n  }, [id, dispatch]);\r\n\r\n  const downvote = useCallback(() => {\r\n    dispatch(postActions.downvotePostAction(id));\r\n  }, [id, dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      {loading ? (\r\n        <Loader content='Cargando Post...'></Loader>\r\n      ) : (\r\n        <>\r\n          <ViewPostHeader post={post}></ViewPostHeader>\r\n          <Divider></Divider>\r\n          <FlexboxGrid>\r\n            <FlexboxGridItem\r\n              colspan={2}\r\n              style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Icon\r\n                icon='caret-up'\r\n                style={{\r\n                  fontSize: '40px',\r\n                  cursor: 'pointer',\r\n                  color: post?.voted ? 'cyan' : '',\r\n                }}\r\n                onClick={upvote}\r\n              ></Icon>\r\n              <h2>{post?.votes}</h2>\r\n              <Icon\r\n                icon='caret-down'\r\n                style={{ fontSize: '40px', cursor: 'pointer' }}\r\n                onClick={downvote}\r\n              ></Icon>\r\n            </FlexboxGridItem>\r\n            <FlexboxGridItem colspan={18}>\r\n              <div\r\n                dangerouslySetInnerHTML={{\r\n                  __html: post?.content ? post?.content : '',\r\n                }}\r\n              ></div>\r\n            </FlexboxGridItem>\r\n            <FlexboxGrid.Item\r\n              colspan={4}\r\n              style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                justifyContent: 'center',\r\n              }}\r\n            >\r\n              <Avatar src={post?.owner?.profileImg} />\r\n\r\n              <span>\r\n                {post?.owner?.name} - <Badge content={post?.owner?.rating} />\r\n              </span>\r\n              <span>{moment(post?.createdDate).fromNow()}</span>\r\n            </FlexboxGrid.Item>\r\n          </FlexboxGrid>\r\n          <Divider></Divider>\r\n          <PostCommentList></PostCommentList>\r\n          <AddComment></AddComment>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport Navbar from './Navbar/Navbar';\r\nimport SideNav from './SideNav/SideNav';\r\n\r\nimport './MainLayout.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState } from '../../store/reducers';\r\nimport { Redirect, Route, RouteComponentProps, Switch, useHistory } from 'react-router-dom';\r\nimport { Container, Sidebar } from 'rsuite';\r\nimport PostList from '../../posts/PostList/PostList';\r\nimport CreatePostPage from '../../posts/CreatePostPage/CreatePostPage';\r\nimport ViewPostPage from '../../posts/ViewPostPage/ViewPostPage';\r\n\r\ninterface MainLayoutProps {}\r\n\r\nexport default (props: RouteComponentProps<MainLayoutProps>) => {\r\n  const history = useHistory();\r\n  const handleSelect = (key: string) => {\r\n    console.log(key)\r\n    switch (key) {\r\n      case '1':\r\n        history.push('/')\r\n        break;\r\n    \r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const currentUser = useSelector((state: AppState) => state.auth.currentUser);\r\n  if (!currentUser) {\r\n    history.push('/auth/login');\r\n    return <></>;\r\n  }\r\n  return (\r\n    <>\r\n      <Navbar onSelect={handleSelect}></Navbar>\r\n      <Container style={{ height: '92%' }}>\r\n        <Sidebar style={{ display: 'flex', flexDirection: 'column', minHeight: '100vh' }}>\r\n          <SideNav activeKey={'1'} handleSelect={handleSelect}></SideNav>\r\n        </Sidebar>\r\n        <Container style={{ padding: '20px', overflow: 'auto' }}>\r\n          <Switch>\r\n            <Route path={props.match.path + '/posts'} exact component={PostList}/>\r\n            <Route path={props.match.path + '/posts/create'} exact component={CreatePostPage}/>\r\n            <Route path={props.match.path + '/posts/:id'} exact component={ViewPostPage}/>\r\n            <Route path={props.match.path + '/posts/:id/edit'} exact component={ViewPostPage}/>\r\n            <Redirect from={props.match.path + '/'} to={props.match.path + '/posts'} />\r\n          </Switch>\r\n        </Container>\r\n        <Container>ADS</Container>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useRef, useCallback } from 'react';\r\nimport { Schema, Form, Button, Message } from 'rsuite';\r\nimport Input from '../../core/components/controls/Input';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState } from '../../store/reducers';\r\nimport { Link } from 'react-router-dom';\r\nimport { loginUserAction } from '../../store/actions/auth.actions';\r\n\r\nconst { StringType, NumberType } = Schema.Types;\r\nconst model = Schema.Model({\r\n  identification: NumberType(\r\n    'Por favor ingrese un numero de cedula valido.'\r\n  ).isRequiredOrEmpty('Este campo es obligatorio.'),\r\n  password: StringType('Por favor ingrese una contraseña valida.')\r\n    .isRequiredOrEmpty('Este campo es obligatorio.')\r\n    .minLength(6),\r\n});\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((state: AppState) => state.auth.loading);\r\n  const [formValue, setFormValue] = useState({\r\n    identification: '',\r\n    password: '',\r\n  });\r\n  const error = useSelector((state: AppState) =>\r\n    state.auth.error ? state.auth.error : null\r\n  );\r\n  let form = useRef<any>(null);\r\n  console.log(error);\r\n  const submitLogin = useCallback(() => {\r\n    if (form.current.check()) {\r\n      dispatch(loginUserAction(formValue));\r\n    }\r\n  }, [dispatch, form, formValue]);\r\n  return (\r\n    <>\r\n      {error ? <Message showIcon type='error' description={error.message} /> : null}\r\n      <Form\r\n        ref={form}\r\n        fluid\r\n        onChange={(formValue) => setFormValue(formValue as any)}\r\n        formValue={formValue}\r\n        model={model}\r\n      >\r\n        <Input name='identification' label='Cedula' />\r\n        <Input name='password' label='Contraseña' type='password' />\r\n        <p>\r\n          <Link to='/auth/register'>Aun no tienes una cuenta ?</Link>\r\n        </p>\r\n        <p>\r\n          <Link to='/auth/passwordRecovery'>Olvidaste tu contraseña ?</Link>\r\n        </p>\r\n        <br></br>\r\n        <Button\r\n          loading={loading}\r\n          appearance='primary'\r\n          disabled={loading}\r\n          onClick={submitLogin}\r\n        >\r\n          Iniciar Sesion\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useRef, useCallback } from 'react';\r\nimport { Schema, Form, Button, Message, Grid, Row, Col } from 'rsuite';\r\nimport Input from '../../core/components/controls/Input';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState } from '../../store/reducers';\r\nimport { Link } from 'react-router-dom';\r\nimport { registerUserAction } from '../../store/actions/auth.actions';\r\n\r\nimport './RegisterForm.css';\r\n\r\nconst { StringType, NumberType, DateType } = Schema.Types;\r\nconst model = Schema.Model({\r\n  identification: NumberType(\r\n    'Por favor ingrese un numero de cedula valido.'\r\n  ).isRequired('Este campo es obligatorio.'),\r\n  email: StringType()\r\n    .isRequired('Este campo es obligatorio.')\r\n    .isEmail('El formato no es correcto.')\r\n    .maxLength(100),\r\n  name: StringType()\r\n    .isRequired('Este campo es obligatorio.')\r\n    .minLength(3)\r\n    .maxLength(100),\r\n  lastname: StringType()\r\n    .isRequired('Este campo es obligatorio.')\r\n    .minLength(3)\r\n    .maxLength(100),\r\n  birthdate: DateType().isRequired('Este campo es obligatorio.'),\r\n  password: StringType('Por favor ingrese una contraseña valida.')\r\n    .isRequired('Este campo es obligatorio.')\r\n    .minLength(6),\r\n  verifyPassword: StringType('Por favor ingrese una contraseña valida.')\r\n    .isRequired('Este campo es obligatorio.')\r\n    .minLength(6)\r\n    .addRule((value, data) => {\r\n      if (value !== data.password) return false;\r\n      return true;\r\n    }, 'Las contraseñas no coinciden.'),\r\n});\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((state: AppState) => state.auth.loading);\r\n  const [formValue, setFormValue] = useState({\r\n    identification: 0,\r\n    email: '',\r\n    name: '',\r\n    lastname: '',\r\n    birthdate: new Date(),\r\n    password: '',\r\n    verifyPassword: '',\r\n  });\r\n  const error = useSelector((state: AppState) =>\r\n    state.auth.error ? state.auth.error : null\r\n  );\r\n  let form = useRef<any>(null);\r\n  const submitRegister = useCallback(() => {\r\n    if (form.current.check()) {\r\n      dispatch(registerUserAction(formValue));\r\n    }\r\n  }, [dispatch, form, formValue]);\r\n  return (\r\n    <>\r\n      {error ? (\r\n        <Message showIcon type='error' description={error.message} />\r\n      ) : null}\r\n      <Form\r\n        ref={form}\r\n        fluid\r\n        onChange={(formValue) => setFormValue(formValue as any)}\r\n        formValue={formValue}\r\n        model={model}\r\n      >\r\n        <Grid fluid>\r\n          <Row className='grid-row'>\r\n            <Col sm={24}>\r\n              <Input name='identification' label='Cedula' />\r\n            </Col>\r\n          </Row>\r\n          <Row className='grid-row'>\r\n            <Col sm={24}>\r\n              <Input name='email' label='Correo Electronico' />\r\n            </Col>\r\n          </Row>\r\n          <Row className='grid-row'>\r\n            <Col sm={24} md={12}>\r\n              <Input name='name' label='Nombre' />\r\n            </Col>\r\n            <Col sm={24} md={12}>\r\n              <Input name='lastname' label='Apellido' />\r\n            </Col>\r\n          </Row>\r\n          <Row className='grid-row'>\r\n            <Col sm={24} md={12}>\r\n              <Input name='birthdate' label='Fecha de Nacimiento' type='date' />\r\n            </Col>\r\n          </Row>\r\n          <Row className='grid-row'>\r\n            <Col sm={24} md={12}>\r\n              <Input name='password' label='Contraseña' type='password' />\r\n            </Col>\r\n            <Col sm={24} md={12}>\r\n              <Input\r\n                name='verifyPassword'\r\n                label='Repetir contraseña'\r\n                type='password'\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n        <p>\r\n          <Link to='/auth/login'>Ya tienes una cuenta ? Inicia Sesion</Link>\r\n        </p>\r\n        <br></br>\r\n        <Button\r\n          loading={loading}\r\n          appearance='primary'\r\n          disabled={loading}\r\n          onClick={submitRegister}\r\n        >\r\n          Registrarse\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useRef, useCallback } from 'react';\r\nimport { Form, Button, Message, HelpBlock, Schema } from 'rsuite';\r\nimport Input from '../../core/components/controls/Input';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState } from '../../store/reducers';\r\nimport {\r\n  sendRecoveryCodeAction,\r\n  submitRecoveryCodeAction,\r\n  resetPasswordAction,\r\n} from '../../store/actions/auth.actions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst resetPassModel = Schema.Model({\r\n  email: Schema.Types.StringType().isEmail().isRequired(),\r\n  password: Schema.Types.StringType().isRequired('Este campo es obligatorio.'),\r\n  verifyPassword: Schema.Types.StringType(\r\n    'Por favor ingrese una contraseña valida.'\r\n  )\r\n    .isRequired('Este campo es obligatorio.')\r\n    .minLength(6)\r\n    .addRule((value, data) => {\r\n      if (value !== data.password) return false;\r\n      return true;\r\n    }, 'Las contraseñas no coinciden.'),\r\n});\r\n\r\nexport default () => {\r\n  const loading = useSelector((state: AppState) => state.auth.loading);\r\n  const error = useSelector((state: AppState) =>\r\n    state.auth.error ? state.auth.error : null\r\n  );\r\n  const currentResetEmail = useSelector(\r\n    (state: AppState) => state.auth.currentResetEmail\r\n  );\r\n  const message = useSelector((state: AppState) => state.auth.message);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [stage, setStage] = useState(1);\r\n\r\n  const [sendCodeFormValue, setSendCodeFormValue] = useState({\r\n    identification: '',\r\n  });\r\n  const [submitCodeFormValue, setSubmitCodeFormValue] = useState({\r\n    email: '',\r\n    code: '',\r\n  });\r\n  const [resetPassFormValue, setResetPassFormValue] = useState({\r\n    email: '',\r\n    password: '',\r\n    verifyPassword: '',\r\n  });\r\n\r\n  let form = useRef<any>(null);\r\n\r\n  const sendCode = useCallback(() => {\r\n    if (sendCodeFormValue.identification !== '') {\r\n      dispatch(sendRecoveryCodeAction(sendCodeFormValue.identification));\r\n    }\r\n  }, [dispatch, sendCodeFormValue]);\r\n\r\n  const submitCode = useCallback(() => {\r\n    if (submitCodeFormValue.code !== '') {\r\n      dispatch(submitRecoveryCodeAction(submitCodeFormValue));\r\n    }\r\n  }, [submitCodeFormValue, dispatch]);\r\n\r\n  const resetPassword = useCallback(() => {\r\n    if (form.current.check()) {\r\n      dispatch(resetPasswordAction(resetPassFormValue));\r\n    }\r\n  }, [form, dispatch, resetPassFormValue]);\r\n\r\n  if (currentResetEmail && stage === 1) {\r\n    setSubmitCodeFormValue({\r\n      email: currentResetEmail,\r\n      code: '',\r\n    });\r\n    setStage(2);\r\n  } else if (message !== '' && stage === 2) {\r\n    setResetPassFormValue({\r\n      email: currentResetEmail,\r\n      password: '',\r\n      verifyPassword: '',\r\n    });\r\n    setStage(3);\r\n  }\r\n\r\n  switch (stage) {\r\n    case 1:\r\n      return (\r\n        <>\r\n          {error ? (\r\n            <Message showIcon type='error' description={error.message} />\r\n          ) : null}\r\n          <Form\r\n            ref={form}\r\n            fluid\r\n            onChange={(formValue) => setSendCodeFormValue(formValue as any)}\r\n            formValue={sendCodeFormValue}\r\n          >\r\n            <Input name='identification' label='Cedula' />\r\n            <HelpBlock>\r\n              Ingresa tu cedula y enviaremos un codigo a tu correo electronico\r\n              asociado que te servirá para recuperar tu contraseña.\r\n            </HelpBlock>\r\n            <br></br>\r\n            <Button\r\n              loading={loading}\r\n              appearance='primary'\r\n              disabled={loading}\r\n              onClick={sendCode}\r\n            >\r\n              Solicitar Codigo\r\n            </Button>\r\n          </Form>\r\n        </>\r\n      );\r\n    case 2:\r\n      return (\r\n        <>\r\n          <Message\r\n            showIcon\r\n            type='warning'\r\n            description='No recargues ni dejes esta pagina!'\r\n          />\r\n          {error ? (\r\n            <Message showIcon type='error' description={error.message} />\r\n          ) : null}\r\n          <Form\r\n            ref={form}\r\n            fluid\r\n            onChange={(formValue) => setSubmitCodeFormValue(formValue as any)}\r\n            formValue={submitCodeFormValue}\r\n          >\r\n            <Input name='code' label='Codigo de recuperación' />\r\n\r\n            <HelpBlock>\r\n              Ingresa el codigo que te hemos enviado al correo para recuperar tu\r\n              contraseña.\r\n            </HelpBlock>\r\n            <br></br>\r\n            <Button\r\n              loading={loading}\r\n              appearance='primary'\r\n              disabled={loading}\r\n              onClick={submitCode}\r\n            >\r\n              Enviar Codigo\r\n            </Button>\r\n          </Form>\r\n        </>\r\n      );\r\n    case 3:\r\n      return (\r\n        <>\r\n          {message ? (\r\n            <Message\r\n              showIcon\r\n              type='success'\r\n              description={\r\n                <p>\r\n                  {message}\r\n                  <br />\r\n                  {message.includes('recuperado') ? <Link to=\"/auth/login\">Ir a la pagina de login</Link> : null}\r\n                </p>\r\n              }\r\n            />\r\n          ) : null}\r\n          {error ? (\r\n            <Message showIcon type='error' description={error.message} />\r\n          ) : null}\r\n          <Form\r\n            ref={form}\r\n            fluid\r\n            onChange={(formValue) => setResetPassFormValue(formValue as any)}\r\n            formValue={resetPassFormValue}\r\n            model={resetPassModel}\r\n          >\r\n            <Input name='password' label='Nueva contraseña' type='password' />\r\n            <Input\r\n              name='verifyPassword'\r\n              label='Repetir nueva contraseña'\r\n              type='password'\r\n            />\r\n\r\n            <HelpBlock>\r\n              Ingresa el codigo que te hemos enviado al correo para recuperar tu\r\n              contraseña.\r\n            </HelpBlock>\r\n            <br></br>\r\n            <Button\r\n              loading={loading}\r\n              appearance='primary'\r\n              disabled={loading}\r\n              onClick={resetPassword}\r\n            >\r\n              Reestablecer contraseña\r\n            </Button>\r\n          </Form>\r\n        </>\r\n      );\r\n    default:\r\n      return <></>;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Container,\r\n  Header,\r\n  Navbar,\r\n  Content,\r\n  FlexboxGrid,\r\n  Panel,\r\n  Footer,\r\n} from 'rsuite';\r\nimport {\r\n  Route,\r\n  RouteComponentProps,\r\n  Switch,\r\n  useHistory,\r\n} from 'react-router-dom';\r\nimport LoginForm from '../../auth/LoginForm/LoginForm';\r\n\r\nimport './AuthLayout.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState } from '../../store/reducers';\r\nimport RegisterForm from '../../auth/registerForm/RegisterForm';\r\nimport PasswordRecoveryForm from '../../auth/PasswordRecoveryForm/PasswordRecoveryForm';\r\n\r\ninterface AuthLayoutProps {}\r\n\r\nexport default (props: RouteComponentProps<AuthLayoutProps>) => {\r\n  const currentUser = useSelector((state: AppState) => state.auth.currentUser);\r\n  if (currentUser) {\r\n    const history = useHistory();\r\n    history.push('/app');\r\n    return <></>;\r\n  }\r\n  return (\r\n    <Container style={{ height: '100%' }}>\r\n      <Header>\r\n        <Navbar appearance='inverse'>\r\n          <Navbar.Header>URUOnline</Navbar.Header>\r\n        </Navbar>\r\n      </Header>\r\n      <Content className='auth-background'>\r\n        <FlexboxGrid justify='center' align='middle' style={{ height: '100%' }}>\r\n          <FlexboxGrid.Item colspan={12}>\r\n            <Panel\r\n              className='form-panel'\r\n              header={\r\n                <Switch>\r\n                  <Route\r\n                    exact\r\n                    path={props.match.path + '/login'}\r\n                    render={() => (\r\n                      <h1 style={{ color: 'black' }}>Iniciar Sesion</h1>\r\n                    )}\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path={props.match.path + '/register'}\r\n                    component={() => (\r\n                      <h1 style={{ color: 'black' }}>Registrarse</h1>\r\n                    )}\r\n                  />\r\n                </Switch>\r\n              }\r\n              bordered\r\n            >\r\n              <Route\r\n                exact\r\n                path={props.match.path + '/login'}\r\n                component={LoginForm}\r\n              />\r\n              <Route\r\n                exact\r\n                path={props.match.path + '/register'}\r\n                component={RegisterForm}\r\n              />\r\n              <Route\r\n                exact\r\n                path={props.match.path + '/passwordRecovery'}\r\n                component={PasswordRecoveryForm} \r\n              />\r\n            </Panel>\r\n          </FlexboxGrid.Item>\r\n        </FlexboxGrid>\r\n      </Content>\r\n      <Footer>Footer</Footer>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\nimport './App.css';\n\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport MainLayout from './hoc/MainLayout/MainLayout';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { checkAuthenticatedAction } from './store/actions/auth.actions';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport AuthLayout from './hoc/AuthLayout/AuthLayout';\nimport { Loader } from 'rsuite';\nimport { AppState } from './store/reducers';\nimport 'moment/locale/es';\nimport moment from 'moment';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const checked = useSelector(\n    (state: AppState) => state.auth.authenticatedChecked\n  );\n  moment.locale('es');\n  useEffect(() => {\n    dispatch(checkAuthenticatedAction());\n  }, [dispatch]);\n\n  const mainclasses = ['main-container'];\n  !checked && mainclasses.push('loader-container');\n\n  return (\n    <div className='App'>\n      <div className={mainclasses.join(' ')}>\n        {!checked ? (\n          <Loader size='lg' content='Cargando...' />\n        ) : (\n          <Switch>\n            <Redirect exact path='/' to='/auth/login' />\n            <Route path='/auth' component={AuthLayout} />\n            <Route path='/app' component={MainLayout} />\n          </Switch>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { User } from '../../core/models/User.model';\r\nimport { Action } from '../actions/action.model';\r\nimport { authActions } from '../actions';\r\nimport { ApiError } from '../../core/models/ApiError.model';\r\n\r\nexport interface AuthState {\r\n  authenticatedChecked: boolean;\r\n  currentUser: User | null;\r\n  currentResetEmail: string;\r\n  loading: boolean;\r\n  error: ApiError | null;\r\n  message: string;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  authenticatedChecked: false,\r\n  currentUser: null,\r\n  currentResetEmail: '',\r\n  loading: true,\r\n  error: null,\r\n  message: '',\r\n};\r\n\r\nexport const authReducer = (\r\n  state: AuthState = initialState,\r\n  action: Action\r\n) => {\r\n  switch (action.type) {\r\n    case authActions.CHECK_AUTHENTICATED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case authActions.CHECK_AUTHENTICATED_SUCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentUser: action.payload,\r\n        authenticatedChecked: true,\r\n      };\r\n    case authActions.CHECK_AUTHENTICATED_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        authenticatedChecked: true,\r\n      };\r\n    case authActions.LOGIN_USER:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        currentUser: null,\r\n      };\r\n    case authActions.LOGIN_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentUser: action.payload,\r\n      };\r\n    case authActions.LOGIN_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case authActions.REGISTER_USER:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        currentUser: null,\r\n        error: null,\r\n      };\r\n    case authActions.LOGOUT_USER:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case authActions.LOGOUT_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentUser: null,\r\n      };\r\n    case authActions.SEND_RECOVERY_CODE:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n        message: ''\r\n      };\r\n    case authActions.SEND_RECOVERY_CODE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        currentResetEmail: action.payload.email,\r\n        // message: action.payload.message,\r\n      };\r\n    case authActions.SUBMIT_RECOVERY_CODE:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n        message: '',\r\n      };\r\n    case authActions.SUBMIT_RECOVERY_CODE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload.message,\r\n      };\r\n    case authActions.RESET_PASSWORD:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case authActions.RESET_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload.message,\r\n        currentResetEmail: null,\r\n      };\r\n    case authActions.AUTH_ACTION_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { Aggregator } from '../../core/models/Aggregator.model';\r\nimport { Comment } from '../../core/models/Comment.model';\r\nimport { PagingInfo } from '../../core/models/PagingInfo.model';\r\nimport { Post } from '../../core/models/Post.model';\r\nimport { postActions } from '../actions';\r\nimport { Action } from '../actions/action.model';\r\n\r\nexport interface PostsState {\r\n  loading: boolean;\r\n  posts: Post[];\r\n  currentPost: Post | null;\r\n  currentPostComments: Comment[];\r\n  paging: PagingInfo | null; \r\n}\r\n\r\nconst initialState: PostsState = {\r\n  loading: false,\r\n  posts: [],\r\n  currentPost: null,\r\n  currentPostComments: [],\r\n  paging: null\r\n};\r\n\r\nexport const postsReducer = (\r\n  state: PostsState = initialState,\r\n  action: Action\r\n) => {\r\n  switch (action.type) {\r\n    case postActions.SEARCH_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: [],\r\n        loading: true,\r\n        paging: null\r\n      };\r\n    case postActions.SEARCH_POSTS_SUCCESS:\r\n      const payload: Aggregator<Post> = action.payload;\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        posts: payload.docs,\r\n        paging: payload\r\n      };\r\n    case postActions.SEARCH_POST_BY_ID:\r\n      return {\r\n        ...state,\r\n        currentPost: null,\r\n        loading: true,\r\n      };\r\n    case postActions.SEARCH_POST_BY_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentPost: action.payload,\r\n      };\r\n    case postActions.UPVOTE_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentPost: {\r\n          ...state.currentPost,\r\n          votes:\r\n            typeof state.currentPost?.votes !== 'undefined'\r\n              ? state.currentPost?.votes + 1\r\n              : 0,\r\n          voted: true,\r\n        },\r\n      };\r\n    case postActions.DOWNVOTE_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentPost: {\r\n          ...state.currentPost,\r\n          votes:\r\n            typeof state.currentPost?.votes !== 'undefined'\r\n              ? state.currentPost?.votes - 1\r\n              : 0,\r\n          voted: false,\r\n        },\r\n      };\r\n    case postActions.SEARCH_COMMENTS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        currentPostComments: [],\r\n      };\r\n    case postActions.SEARCH_COMMENTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentPostComments: action.payload,\r\n      };\r\n    case postActions.CREATE_COMMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentPostComments: [\r\n          ...state.currentPostComments,\r\n          action.payload.payload,\r\n        ],\r\n      };\r\n    case postActions.UPVOTE_COMMENT_SUCCESS:\r\n      const index = state.currentPostComments.findIndex(\r\n        (c) => c._id === action.payload.payload\r\n      );\r\n      const updatedComments = [...state.currentPostComments];\r\n      updatedComments[index] = {\r\n        ...updatedComments[index],\r\n        votes: (updatedComments[index]?.votes as number) + 1,\r\n        voted: true,\r\n      };\r\n      return {\r\n        ...state,\r\n        currentPostComments: updatedComments,\r\n      };\r\n    case postActions.DOWNVOTE_COMMENT_SUCCESS:\r\n      const i = state.currentPostComments.findIndex(\r\n        (c) => c._id === action.payload.payload\r\n      );\r\n      const updated = [...state.currentPostComments];\r\n      updated[i] = {\r\n        ...updated[i],\r\n        votes: (updated[i]?.votes as number) - 1,\r\n        voted: false,\r\n      };\r\n      console.log(i);\r\n      console.log(updated);\r\n      return {\r\n        ...state,\r\n        currentPostComments: updated,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { authReducer, AuthState } from './auth.reducer';\r\nimport { postsReducer, PostsState } from './posts.reducer';\r\n\r\nexport interface AppState {\r\n    auth: AuthState,\r\n    posts: PostsState\r\n}\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  posts: postsReducer\r\n});\r\n","import axios from 'axios';\r\n\r\n\r\n// const api = axios.create({\r\n//     baseURL: 'http://localhost:3000'\r\n// });\r\n\r\nconst api = axios.create({\r\n    baseURL: ''\r\n});\r\napi.defaults.withCredentials = true;\r\n\r\nexport default api;","import { put } from 'redux-saga/effects';\r\nimport api from '../../core/axios';\r\nimport { Action } from '../actions/action.model';\r\nimport { authActions } from '../actions/index';\r\n\r\nexport function* checkAuthenticatedEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get('/auth');\r\n    yield put(authActions.checkAuthenticatedSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(authActions.checkAuthenticatedFailAction());\r\n  }\r\n}\r\n\r\nexport function* loginUserEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/auth/login', action.payload);\r\n    yield put(authActions.loginUserSuccessAction(data));\r\n  } catch (error) {\r\n    console.log(error);\r\n    yield put(\r\n      authActions.loginUserFailAction({\r\n        message: error.message,\r\n        stack: error.stack,\r\n        status: error.response.status,\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport function* registerUserEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/auth/register', action.payload);\r\n    yield put(authActions.registerUserSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(\r\n      authActions.authActionFail(error.response.data)\r\n    );\r\n  }\r\n}\r\n\r\nexport function* logoutUserEffect(action: Action) {\r\n  try {\r\n    yield api.get('/auth/logout');\r\n    yield put(authActions.logoutUserSuccessAction());\r\n  } catch (error) {\r\n    yield put(\r\n      authActions.authActionFail({\r\n        message: error.message,\r\n        stack: error.stack,\r\n        status: error.response.status,\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport function* sendRecoveryCodeEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get('/auth/passResetCode?id=' + action.payload);\r\n    yield put(authActions.sendRecoveryCodeSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(\r\n      authActions.authActionFail(error.response.data)\r\n    );\r\n  }\r\n}\r\n\r\nexport function* submitRecoveryCodeEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/auth/passResetCode', action.payload);\r\n    yield put(authActions.submitRecoveryCodeSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(\r\n      authActions.authActionFail(error.response.data)\r\n    );\r\n  }\r\n}\r\n\r\nexport function* resetPasswordEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/auth/resetPass', action.payload);\r\n    yield put(authActions.resetPasswordSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(\r\n      authActions.authActionFail(error.response.data)\r\n    );\r\n  }\r\n}\r\n\r\nexport {};\r\n","import { put } from 'redux-saga/effects';\r\nimport api from '../../core/axios';\r\nimport { postActions } from '../actions';\r\nimport { Action } from '../actions/action.model';\r\n\r\nexport function* searchPostsEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get(`/posts?page=${action.payload.page}&filter=${action.payload.filter}`);\r\n    yield put(postActions.searchPostsSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* searchPostByIdEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get('/posts?id=' + action.payload);\r\n    yield put(postActions.searchPostByIdSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* createPostEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/posts', action.payload);\r\n    yield put(postActions.createPostSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* updatePost(action: Action) {\r\n  try {\r\n    const { data } = yield api.put('/posts', action.payload);\r\n    yield put(postActions.updatePostSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* deletePostEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.delete('/posts?postId=' + action.payload);\r\n    yield put(postActions.deletePostSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* upvotePostEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/posts/vote?parentId=' + action.payload);\r\n    yield put(postActions.upvotePostSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* downvotePostEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.delete('/posts/vote?parentId=' + action.payload);\r\n    yield put(postActions.downvotePostSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* searchCommentsEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get('/posts/comments?postId=' + action.payload);\r\n    yield put(postActions.searchCommentsSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* createCommentEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/posts/comments', action.payload); \r\n    yield put(postActions.createCommentSuccessAction({ ...data, payload: action.payload }));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* deleteCommentEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.delete('/post/comments?commentId=' + action.payload);\r\n    // yield put(postActions.deleteCommentSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* upvoteCommentEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/posts/vote?parentId=' + action.payload);\r\n    yield put(postActions.upvoteCommentSuccessAction({ ...data, payload: action.payload }));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* downvoteCommentEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.delete('/posts/vote?parentId=' + action.payload);\r\n    yield put(postActions.downvoteCommentSuccessAction({ ...data, payload: action.payload }));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}","import { takeEvery } from 'redux-saga/effects';\r\nimport { authActions, postActions } from '../actions';\r\nimport { checkAuthenticatedEffect, loginUserEffect, registerUserEffect, logoutUserEffect, sendRecoveryCodeEffect, resetPasswordEffect, submitRecoveryCodeEffect } from './auth.effects';\r\nimport { createCommentEffect, createPostEffect, deletePostEffect, downvoteCommentEffect, downvotePostEffect, searchCommentsEffect, searchPostByIdEffect, searchPostsEffect, updatePost, upvoteCommentEffect, upvotePostEffect } from './post.effects';\r\n\r\nexport function* watchAuth() {\r\n  yield takeEvery(authActions.CHECK_AUTHENTICATED, checkAuthenticatedEffect);\r\n  yield takeEvery(authActions.LOGIN_USER, loginUserEffect);\r\n  yield takeEvery(authActions.REGISTER_USER, registerUserEffect);\r\n  yield takeEvery(authActions.LOGOUT_USER, logoutUserEffect);\r\n  yield takeEvery(authActions.SEND_RECOVERY_CODE, sendRecoveryCodeEffect);\r\n  yield takeEvery(authActions.SUBMIT_RECOVERY_CODE, submitRecoveryCodeEffect);\r\n  yield takeEvery(authActions.RESET_PASSWORD, resetPasswordEffect);\r\n}\r\n\r\nexport function* watchPosts() {\r\n  yield takeEvery(postActions.SEARCH_POSTS, searchPostsEffect);\r\n  yield takeEvery(postActions.SEARCH_POST_BY_ID, searchPostByIdEffect)\r\n  yield takeEvery(postActions.CREATE_POST, createPostEffect);\r\n  yield takeEvery(postActions.UPDATE_POST, updatePost);\r\n  yield takeEvery(postActions.DELETE_POST, deletePostEffect);\r\n  yield takeEvery(postActions.UPVOTE_POST, upvotePostEffect);\r\n  yield takeEvery(postActions.DOWNVOTE_POST, downvotePostEffect);\r\n  yield takeEvery(postActions.SEARCH_COMMENTS, searchCommentsEffect);\r\n  yield takeEvery(postActions.CREATE_COMMENT, createCommentEffect);\r\n  yield takeEvery(postActions.UPVOTE_COMMENT, upvoteCommentEffect);\r\n  yield takeEvery(postActions.DOWNVOTE_COMMENT, downvoteCommentEffect);\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducer from './store/reducers';\nimport { watchAuth, watchPosts } from './store/effects';\n\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(reducer, composeEnhancers(\n  applyMiddleware(sagaMiddleware)\n));\n\nsagaMiddleware.run(watchAuth);\nsagaMiddleware.run(watchPosts);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}