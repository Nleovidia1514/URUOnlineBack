{"version":3,"sources":["core/components/controls/Input.tsx","store/actions/auth.actions.ts","hoc/MainLayout/Navbar/Navbar.tsx","hoc/MainLayout/SideNav/SideNav.tsx","store/actions/post.actions.ts","store/actions/course.action.ts","store/actions/core.actions.ts","store/actions/exam.actions.ts","posts/PostList/PostListFooter/PostListFooter.tsx","posts/PostList/PostListHeader/PostListHeader.tsx","posts/PostList/PostSummary/PostSummary.tsx","posts/PostList/PostList.tsx","core/components/controls/DynamicTag.tsx","core/environment.ts","posts/CreatePostPage/PostEditor/PostEditor.tsx","posts/CreatePostPage/CreatePostPage.tsx","posts/ViewPostPage/AddComment/AddComment.tsx","posts/ViewPostPage/PostCommentsList/PostComment/PostComment.tsx","posts/ViewPostPage/PostCommentsList/PostCommentList.tsx","core/components/ConfirmModal.tsx","posts/ViewPostPage/ViewPostHeader/ViewPostHeader.tsx","posts/ViewPostPage/ViewPostPage.tsx","courses/CoursesList/CourseSummary/CourseSummary.tsx","core/components/controls/ImageUploader.tsx","courses/CoursesList/CreateCourseModal/CreateCourseModal.tsx","courses/CoursesList/CoursesList.tsx","courses/CourseView/CourseArchives/CourseArchives.tsx","core/components/controls/FileUploader.tsx","exams/ExamViewer/ExamQuestion/ExamQuestion.tsx","exams/ExamViewer/ExamViewer.tsx","courses/CourseView/CourseAssignations/AssignationDetail/CreateDeliveredExamModal/CreateDeliveredExamModal.tsx","courses/CourseView/CourseAssignations/AssignationDetail/CreateDeliveredModal/CreateDeliveredModal.tsx","courses/CourseView/CourseAssignations/AssignationDetail/DeliveredDetailModal/DeliveredDetailModal.tsx","courses/CourseView/CourseAssignations/AssignationDetail/AssignationDetail.tsx","courses/CourseView/CourseAssignations/Assignation/Assignation.tsx","courses/CourseView/CourseAssignations/CreateAssignationModal/CreateAssignationModal.tsx","courses/CourseView/CourseAssignations/AssignationsList/AssignationsList.tsx","courses/CourseView/CourseAssignations/CourseAssignations.tsx","courses/CourseView/CourseFeed/CourseFeed.tsx","courses/CourseView/CourseGrades/AlumnGradesTable/AlumnGradesTable.tsx","courses/CourseView/CourseGrades/CreateGradeModal/CreateGradeModal.tsx","courses/CourseView/CourseGrades/ProfessorGradesTable/ProfessorGradesTable.tsx","courses/CourseView/CourseGrades/CourseGrades.tsx","core/components/controls/UsersAutocomplete.tsx","courses/CourseView/CourseMembers/Member/Member.tsx","courses/CourseView/CourseMembers/ManageMembersModal/ManageMembersModal.tsx","courses/CourseView/CourseMembers/CourseMembers.tsx","courses/CourseView/CourseView.tsx","auth/VerifyCodeModal/VerifyCodeModal.tsx","profile/BasicInfoForm/BasicInfoForm.tsx","profile/ExternalLinksForm/ExternalLinksForm.tsx","profile/SecurityForm/SecurityForm.tsx","profile/ProfileView.tsx","exams/CreateExamModal/CreateExamModal.tsx","exams/ExamsList/ExamsList.tsx","exams/ExamView.tsx","hoc/MainLayout/MainLayout.tsx","auth/LoginForm/LoginForm.tsx","auth/registerForm/RegisterForm.tsx","auth/PasswordRecoveryForm/PasswordRecoveryForm.tsx","hoc/AuthLayout/AuthLayout.tsx","App.tsx","serviceWorker.ts","store/reducers/auth.reducer.ts","store/reducers/course.reducer.ts","store/reducers/general.reducer.ts","store/reducers/posts.reducer.ts","store/reducers/exams.reducer.ts","store/reducers/index.ts","core/axios.ts","store/effects/auth.effects.ts","store/effects/course.effects.ts","store/effects/exam.effects.ts","store/effects/general.effects.ts","store/effects/post.effects.ts","store/effects/index.ts","index.tsx"],"names":["ControlTypesEnum","CHECK_AUTHENTICATED","checkAuthenticatedAction","type","CHECK_AUTHENTICATED_SUCESS","checkAuthenticatedSuccessAction","user","payload","CHECK_AUTHENTICATED_FAIL","checkAuthenticatedFailAction","LOGIN_USER","loginUserAction","LOGIN_USER_SUCCESS","loginUserSuccessAction","LOGIN_USER_FAIL","loginUserFailAction","error","RESET_VERIFIED","resetVerifiedAction","SEND_VERIFICATION_CODE","sendVerificationCodeAction","SEND_VERIFICATION_CODE_SUCCESS","sendVerificationCodeSuccessAction","VERIFY_CODE","verifiyCodeAction","VERIFY_CODE_SUCCESS","verifyCodeSuccessAction","REGISTER_USER","registerUserAction","REGISTER_USER_SUCCESS","registerUserSuccessAction","UPDATE_USER","updateUserAction","UPDATE_USER_SUCCESS","updateUserSuccessAction","LOGOUT_USER","logoutUserAction","LOGOUT_USER_SUCCESS","logoutUserSuccessAction","SEND_RECOVERY_CODE","sendRecoveryCodeAction","identification","SEND_RECOVERY_CODE_SUCCESS","sendRecoveryCodeSuccessAction","SUBMIT_RECOVERY_CODE","submitRecoveryCodeAction","SUBMIT_RECOVERY_CODE_SUCCESS","submitRecoveryCodeSuccessAction","RESET_PASSWORD","resetPasswordAction","RESET_PASSWORD_SUCCESS","resetPasswordSuccessAction","SEARCH_USERS","searchUsersAction","SEARCH_USERS_SUCCESS","searchUsersActionSuccess","AUTH_ACTION_FAIL","authActionFail","props","dispatch","useDispatch","history","useHistory","match","useRouteMatch","currentUser","useSelector","state","auth","Navbar","Header","className","Body","Nav","onSelect","pullRight","justified","Dropdown","title","name","Item","eventKey","onClick","push","path","Container","style","display","alignItems","Avatar","src","profileImg","useState","expanded","setExpanded","useEffect","window","innerWidth","addEventListener","height","Sidenav","activeKey","handleSelect","icon","Icon","SEARCH_POSTS","searchPostsAction","page","filter","SEARCH_POSTS_SUCCESS","searchPostsSuccessAction","SEARCH_POST_BY_ID","searchPostByIdAction","SEARCH_POST_BY_ID_SUCCESS","searchPostByIdSuccessAction","CREATE_POST","createPostAction","CREATE_POST_SUCESS","createPostSuccessAction","UPDATE_POST","updatePostAction","UPDATE_POST_SUCCESS","updatePostSuccessAction","DELETE_POST","deletePostAction","DELETE_POST_SUCCESS","deletePostSuccessAction","UPVOTE_POST","upvotePostAction","UPVOTE_POST_SUCCESS","upvotePostSuccessAction","DOWNVOTE_POST","downvotePostAction","DOWNVOTE_POST_SUCCESS","downvotePostSuccessAction","SEARCH_COMMENTS","searchCommentsAction","SEARCH_COMMENTS_SUCCESS","searchCommentsSuccessAction","CREATE_COMMENT","createCommentAction","CREATE_COMMENT_SUCCESS","createCommentSuccessAction","UPVOTE_COMMENT","upvoteCommentAction","UPVOTE_COMMENT_SUCCESS","upvoteCommentSuccessAction","DOWNVOTE_COMMENT","downvoteCommentAction","DOWNVOTE_COMMENT_SUCCESS","downvoteCommentSuccessAction","POST_ACTION_FAIL","postFailedAction","SEARCH_COURSE_BY_ID","searchCourseByIdAction","SEARCH_COURSE_BY_ID_SUCCESS","searchCourseByIdSuccessAction","SEARCH_COURSES","searchCoursesAction","SEARCH_COURSES_SUCCESS","searchCoursesSuccessAction","CREATE_COURSE","createCourseAction","CREATE_COURSE_SUCCESS","createCourseSuccessAction","ADD_COURSE_MEMBER","addCourseMemberAction","ADD_COURSE_MEMBER_SUCCESS","addCourseMemberSucessAction","REMOVE_COURSE_MEMBER","removeCourseMemberAction","REMOVE_COURSE_MEMBER_SUCCESS","removeCourseMemberSuccessAction","SEARCH_COURSE_ASSIGNATIONS","searchCourseAssignationsAction","SEARCH_SINGLE_ASSIGNATION","searchSingleAssignationAction","SEARCH_SINGLE_ASSIGNATION_SUCCESS","searchSingleAssignationSuccessAction","DELETE_ASSIGNATION","deleteAssignationAction","DELETE_ASSIGNATION_SUCCESS","deleteAssignationSuccessAction","SEARCH_COURSE_ASSIGNATIONS_SUCCESS","searchCourseAssignationsSuccessAction","CREATE_COURSE_ASSIGNATION","createCourseAssignationAction","CREATE_COURSE_ASSIGNATION_SUCCESS","createCourseAssignationSuccessAction","CREATE_DELIVERED_ASSIGNATION","createDeliveredAssignationAction","CREATE_DELIVERED_ASSIGNATION_SUCCESS","createDeliveredAssignationSuccessAction","DELETE_DELIVERED_ASSIGNATION","deleteDeliveredAssignationAction","DELETE_DELIVERED_ASSIGNATION_SUCCESS","deleteDeliveredAssignationSuccessAction","CREATE_COURSE_GRADE","createCourseGradeAction","CREATE_COURSE_GRADE_SUCCESS","createCourseGradeSuccessAction","GET_COURSE_GRADES","getCourseGradesAction","GET_COURSE_GRADES_SUCCESS","getCourseGradesSuccessAction","GET_ALL_PROFESSOR_GRADES","getAllProfessorGradesAction","GET_ALL_PROFESSOR_GRADES_SUCCESS","getAllProfessorGradesSuccessAction","UPDATE_ALUMN_GRADE","updateAlumnGradeAction","UPDATE_ALUMN_GRADE_SUCCESS","updateAlumnGradeSuccessAction","CREATE_ALUMN_GRADE","createAlumnGradeAction","CREATE_ALUMN_GRADE_SUCCESS","createAlumnGradeSuccessAction","GET_ALUMN_GRADES","getAlumnGradesAction","GET_ALUMN_GRADES_SUCCESS","getAlumnGradesSuccessAction","GET_COURSE_ATTACHMENTS","getAllCourseAttachmentsAction","GET_COURSE_ATTACHMENTS_SUCCESS","getAllCourseAttachmentsSuccessAction","CREATE_COURSE_FEED","createCourseFeedAction","CREATE_COURSE_FEED_SUCCESS","createCourseFeedSuccessAction","COURSE_FAILED","courseFailedAction","SET_REDIRECT","setRedirectAction","url","DELETE_ATTACHMENT","deleteAttachmentAction","CREATE_EXAM","createExamAction","CREATE_EXAM_SUCCESS","createExamSuccessAction","GET_EXAMS","getExamsAction","GET_EXAMS_SUCCESS","getExamsSuccessAction","SET_CURRENT_EXAM","setCurrentExamAction","DELETE_EXAM","deleteExamAction","DELETE_EXAM_SUCCESS","deleteExamSuccessAction","ADD_EXAM_QUESTION","addExamQuestion","ADD_EXAM_QUESTION_SUCCESS","addExamQuestionSuccess","CREATE_DELIVERED_EXAM","createDeliveredExamAction","CREATE_DELIVERED_EXAM_SUCCESS","createDeliveredExamSuccessAction","EXAM_FAIL","examFailAction","paging","posts","location","useLocation","Footer","Pagination","activePage","first","next","hasNextPage","prev","hasPrevPage","last","totalPages","size","pages","URLSearchParams","search","get","onSelectFilter","pathname","FlexboxGrid","align","colspan","order","Button","appearance","marginTop","ButtonToolbar","ButtonGroup","post","paddingLeft","flexDirection","votes","comments","viewed","padding","to","_id","dangerouslySetInnerHTML","__html","content","TagGroup","tags","map","tag","index","Tag","key","color","justifyContent","owner","Badge","rating","moment","createdDate","fromNow","loading","params","postActions","parseInt","PostListHeader","Divider","Content","Loader","List","hover","item","PostListFooter","typing","inputValue","input","handleButtonClick","bind","handleInputChange","handleInputConfirm","this","setState","focus","nextTags","onChangeTags","Input","inputRef","ref","width","value","onChange","onBlur","onPressEnter","IconButton","margin","closable","onClose","handleTagRemove","renderInput","React","Component","component","TEXTAREA","FormControl","disabled","readOnly","readonly","minWidth","rows","componentClass","placeholder","SELECT","data","accepter","SelectPicker","searchable","disableSearch","PASSWORD","passwordVisible","setPasswordVisible","FormGroup","InputGroup","inside","Addon","cursor","DATE","format","allowHour","showMeridian","DatePicker","NUMBER","InputNumber","min","max","TAGS","TagPicker","creatable","TEXT","ControlLabel","label","apiKey","environment","initialValue","init","menubar","plugins","toolbar","onEditorChange","Schema","Types","StringType","ArrayType","model","Model","isRequiredOrEmpty","minLength","of","form","useRef","currentPost","id","useParams","formValue","setFormValue","onPostSubmit","useCallback","current","check","Form","fluid","PostEditor","sendComment","postId","Date","undefined","comment","upvote","downvote","fontSize","voted","paddingTop","currentPostComments","length","com","PostComment","forwardRef","show","setShow","useImperativeHandle","open","Modal","backdrop","onHide","children","onConfirm","onCancel","modal","deletePost","maxHeight","ConfirmModal","ViewPostHeader","PostCommentList","AddComment","course","Whisper","placement","trigger","speaker","Tooltip","Panel","shaded","bordered","bodyFill","backgroundImg","alt","header","overflow","textOverflow","whiteSpace","professor","lastname","styles","img","action","autoupload","uploaderRef","onSuccessUpload","onErrorUpload","uploading","setUploading","fileInfo","setFileInfo","Uploader","fileListVisible","multiple","listType","accept","autoUpload","withCredentials","file","callback","reader","FileReader","onloadend","result","readAsDataURL","previewFile","blobFile","onUpload","onSuccess","response","onError","center","NumberType","isRequired","maxLength","period","capacity","close","getCurrentPeriod","uploader","resetForm","handleUploadSuccess","alumns","Title","Grid","Row","Col","mdOffset","md","ImageUploader","encodeURIComponent","err","console","log","getPeriods","x","fileList","Alert","start","letter","date","year","getUTCFullYear","month","getUTCMonth","currentCourses","courses","selectedPeriod","setSelectedPeriod","showCourseModal","setShowCourseModal","closeModal","courseActions","userType","RadioGroup","inline","Radio","checked","sm","CreateCourseModal","imageExtensions","documentExtensions","activeTab","setActiveTab","currentAttachments","currentCourse","selectedAttachs","includes","extension","replace","borderRadius","border","marginRight","lineHeight","onUploadSuccess","draggable","res","attachment","question","editable","marginBottom","smOffset","circle","toString","options","BooleanType","questionTypes","fetchExam","currentExam","exams","answerFormValue","setAnswerFormValue","answerModel","setAnswerModel","answerForm","auxModel","questions","forEach","saveExamQuestion","exam","sendExamAnswers","answers","element","delivered","setExamAnswers","answerValue","a","block","sort","b","ExamQuestion","creator","showConfirm","setShowConfirm","viewerRef","saveExam","deliveredExam","setTimeout","full","ExamViewer","createdAttachments","setCreatedAttachments","showExam","setShowExam","setComment","currentDeliveredExam","assignation","currentAssignation","newAttach","nextAttachs","attachments","FileUploader","CreateDeliveredExamModal","possibleGrades","grade","setGrade","saveGrade","alumn","showDelivered","setShowDelivered","currentDelivered","setCurrentDelivered","assignId","courseId","deleteAssignation","deleteDeliveredAssignation","percentage","contentType","dueDate","find","findIndex","uploadedDate","getTime","DeliveredDetailModal","CreateDeliveredModal","paddingBottom","DateType","courseGrades","currentCourseGrades","currentExams","showAssignModal","setShowAssignModal","assignations","currentCourseAssignations","closeAssignModal","flex","marginLeft","Assignation","CreateAssignationModal","exact","AssignationsList","AssignationDetail","newComment","setNewComment","saveComment","feed","Table","grades","Column","HeaderCell","Cell","rowData","dataKey","showCreateGrade","setShowCreateGrade","alumnGrades","currentAlumnGrades","professorGrades","currentProfessorGrades","isProfessor","CreateGradeModal","ProfessorGradesTable","AlumnGradesTable","users","autocompleteUsers","delayedQuery","_","debounce","q","authActions","handleChange","val","cancel","AutoComplete","filterBy","renderItem","email","e","buttonIcon","onButtonClick","Math","floor","random","avatarColor","background","substr","toUpperCase","handleUserAdd","handleUserRemove","UsersAutocomplete","Member","showMembersModal","setShowMembersModal","closeMembersModal","selectHandle","lastIndexOf","CourseFeed","CourseMembers","CourseAssignations","CourseGrades","CourseArchives","isVerified","codeVerified","onSuccessVerify","verificationCode","setVerificationCode","sendVerificationCode","phoneNumber","isValid","valid","isNaN","Message","showIcon","description","message","isEmail","birthdate","addRule","startsWith","setValue","githubLink","password","verifyPassword","mfa","saveChanges","showVerify","setShowVerify","basicInfoValue","setBasicInfoValue","securityInfoValue","setSecurityInfoValue","externalLinksValue","setExternalLinksValue","changes","isDifferent","different","onSuccessImgUpload","success","onClickSave","VerifyCodeModal","vertical","BasicInfoForm","SecurityForm","ExternalLinksForm","examActions","showCreate","setShowCreate","CreateExamModal","ExamsList","setActiveKey","Sidebar","minHeight","PostList","CreatePostPage","ViewPostPage","CoursesList","CourseView","ProfileView","ExamView","from","submitLogin","submitRegister","isActive","resetPassModel","currentResetEmail","stage","setStage","sendCodeFormValue","setSendCodeFormValue","code","submitCodeFormValue","setSubmitCodeFormValue","resetPassFormValue","setResetPassFormValue","sendCode","submitCode","resetPassword","HelpBlock","backgroundColor","justify","render","LoginForm","RegisterForm","PasswordRecoveryForm","App","authenticatedChecked","redirectUri","general","redirectUrl","locale","mainclasses","coreActions","join","AuthLayout","MainLayout","Boolean","hostname","initialState","combineReducers","docs","c","updatedComments","i","updated","auxState","api","axios","create","baseURL","defaults","checkAuthenticatedEffect","loginUserEffect","registerUserEffect","sendVerificationCodeEffect","verifyCodeEffect","updateUserEffect","logoutUserEffect","sendRecoveryCodeEffect","submitRecoveryCodeEffect","resetPasswordEffect","searchUsersEffect","put","stack","status","authEffects","effect","searchCoursesEffect","createCourseEffect","searchCourseByIdEffect","addCourseMemberEffect","removeCourseMemberEffect","searchCourseAssignationsEffect","searchSingleAssignationEffect","deleteAssignationEffect","createCourseAssignationEffect","createDeliveredAssignationEffect","deleteDeliveredAssignationEffect","createCourseGradeEffect","getCourseGradesEffect","createAlumnGradeEffect","getAlumnGradesEffect","updateAlumnGradeEffect","getAllProfessorGradesEffect","getAllCourseAttachmentsEffect","createCourseFeedEffect","delete","courseEffects","createExamEffect","getExamsEffect","deleteExamEffect","addExamQuestionEffect","createDeliveredExamEffect","examId","examEffects","deleteAttachmentEffect","generalEffects","searchPostsEffect","searchPostByIdEffect","createPostEffect","updatePost","deletePostEffect","upvotePostEffect","downvotePostEffect","searchCommentsEffect","createCommentEffect","upvoteCommentEffect","downvoteCommentEffect","postEffects","watchAuth","watchPosts","watchCourses","watchGeneral","watchExams","el","takeEvery","watchers","composeEnhancers","compose","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","applyMiddleware","watcher","run","ReactDOM","StrictMode","IntlProvider","esES","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.295ce5c2.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  FormGroup,\r\n  ControlLabel,\r\n  FormControl,\r\n  InputGroup,\r\n  Icon,\r\n  DatePicker,\r\n  InputNumber,\r\n  SelectPicker,\r\n  TagPicker,\r\n} from 'rsuite';\r\n\r\ninterface InputProps {\r\n  type?:\r\n    | 'text'\r\n    | 'checkbox'\r\n    | 'textarea'\r\n    | 'select'\r\n    | 'password'\r\n    | 'date'\r\n    | 'number'\r\n    | 'tags'\r\n  label?: string;\r\n  name?: string;\r\n  disabled?: boolean;\r\n  readonly?: boolean;\r\n  min?: number;\r\n  max?: number;\r\n  allowHour?: boolean;\r\n  rows?: number;\r\n  onChange?: (value: any) => void;\r\n  disableSearch?: boolean;\r\n  data?: any[];\r\n  placeholder?: string;\r\n}\r\n\r\nexport enum ControlTypesEnum {\r\n  TEXT = 'text',\r\n  TAGS = 'tags',\r\n  CHECKBOX = 'checkbox',\r\n  TEXTAREA = 'textarea',\r\n  SELECT = 'select',\r\n  PASSWORD = 'password',\r\n  DATE = 'date',\r\n  NUMBER = 'number',\r\n}\r\n\r\nexport default (props: InputProps) => {\r\n  let component = null;\r\n  switch (props.type) {\r\n    case ControlTypesEnum.TEXTAREA:\r\n      component = (\r\n        <FormControl\r\n          name={props.name}\r\n          disabled={props.disabled}\r\n          readOnly={props.readonly}\r\n          style={{ width: '100%', minWidth: 'unset' }}\r\n          rows={props.rows ? props.rows : 5}\r\n          componentClass='textarea'\r\n          placeholder={props.placeholder}\r\n        />\r\n      );\r\n      break;\r\n    case ControlTypesEnum.SELECT:\r\n      component = (\r\n        <FormControl\r\n          name={props.name}\r\n          data={props.data}\r\n          style={{ width: '100%' }}\r\n          accepter={SelectPicker}\r\n          disabled={props.disabled}\r\n          searchable={!props.disableSearch}\r\n          readOnly={props.readonly}\r\n          placeholder={props.placeholder}\r\n        />\r\n      );\r\n      break;\r\n    case ControlTypesEnum.PASSWORD:\r\n      const [passwordVisible, setPasswordVisible] = useState(false);\r\n      component = (\r\n        <FormGroup>\r\n          <InputGroup style={{ width: '100%' }} inside>\r\n            <FormControl\r\n              name={props.name}\r\n              data={props.data}\r\n              disabled={props.disabled}\r\n              readOnly={props.readonly}\r\n              type={passwordVisible ? 'text' : 'password'}\r\n              placeholder={props.placeholder}\r\n            />\r\n            <InputGroup.Addon\r\n              style={{ cursor: 'pointer' }}\r\n              onClick={() => setPasswordVisible(!passwordVisible)}\r\n            >\r\n              <Icon icon={passwordVisible ? 'eye-slash' : 'eye'} />\r\n            </InputGroup.Addon>\r\n          </InputGroup>\r\n        </FormGroup>\r\n      );\r\n      break;\r\n    case ControlTypesEnum.DATE:\r\n      component = (\r\n        <FormControl\r\n          style={{ width: '100%' }}\r\n          format={props.allowHour ? 'DD/MM/YYYY HH:mm a' : 'DD/MM/YYYY'}\r\n          showMeridian\r\n          accepter={DatePicker}\r\n          name={props.name}\r\n          disabled={props.disabled}\r\n          readOnly={props.readonly}\r\n          placeholder={props.placeholder}\r\n        />\r\n      );\r\n      break;\r\n    case ControlTypesEnum.NUMBER:\r\n      component = (\r\n        <FormControl\r\n          style={{ width: '100%' }}\r\n          accepter={InputNumber}\r\n          min={props.min}\r\n          max={props.max}\r\n          name={props.name}\r\n          disabled={props.disabled}\r\n          readOnly={props.readonly}\r\n          placeholder={props.placeholder}\r\n        />\r\n      );\r\n      break;\r\n    case ControlTypesEnum.TAGS:\r\n      component = (\r\n        <FormControl\r\n          style={{ width: '100%' }}\r\n          accepter={TagPicker}\r\n          data={props.data}\r\n          creatable\r\n          name={props.name}\r\n          readOnly={props.readonly}\r\n          placeholder={props.placeholder}\r\n        />\r\n      );\r\n      break;\r\n    case ControlTypesEnum.TEXT:\r\n    default:\r\n      component = (\r\n        <FormControl\r\n          style={{ width: '100%' }} \r\n          onChange={props.onChange}\r\n          name={props.name}\r\n          disabled={props.disabled}\r\n          readOnly={props.readonly}\r\n          placeholder={props.placeholder}\r\n        />\r\n      );\r\n      break;\r\n  }\r\n  return (\r\n    <FormGroup>\r\n      <ControlLabel>{props.label}</ControlLabel>\r\n      {component}\r\n    </FormGroup>\r\n  );\r\n};\r\n","import { User } from '../../core/models/User.model';\r\nimport { Action } from './action.model';\r\nimport { ApiError } from '../../core/models/ApiError.model';\r\n\r\nexport const CHECK_AUTHENTICATED = 'CHECK_AUTHENTICATED';\r\nexport const checkAuthenticatedAction = (): Action => ({\r\n  type: CHECK_AUTHENTICATED,\r\n});\r\nexport const CHECK_AUTHENTICATED_SUCESS = 'CHECK_AUTHENTICATED_SUCCESS';\r\nexport const checkAuthenticatedSuccessAction = (user: User): Action => ({\r\n  type: CHECK_AUTHENTICATED_SUCESS,\r\n  payload: user,\r\n});\r\nexport const CHECK_AUTHENTICATED_FAIL = 'CHECK_AUTHENTICATED_FAIL';\r\nexport const checkAuthenticatedFailAction = (): Action => ({\r\n  type: CHECK_AUTHENTICATED_FAIL,\r\n});\r\n\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const loginUserAction = (payload: {\r\n  identification: string;\r\n  password: string;\r\n}): Action => ({ type: LOGIN_USER, payload });\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const loginUserSuccessAction = (user: User): Action => ({\r\n  type: LOGIN_USER_SUCCESS,\r\n  payload: user,\r\n});\r\nexport const LOGIN_USER_FAIL = 'LOGIN_USER_FAIL';\r\nexport const loginUserFailAction = (error: ApiError) => ({\r\n  type: LOGIN_USER_FAIL,\r\n  payload: error,\r\n});\r\n\r\nexport const RESET_VERIFIED = 'RESET_VERIFIED';\r\nexport const resetVerifiedAction = (payload: boolean): Action => ({\r\n  type: RESET_VERIFIED,\r\n  payload\r\n});\r\n\r\nexport const SEND_VERIFICATION_CODE = 'SEND_VERIFICATION_CODE';\r\nexport const sendVerificationCodeAction = (payload: string): Action => ({\r\n  type: SEND_VERIFICATION_CODE,\r\n  payload\r\n});\r\n\r\nexport const SEND_VERIFICATION_CODE_SUCCESS = 'SEND_VERIFICATION_CODE_SUCCESS';\r\nexport const sendVerificationCodeSuccessAction = (payload: string): Action => ({\r\n  type: SEND_VERIFICATION_CODE_SUCCESS,\r\n  payload\r\n});\r\n\r\nexport const VERIFY_CODE = 'VERIFY_CODE';\r\nexport const verifiyCodeAction = (payload: { verificationCode: string, phoneNumber: string }): Action => ({\r\n  type: VERIFY_CODE,\r\n  payload\r\n});\r\n\r\nexport const VERIFY_CODE_SUCCESS = 'VERIFY_CODE_SUCCESS';\r\nexport const verifyCodeSuccessAction = (payload: string): Action => ({\r\n  type: VERIFY_CODE_SUCCESS,\r\n  payload \r\n});\r\n\r\nexport const REGISTER_USER = 'REGISTER_USER';\r\nexport const registerUserAction = (payload: User): Action => ({\r\n  type: REGISTER_USER,\r\n  payload,\r\n});\r\n\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\r\nexport const registerUserSuccessAction = (payload: User): Action => ({\r\n  type: REGISTER_USER_SUCCESS,\r\n  payload,\r\n});\r\n\r\nexport const UPDATE_USER = 'UPDATE_USER';\r\nexport const updateUserAction = (payload: User): Action => ({\r\n  type: UPDATE_USER,\r\n  payload\r\n});\r\n\r\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS';\r\nexport const updateUserSuccessAction = (payload: User): Action => ({\r\n  type: UPDATE_USER_SUCCESS,\r\n  payload\r\n});\r\n\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\nexport const logoutUserAction = (): Action => ({\r\n  type: LOGOUT_USER,\r\n});\r\n\r\nexport const LOGOUT_USER_SUCCESS = 'LOGOUT_USER_SUCCESS';\r\nexport const logoutUserSuccessAction = (): Action => ({\r\n  type: LOGOUT_USER_SUCCESS,\r\n});\r\n\r\nexport const SEND_RECOVERY_CODE = 'SEND_RECOVERY_CODE';\r\nexport const sendRecoveryCodeAction = (identification: string): Action => ({\r\n  type: SEND_RECOVERY_CODE,\r\n  payload: identification,\r\n});\r\n\r\nexport const SEND_RECOVERY_CODE_SUCCESS = 'SEND_RECOVERY_CODE_SUCCESS';\r\nexport const sendRecoveryCodeSuccessAction = (payload: {\r\n  email: string;\r\n  message: string;\r\n}) => ({\r\n  type: SEND_RECOVERY_CODE_SUCCESS,\r\n  payload,\r\n});\r\n\r\nexport const SUBMIT_RECOVERY_CODE = 'SUBMIT_RECOVERY_CODE';\r\nexport const submitRecoveryCodeAction = (payload: {\r\n  email: string;\r\n  code: string;\r\n}) => ({\r\n  type: SUBMIT_RECOVERY_CODE,\r\n  payload,\r\n});\r\n\r\nexport const SUBMIT_RECOVERY_CODE_SUCCESS = 'SUBMIT_RECOVERY_CODE_SUCCESS';\r\nexport const submitRecoveryCodeSuccessAction = (payload: any) => ({\r\n  type: SUBMIT_RECOVERY_CODE_SUCCESS,\r\n  payload,\r\n});\r\n\r\nexport const RESET_PASSWORD = 'RESET_PASSWORD';\r\nexport const resetPasswordAction = (payload: any): Action => ({\r\n  type: RESET_PASSWORD,\r\n  payload,\r\n});\r\n\r\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\r\nexport const resetPasswordSuccessAction = (payload: {\r\n  message: string;\r\n}): Action => ({\r\n  type: RESET_PASSWORD_SUCCESS,\r\n  payload,\r\n});\r\n\r\n\r\nexport const SEARCH_USERS = 'SEARCH_USERS';\r\nexport const searchUsersAction = (payload: string): Action => ({\r\n    type: SEARCH_USERS,\r\n    payload\r\n});\r\n\r\nexport const SEARCH_USERS_SUCCESS = 'SEARCH_USERS_SUCCESS';\r\nexport const searchUsersActionSuccess = (payload: User[]): Action => ({\r\n    type: SEARCH_USERS_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const AUTH_ACTION_FAIL = 'AUTH_ACTION_FAIL';\r\nexport const authActionFail = (error: ApiError): Action => ({\r\n  type: AUTH_ACTION_FAIL,\r\n  payload: error,\r\n});\r\n","import React from 'react';\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Dropdown,\r\n  NavbarProps,\r\n  Avatar,\r\n  Container,\r\n} from 'rsuite';\r\n\r\nimport './Navbar.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState } from '../../../store/reducers';\r\nimport { User } from '../../../core/models/User.model';\r\nimport { logoutUserAction } from '../../../store/actions/auth.actions';\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\n\r\nexport default (props: NavbarProps) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const match = useRouteMatch();\r\n\r\n  const logoutUser = () => {\r\n    dispatch(logoutUserAction());\r\n  };\r\n\r\n  const currentUser: User | null = useSelector(\r\n    (state: AppState) => state.auth.currentUser\r\n  );\r\n  return (\r\n    <Navbar {...props}>\r\n      <Navbar.Header>\r\n        <h6 className='navbar-brand logo'>URUOnline</h6>\r\n      </Navbar.Header>\r\n      <Navbar.Body>\r\n        <Nav onSelect={props.onSelect}>\r\n        </Nav>\r\n        <Nav pullRight justified>\r\n          <Dropdown title={currentUser?.name}>\r\n            <Dropdown.Item\r\n              eventKey='4'\r\n              onClick={() => history.push(match.path + '/profile')}\r\n            >\r\n              Perfil\r\n            </Dropdown.Item>\r\n            <Dropdown.Item eventKey='5' onClick={logoutUser}>\r\n              Cerrar Sesión\r\n            </Dropdown.Item>\r\n          </Dropdown>\r\n          <Container style={{ display: 'flex', alignItems: 'center' }}>\r\n            <Avatar src={currentUser?.profileImg} />\r\n          </Container>\r\n        </Nav>\r\n      </Navbar.Body>\r\n    </Navbar>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Sidenav, Nav, Icon } from 'rsuite';\r\nimport { AppState } from '../../../store/reducers';\r\n\r\nimport './SideNav.css';\r\n\r\ninterface SideNavProps {\r\n  activeKey: string;\r\n  handleSelect: (key: string) => void;\r\n}\r\n\r\nexport default (props: SideNavProps) => {\r\n  const currentUser = useSelector((state: AppState) => state.auth.currentUser);\r\n  const [expanded, setExpanded] = useState(false);\r\n  useEffect(() => {\r\n    if (window.innerWidth > 1000) {\r\n      setExpanded(true);\r\n    } else {\r\n      setExpanded(false);\r\n    }\r\n    window.addEventListener('resize', () => {\r\n      if (window.innerWidth > 1000) {\r\n        setExpanded(true);\r\n      } else {\r\n        setExpanded(false);\r\n      }\r\n    });\r\n  }, []);\r\n  return (\r\n    <div style={{ height: '92%' }}>\r\n      <Sidenav\r\n        expanded={expanded}\r\n        activeKey={props.activeKey}\r\n        onSelect={props.handleSelect}\r\n        className='sidenav'\r\n      >\r\n        <Sidenav.Body>\r\n          <Nav>\r\n            <Nav.Item eventKey='1' icon={<Icon icon='dashboard' />}>\r\n              Posts\r\n            </Nav.Item>\r\n            <Nav.Item eventKey='2' icon={<Icon icon='group' />}>\r\n              Cursos\r\n            </Nav.Item>\r\n            {currentUser?.type === 'professor' ? (\r\n              <Nav.Item eventKey='3' icon={<Icon icon='file-text' />}>\r\n                Examenes\r\n              </Nav.Item>\r\n            ) : null}\r\n            {/* <Dropdown\r\n              placement='rightStart'\r\n              eventKey='4'\r\n              title='Settings'\r\n              icon={<Icon icon='gear-circle' />}\r\n            >\r\n              <Dropdown.Item eventKey='4-1'>Applications</Dropdown.Item>\r\n              <Dropdown.Item eventKey='4-2'>Channels</Dropdown.Item>\r\n              <Dropdown.Item eventKey='4-3'>Versions</Dropdown.Item>\r\n              <Dropdown.Menu eventKey='4-5' title='Custom Action'>\r\n                <Dropdown.Item eventKey='4-5-1'>Action Name</Dropdown.Item>\r\n                <Dropdown.Item eventKey='4-5-2'>Action Params</Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown> */}\r\n          </Nav>\r\n        </Sidenav.Body>\r\n        {/* <IconButton\r\n          className='collapse-btn'\r\n          onClick={() => setExpanded(!expanded)}\r\n          icon={\r\n            <Icon\r\n              icon={expanded ? 'angle-double-left' : 'angle-double-right'}\r\n            />\r\n          }\r\n          size='lg'\r\n        ></IconButton> */}\r\n      </Sidenav>\r\n    </div>\r\n  );\r\n};\r\n","import { Aggregator } from \"../../core/models/Aggregator.model\";\r\nimport { ApiError } from \"../../core/models/ApiError.model\";\r\nimport { ApiResponse } from \"../../core/models/ApiResponse.model\";\r\nimport { Comment } from \"../../core/models/Comment.model\";\r\nimport { Post } from \"../../core/models/Post.model\";\r\nimport { Action } from \"./action.model\";\r\n\r\nexport const SEARCH_POSTS = 'SEARCH_POSTS';\r\nexport const searchPostsAction = (payload: { page: number, filter: string } = { page: 1, filter: 'rated' }) => ({\r\n  type: SEARCH_POSTS,\r\n  payload,\r\n});\r\n\r\nexport const SEARCH_POSTS_SUCCESS = 'SEARCH_POSTS_SUCCESS';\r\nexport const searchPostsSuccessAction = (payload: Aggregator<Post>) => ({\r\n    type: SEARCH_POSTS_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const SEARCH_POST_BY_ID = 'SEARCH_POST_BY_ID';\r\nexport const searchPostByIdAction = (payload: string) => ({\r\n    type: SEARCH_POST_BY_ID,\r\n    payload\r\n});\r\n\r\nexport const SEARCH_POST_BY_ID_SUCCESS = 'SEARCH_POST_BY_ID_SUCCESS';\r\nexport const searchPostByIdSuccessAction = (payload: Post) => ({\r\n    type: SEARCH_POST_BY_ID_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const CREATE_POST = 'CREATE_POST';\r\nexport const createPostAction = (payload: Post) => ({\r\n    type: CREATE_POST,\r\n    payload\r\n});\r\n\r\nexport const CREATE_POST_SUCESS = 'CREATE_POST_SUCCESS';\r\nexport const createPostSuccessAction = (payload: ApiResponse) => ({\r\n    type: CREATE_POST_SUCESS,\r\n    payload\r\n});\r\n\r\nexport const UPDATE_POST = 'UPDATE_POST';\r\nexport const updatePostAction = (payload: Post) => ({\r\n    type: UPDATE_POST,\r\n    payload\r\n});\r\n\r\n\r\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCESS';\r\nexport const updatePostSuccessAction = (payload: ApiResponse) => ({\r\n    type: UPDATE_POST_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const deletePostAction = (payload: string) => ({\r\n    type: DELETE_POST,\r\n    payload\r\n});\r\n\r\nexport const DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\r\nexport const deletePostSuccessAction = (payload: ApiResponse) => ({\r\n    type: DELETE_POST_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const UPVOTE_POST = 'UPVOTE_POST';\r\nexport const upvotePostAction = (payload: string) => ({\r\n    type: UPVOTE_POST,\r\n    payload\r\n});\r\n\r\nexport const UPVOTE_POST_SUCCESS = 'UPVOTE_POST_SUCCESS';\r\nexport const upvotePostSuccessAction = (payload: ApiResponse) => ({\r\n    type: UPVOTE_POST_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const DOWNVOTE_POST = 'DOWNVOTE_POST';\r\nexport const downvotePostAction = (payload: string) => ({\r\n    type: DOWNVOTE_POST,\r\n    payload\r\n})\r\n\r\nexport const DOWNVOTE_POST_SUCCESS = 'DOWNVOTE_POST_SUCCESS';\r\nexport const downvotePostSuccessAction = (payload: ApiResponse) => ({\r\n    type: DOWNVOTE_POST_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const SEARCH_COMMENTS = 'SEARCH_COMMENTS';\r\nexport const searchCommentsAction = (payload: string) => ({\r\n    type: SEARCH_COMMENTS,\r\n    payload\r\n});\r\n\r\nexport const SEARCH_COMMENTS_SUCCESS = 'SEARCH_COMMENTS_SUCCESS';\r\nexport const searchCommentsSuccessAction = (payload: Comment[]) => ({\r\n    type: SEARCH_COMMENTS_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const CREATE_COMMENT = 'CREATE_COMMENT';\r\nexport const createCommentAction = (payload: Comment) => ({\r\n    type: CREATE_COMMENT,\r\n    payload\r\n});\r\n\r\nexport const CREATE_COMMENT_SUCCESS = 'CREATE_COMMENT_SUCCESS';\r\nexport const createCommentSuccessAction = (payload: ApiResponse) => ({\r\n    type: CREATE_COMMENT_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const UPVOTE_COMMENT = 'UPVOTE_COMMENT';\r\nexport const upvoteCommentAction = (payload: string) => ({\r\n    type: UPVOTE_COMMENT,\r\n    payload\r\n});\r\n\r\nexport const UPVOTE_COMMENT_SUCCESS = 'UPVOTE_COMMENT_SUCCESS';\r\nexport const upvoteCommentSuccessAction = (payload: ApiResponse) => ({\r\n    type: UPVOTE_COMMENT_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const DOWNVOTE_COMMENT= 'DOWNVOTE_COMMENT';\r\nexport const downvoteCommentAction = (payload: string) => ({\r\n    type: DOWNVOTE_COMMENT,\r\n    payload\r\n})\r\n\r\nexport const DOWNVOTE_COMMENT_SUCCESS = 'DOWNVOTE_COMMENT_SUCCESS';\r\nexport const downvoteCommentSuccessAction = (payload: ApiResponse) => ({\r\n    type: DOWNVOTE_COMMENT_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const POST_ACTION_FAIL = 'POST_ACTION_FAIL';\r\nexport const postFailedAction = (error: ApiError): Action => ({\r\n    type: POST_ACTION_FAIL,\r\n    payload: error\r\n});","import { AlumnGrade } from \"../../core/models/AlumnGrade.model\";\r\nimport { ApiError } from \"../../core/models/ApiError.model\";\r\nimport { Assignation } from \"../../core/models/Assignation.model\";\r\nimport { Attachment } from \"../../core/models/Attachment.model\";\r\nimport { Course, CourseFeed  } from \"../../core/models/Course.model\";\r\nimport { CourseGrade } from \"../../core/models/CourseGrade.model\";\r\nimport { DeliveredAssignation } from \"../../core/models/DeliveredAssignation.model\";\r\nimport { ProfessorGrade } from \"../../core/models/ProfessorGrade.model\";\r\nimport { User } from \"../../core/models/User.model\";\r\nimport { Action } from \"./action.model\";\r\n\r\nexport const SEARCH_COURSE_BY_ID = 'SEARCH_COURSE_BY_ID';\r\nexport const searchCourseByIdAction = (payload: string): Action => ({\r\n    type: SEARCH_COURSE_BY_ID,\r\n    payload\r\n});\r\n\r\nexport const SEARCH_COURSE_BY_ID_SUCCESS = 'SEARCH_COURSE_BY_ID_SUCCESS';\r\nexport const searchCourseByIdSuccessAction = (payload: Course): Action => ({\r\n    type: SEARCH_COURSE_BY_ID_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const SEARCH_COURSES = 'SEARCH_COURSES';\r\nexport const searchCoursesAction = (payload: { userType: string, period: string }): Action => ({\r\n    type: SEARCH_COURSES,\r\n    payload\r\n});\r\n\r\nexport const SEARCH_COURSES_SUCCESS = 'SEARCH_COURSES_SUCCESS';\r\nexport const searchCoursesSuccessAction = (payload: Course[]): Action => ({\r\n    type: SEARCH_COURSES_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const CREATE_COURSE = 'CREATE_COURSE';\r\nexport const createCourseAction = (payload: Course): Action => ({\r\n    type: CREATE_COURSE,\r\n    payload\r\n});\r\n\r\nexport const CREATE_COURSE_SUCCESS = 'CREATE_COURSE_SUCCESS';\r\nexport const createCourseSuccessAction = (payload: Course): Action => ({\r\n    type: CREATE_COURSE_SUCCESS,\r\n    payload\r\n})\r\n\r\nexport const ADD_COURSE_MEMBER = 'ADD_COURSE_MEMBER';\r\nexport const addCourseMemberAction = (payload: { user: User, course: Course }): Action => ({\r\n    type: ADD_COURSE_MEMBER,\r\n    payload\r\n});\r\n\r\nexport const ADD_COURSE_MEMBER_SUCCESS = 'ADD_COURSE_MEMBER_SUCCESS';\r\nexport const addCourseMemberSucessAction = (payload: User): Action => ({\r\n    type: ADD_COURSE_MEMBER_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const REMOVE_COURSE_MEMBER = 'REMOVE_COURSE_MEMBER';\r\nexport const removeCourseMemberAction = (payload: { user: User, course: Course }): Action => ({\r\n    type: REMOVE_COURSE_MEMBER,\r\n    payload\r\n});\r\n\r\nexport const REMOVE_COURSE_MEMBER_SUCCESS = 'REMOVE_COURSE_MEMBER_SUCCESS';\r\nexport const removeCourseMemberSuccessAction = (payload: User): Action => ({\r\n    type: REMOVE_COURSE_MEMBER_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const SEARCH_COURSE_ASSIGNATIONS = 'SEARCH_COURSE_ASSIGNATIONS';\r\nexport const searchCourseAssignationsAction = (payload: string): Action => ({\r\n    type: SEARCH_COURSE_ASSIGNATIONS,\r\n    payload\r\n});\r\n\r\nexport const SEARCH_SINGLE_ASSIGNATION = 'SEARCH_SINGLE_ASSIGNATION';\r\nexport const searchSingleAssignationAction = (payload: { courseId: string, assignId: string, filter: string }): Action => ({\r\n    type: SEARCH_SINGLE_ASSIGNATION,\r\n    payload\r\n});\r\n\r\nexport const SEARCH_SINGLE_ASSIGNATION_SUCCESS = 'SEARCH_SINGLE_ASSIGNATION_SUCCESS';\r\nexport const searchSingleAssignationSuccessAction = (payload: Assignation): Action => ({\r\n    type: SEARCH_SINGLE_ASSIGNATION_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const DELETE_ASSIGNATION = 'DELETE_ASSIGNATION';\r\nexport const deleteAssignationAction = (payload: string): Action => ({\r\n    type: DELETE_ASSIGNATION,\r\n    payload\r\n});\r\n\r\nexport const DELETE_ASSIGNATION_SUCCESS = 'DELETE_ASSIGNATION_SUCCESS';\r\nexport const deleteAssignationSuccessAction = (payload: string): Action => ({\r\n    type: DELETE_ASSIGNATION_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const SEARCH_COURSE_ASSIGNATIONS_SUCCESS = 'SEARCH_COURSE_ASSIGNATIONS_SUCCESS';\r\nexport const searchCourseAssignationsSuccessAction = (payload: Assignation[]): Action => ({\r\n    type: SEARCH_COURSE_ASSIGNATIONS_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const CREATE_COURSE_ASSIGNATION = 'CREATE_COURSE_ASSIGNATION';\r\nexport const createCourseAssignationAction = (payload: Assignation): Action => ({\r\n    type: CREATE_COURSE_ASSIGNATION,\r\n    payload\r\n});\r\n\r\nexport const CREATE_COURSE_ASSIGNATION_SUCCESS = 'CREATE_COURSE_ASSIGNATION_SUCCESS';\r\nexport const createCourseAssignationSuccessAction = (payload: Assignation): Action => ({\r\n    type: CREATE_COURSE_ASSIGNATION_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const CREATE_DELIVERED_ASSIGNATION = 'CREATE_DELIVERED_ASSIGNATION';\r\nexport const createDeliveredAssignationAction = (payload: DeliveredAssignation): Action => ({\r\n    type: CREATE_DELIVERED_ASSIGNATION,\r\n    payload\r\n});\r\n\r\nexport const CREATE_DELIVERED_ASSIGNATION_SUCCESS = 'CREATE_DELIVERED_ASSIGNATION_SUCCESS';\r\nexport const createDeliveredAssignationSuccessAction = (payload: DeliveredAssignation): Action => ({\r\n    type: CREATE_DELIVERED_ASSIGNATION_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const DELETE_DELIVERED_ASSIGNATION = 'DELETE_DELIVERED_ASSIGNATION';\r\nexport const deleteDeliveredAssignationAction = (payload: DeliveredAssignation): Action => ({\r\n    type: DELETE_DELIVERED_ASSIGNATION,\r\n    payload\r\n});\r\n\r\nexport const DELETE_DELIVERED_ASSIGNATION_SUCCESS = 'DELETE_DELIVERED_ASSIGNATION_SUCCESS';\r\nexport const deleteDeliveredAssignationSuccessAction = (payload: DeliveredAssignation): Action => ({\r\n    type: DELETE_DELIVERED_ASSIGNATION_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const CREATE_COURSE_GRADE = 'CREATE_COURSE_GRADE';\r\nexport const createCourseGradeAction = (payload: CourseGrade): Action => ({\r\n    type: CREATE_COURSE_GRADE,\r\n    payload\r\n});\r\n\r\nexport const CREATE_COURSE_GRADE_SUCCESS = 'CREATE_COURSE_GRADE_SUCCESS';\r\nexport const createCourseGradeSuccessAction = (payload: CourseGrade): Action => ({\r\n    type: CREATE_COURSE_GRADE_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const GET_COURSE_GRADES = 'GET_COURSE_GRADES';\r\nexport const getCourseGradesAction = (payload: string): Action => ({\r\n    type: GET_COURSE_GRADES,\r\n    payload\r\n});\r\n\r\nexport const GET_COURSE_GRADES_SUCCESS = 'GET_COURSE_GRADES_SUCCESS';\r\nexport const getCourseGradesSuccessAction = (payload: CourseGrade[]): Action => ({\r\n    type: GET_COURSE_GRADES_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const GET_ALL_PROFESSOR_GRADES = 'GET_ALL_PROFESSOR_GRADES';\r\nexport const getAllProfessorGradesAction = (payload: string): Action => ({\r\n    type: GET_ALL_PROFESSOR_GRADES,\r\n    payload\r\n});\r\n\r\nexport const GET_ALL_PROFESSOR_GRADES_SUCCESS = 'GET_ALL_PROFESSOR_GRADES_SUCCESS';\r\nexport const getAllProfessorGradesSuccessAction = (payload: ProfessorGrade[]): Action => ({\r\n    payload: payload,\r\n    type: GET_ALL_PROFESSOR_GRADES_SUCCESS\r\n})\r\n\r\nexport const UPDATE_ALUMN_GRADE = 'UPDATE_ALUMN_GRADE';\r\nexport const updateAlumnGradeAction = (payload: AlumnGrade): Action => ({\r\n    type: UPDATE_ALUMN_GRADE,\r\n    payload\r\n});\r\n\r\nexport const UPDATE_ALUMN_GRADE_SUCCESS = 'UPDATE_ALUMN_GRADE_SUCCESS';\r\nexport const updateAlumnGradeSuccessAction = (payload: AlumnGrade): Action => ({\r\n    type: UPDATE_ALUMN_GRADE_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const CREATE_ALUMN_GRADE = 'CREATE_ALUMN_GRADE';\r\nexport const createAlumnGradeAction = (payload: AlumnGrade): Action => ({\r\n    type: CREATE_ALUMN_GRADE,\r\n    payload\r\n});\r\n\r\nexport const CREATE_ALUMN_GRADE_SUCCESS = 'CREATE_ALUMN_GRADE_SUCCESS';\r\nexport const createAlumnGradeSuccessAction = (payload: AlumnGrade): Action => ({\r\n    type: CREATE_ALUMN_GRADE_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const GET_ALUMN_GRADES = 'GET_ALUMN_GRADES';\r\nexport const getAlumnGradesAction = (payload: { course: string, alumn: string, filter: string }): Action => ({\r\n    type: GET_ALUMN_GRADES,\r\n    payload\r\n});\r\n\r\nexport const GET_ALUMN_GRADES_SUCCESS = 'GET_ALUMN_GRADES_SUCCESS';\r\nexport const getAlumnGradesSuccessAction = (payload: { course: string, alumn: string }): Action => ({\r\n    type: GET_ALUMN_GRADES_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const GET_COURSE_ATTACHMENTS = 'GET_COURSE_ATTACHMENTS';\r\nexport const getAllCourseAttachmentsAction = (payload: string): Action => ({\r\n    type: GET_COURSE_ATTACHMENTS,\r\n    payload\r\n});\r\n\r\nexport const GET_COURSE_ATTACHMENTS_SUCCESS = 'GET_COURSE_ATTACHMENTS_SUCCESS';\r\nexport const getAllCourseAttachmentsSuccessAction = (payload: Attachment[]): Action => ({\r\n    type: GET_COURSE_ATTACHMENTS_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const CREATE_COURSE_FEED = 'CREATE_COURSE_FEED';\r\nexport const createCourseFeedAction = (payload: { course: string, content: string }): Action => ({\r\n    type: CREATE_COURSE_FEED,\r\n    payload\r\n});\r\n\r\nexport const CREATE_COURSE_FEED_SUCCESS = 'CREATE_COURSE_FEED_SUCCESS';\r\nexport const createCourseFeedSuccessAction = (payload: CourseFeed[]): Action => ({\r\n    type: CREATE_COURSE_FEED_SUCCESS,\r\n    payload\r\n});\r\n\r\nexport const COURSE_FAILED = 'COURSE_FAILED';\r\nexport const courseFailedAction = (error: ApiError): Action => ({\r\n    type: COURSE_FAILED,\r\n    payload: error\r\n});\r\n\r\n\r\n","import { Attachment } from \"../../core/models/Attachment.model\";\r\nimport { Action } from \"./action.model\";\r\n\r\nexport const SET_REDIRECT = 'SET_REDIRECT';\r\nexport const setRedirectAction = (url: string): Action => ({\r\n    type: SET_REDIRECT,\r\n    payload: url\r\n});\r\n\r\nexport const DELETE_ATTACHMENT = 'DELETE_ATTACHMENT';\r\nexport const deleteAttachmentAction = (payload: Attachment): Action => ({\r\n    type: DELETE_ATTACHMENT,\r\n    payload\r\n});\r\n\r\n\r\n","import { ApiError } from '../../core/models/ApiError.model';\r\nimport { DeliveredExam } from '../../core/models/DeliveredExam.model';\r\nimport { Exam, ExamQuestion } from '../../core/models/Exam.model';\r\nimport { Action } from './action.model';\r\n\r\nexport const CREATE_EXAM = 'CREATE_EXAM';\r\nexport const createExamAction = (payload: Exam): Action => ({\r\n  type: CREATE_EXAM,\r\n  payload,\r\n});\r\n\r\nexport const CREATE_EXAM_SUCCESS = 'CREATE_EXAM_SUCCESS';\r\nexport const createExamSuccessAction = (payload: Exam): Action => ({\r\n  type: CREATE_EXAM_SUCCESS,\r\n  payload,\r\n});\r\n\r\nexport const GET_EXAMS = 'GET_EXAMS';\r\nexport const getExamsAction = (payload?: string): Action => ({\r\n  type: GET_EXAMS,\r\n  payload,\r\n});\r\n\r\nexport const GET_EXAMS_SUCCESS = 'GET_EXAMS_SUCCESS';\r\nexport const getExamsSuccessAction = (payload: Exam[]): Action => ({\r\n  type: GET_EXAMS_SUCCESS,\r\n  payload,\r\n});\r\n\r\nexport const SET_CURRENT_EXAM = 'SET_CURRENT_EXAM';\r\nexport const setCurrentExamAction = (payload: Exam): Action => ({\r\n  type: SET_CURRENT_EXAM,\r\n  payload,\r\n});\r\n\r\nexport const DELETE_EXAM = 'DELETE_EXAM';\r\nexport const deleteExamAction = (payload: string): Action => ({\r\n  type: DELETE_EXAM,\r\n  payload,\r\n});\r\n\r\nexport const DELETE_EXAM_SUCCESS = 'DELETE_EXAM_SUCCESS';\r\nexport const deleteExamSuccessAction = (payload: string): Action => ({\r\n  type: DELETE_EXAM_SUCCESS,\r\n  payload,\r\n});\r\n\r\nexport const ADD_EXAM_QUESTION = 'ADD_EXAM_QUESTION';\r\nexport const addExamQuestion = (payload: ExamQuestion): Action => ({\r\n  type: ADD_EXAM_QUESTION,\r\n  payload,\r\n});\r\n\r\nexport const ADD_EXAM_QUESTION_SUCCESS = 'ADD_EXAM_QUESTION_SUCCESS';\r\nexport const addExamQuestionSuccess = (payload: ExamQuestion): Action => ({\r\n  type: ADD_EXAM_QUESTION_SUCCESS,\r\n  payload,\r\n});\r\n\r\nexport const CREATE_DELIVERED_EXAM = 'CREATE_DELIVERED_EXAM';\r\nexport const createDeliveredExamAction = (payload: DeliveredExam): Action => ({\r\n  type: CREATE_DELIVERED_EXAM,\r\n  payload,\r\n});\r\n\r\nexport const CREATE_DELIVERED_EXAM_SUCCESS = 'CREATE_DELIVERED_EXAM_SUCCESS';\r\nexport const createDeliveredExamSuccessAction = (\r\n  payload: DeliveredExam\r\n): Action => ({\r\n  type: CREATE_DELIVERED_EXAM_SUCCESS,\r\n  payload,\r\n});\r\n\r\nexport const EXAM_FAIL = 'EXAM_FAIL';\r\nexport const examFailAction = (payload: ApiError): Action => ({\r\n  type: EXAM_FAIL,\r\n  payload,\r\n});\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { Container, Footer, Pagination } from 'rsuite';\r\nimport { AppState } from '../../../store/reducers';\r\n\r\nexport default () => {\r\n  const paging = useSelector((state: AppState) => state.posts.paging);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  return (\r\n    <Footer>\r\n      <Container>\r\n        <Pagination\r\n          activePage={paging?.page}\r\n          first={paging?.page !== 1}\r\n          next={paging?.hasNextPage}\r\n          prev={paging?.hasPrevPage}\r\n          last={paging?.page !== paging?.totalPages}\r\n          size='lg'\r\n          pages={paging?.totalPages}\r\n          onSelect={(page) => {\r\n            let filter = new URLSearchParams(location.search).get('filter');\r\n            history.push(`/app/posts?page=${page}&filter=${filter}`);\r\n          }}\r\n        ></Pagination>\r\n      </Container>\r\n    </Footer>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  ButtonToolbar,\r\n  Container,\r\n  FlexboxGrid,\r\n  Header,\r\n} from 'rsuite';\r\n\r\ninterface PostListHeaderProps {}\r\n\r\nexport default () => {\r\n  const history = useHistory();\r\n\r\n  const onSelectFilter = (filter: string) => {\r\n    history.push({\r\n      pathname: '/app/posts',\r\n      search: '?page=1&filter=' + filter\r\n    })\r\n  };\r\n\r\n  return (\r\n    <Header>\r\n      <Container>\r\n        <FlexboxGrid align='middle'>\r\n          <FlexboxGrid.Item colspan={20} order={1}>\r\n            <h1>Todas las publicaciones</h1>\r\n          </FlexboxGrid.Item>\r\n          <FlexboxGrid.Item colspan={4} order={2}>\r\n            <Button\r\n              appearance='primary'\r\n              onClick={() => history.push('/app/posts/create')}\r\n            >\r\n              Crear Post\r\n            </Button>\r\n          </FlexboxGrid.Item>\r\n          <FlexboxGrid.Item colspan={8} order={4} style={{ marginTop: '10px' }}>\r\n            <ButtonToolbar>\r\n              <ButtonGroup>\r\n                <Button\r\n                  appearance='ghost'\r\n                  onClick={() => onSelectFilter('new')}\r\n                >\r\n                  Nuevos\r\n                </Button>\r\n                <Button\r\n                  appearance='ghost'\r\n                  onClick={() => onSelectFilter('active')}\r\n                >\r\n                  Activos\r\n                </Button>\r\n                <Button\r\n                  appearance='ghost'\r\n                  onClick={() => onSelectFilter('rated')}\r\n                >\r\n                  Mas votados\r\n                </Button>\r\n                <Button\r\n                  appearance='ghost'\r\n                  onClick={() => onSelectFilter('career')}\r\n                >\r\n                  Carrera\r\n                </Button>\r\n              </ButtonGroup>\r\n            </ButtonToolbar>\r\n          </FlexboxGrid.Item>\r\n        </FlexboxGrid>\r\n      </Container>\r\n    </Header>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Avatar, Badge, FlexboxGrid, Tag, TagGroup } from 'rsuite';\r\nimport { Post } from '../../../core/models/Post.model';\r\nimport moment from 'moment';\r\nimport './PostSummary.css'\r\n\r\ninterface PostSummaryProps {\r\n  post: Post;\r\n}\r\n\r\nexport default ({ post }: PostSummaryProps) => {\r\n  return (\r\n    <FlexboxGrid style={{ paddingLeft: '20px' }}>\r\n      <FlexboxGrid.Item\r\n        colspan={2}\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <h5>{post.votes}</h5>\r\n        <p>Votos</p>\r\n        <h5>{post.comments}</h5>\r\n        <p>Comentarios</p>\r\n        <br></br>\r\n        <p>Visto {post.viewed}</p>\r\n      </FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={18} style={{ padding: '10px' }}>\r\n        <Link to={'/app/posts/' + post._id}>\r\n          <h5>{post.title}</h5>\r\n        </Link>\r\n        <br />\r\n        <p dangerouslySetInnerHTML={{ __html: post.content}}></p>\r\n        <br />\r\n        <TagGroup>\r\n          {post.tags.map((tag, index) => (\r\n            <Tag key={index} color='blue'>{tag}</Tag>\r\n          ))}\r\n        </TagGroup>\r\n      </FlexboxGrid.Item>\r\n      <FlexboxGrid.Item\r\n        colspan={4}\r\n        style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center' }}\r\n      >\r\n        <Avatar src={post.owner?.profileImg} />\r\n\r\n        <span>\r\n          {post.owner?.name} - <Badge content={post.owner?.rating} />\r\n        </span>\r\n        <span>{moment(post.createdDate).fromNow()}</span>\r\n      </FlexboxGrid.Item>\r\n    </FlexboxGrid>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Container, Content, Divider, List, Loader } from 'rsuite';\r\nimport { postActions } from '../../store/actions';\r\nimport { AppState } from '../../store/reducers';\r\nimport PostListFooter from './PostListFooter/PostListFooter';\r\nimport PostListHeader from './PostListHeader/PostListHeader';\r\nimport PostSummary from './PostSummary/PostSummary';\r\n\r\ninterface PostListProps {}\r\n\r\nexport default (props: RouteComponentProps<PostListProps>) => {\r\n  const posts = useSelector((state: AppState) => state.posts.posts);\r\n  const loading = useSelector((state: AppState) => state.posts.loading);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(props.location.search);\r\n    let page = params.get('page');\r\n    let filter = params.get('filter');\r\n    if (!page) {\r\n      props.history.push({\r\n        pathname: props.location.pathname,\r\n        search: '?page=1&filter=new',\r\n      });\r\n    } else {\r\n      dispatch(\r\n        postActions.searchPostsAction({\r\n          page: parseInt(page),\r\n          filter: filter as string,\r\n        })\r\n      );\r\n    }\r\n  }, [dispatch, props.location.search, props.location.pathname, props.history]);\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <PostListHeader />\r\n        <Divider />\r\n        <Content>\r\n          {loading ? (\r\n            <Loader size='lg' content='Cargando...' />\r\n          ) : (\r\n            <List hover>\r\n              {posts.map((item, index) => (\r\n                <List.Item key={item['_id']} index={index}>\r\n                  <PostSummary post={item} />\r\n                </List.Item>\r\n              ))}\r\n            </List>\r\n          )}\r\n        </Content>\r\n        <Divider></Divider>\r\n        <PostListFooter></PostListFooter>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Icon, IconButton, Input, Tag, TagGroup } from 'rsuite';\r\n\r\ninterface DynamicTagProps {\r\n    onChangeTags: (tags: string[]) => void;\r\n    tags: string[]\r\n}\r\n\r\nexport default class extends React.Component<DynamicTagProps> {\r\n  state = {\r\n    typing: false,\r\n    inputValue: '',\r\n    tags: [],\r\n  };\r\n  input: any = null;\r\n  constructor(props: DynamicTagProps) {\r\n    super(props);\r\n\r\n    this.handleButtonClick = this.handleButtonClick.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleInputConfirm = this.handleInputConfirm.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      tags: this.props.tags\r\n    });\r\n  }\r\n\r\n  handleButtonClick() {\r\n    this.setState(\r\n      {\r\n        typing: true,\r\n      },\r\n      () => {\r\n        this.input.focus();\r\n      }\r\n    );\r\n  }\r\n  handleInputChange(inputValue: string) {\r\n    this.setState({ inputValue });\r\n  }\r\n  handleInputConfirm() {\r\n    const { inputValue, tags } = this.state;\r\n    const nextTags = inputValue ? [...tags, inputValue] : tags;\r\n    this.setState({\r\n      tags: nextTags,\r\n      typing: false,\r\n      inputValue: '',\r\n    });\r\n    this.props.onChangeTags(nextTags);\r\n  }\r\n  handleTagRemove(tag: string) {\r\n    const { tags } = this.state;\r\n    const nextTags = tags.filter((item) => item !== tag);\r\n    this.setState({\r\n      tags: nextTags,\r\n    });\r\n    this.props.onChangeTags(nextTags);\r\n  }\r\n  renderInput() {\r\n    const { typing, inputValue } = this.state;\r\n\r\n    if (typing) {\r\n      return (\r\n        <Input\r\n          className='tag-input'\r\n          inputRef={(ref) => {\r\n            this.input = ref;\r\n          }}\r\n          size='xs'\r\n          style={{ width: 70 }}\r\n          value={inputValue}\r\n          onChange={this.handleInputChange}\r\n          onBlur={this.handleInputConfirm}\r\n          onPressEnter={this.handleInputConfirm}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <IconButton\r\n        className='tag-add-btn'\r\n        onClick={this.handleButtonClick}\r\n        icon={<Icon icon='plus' />}\r\n        appearance='ghost'\r\n        size='xs'\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    const { tags } = this.state;\r\n    return (\r\n      <TagGroup style={{ margin: '0 0' }}>\r\n        {tags.map((item, index) => (\r\n          <Tag\r\n            key={index}\r\n            closable\r\n            onClose={() => {\r\n              this.handleTagRemove(item);\r\n            }}\r\n          >\r\n            {item}\r\n          </Tag>\r\n        ))}\r\n        {this.renderInput()}\r\n      </TagGroup>\r\n    );\r\n  }\r\n}\r\n","export default {\r\n    tinyApiKey: 'r7lhlluswsk3hs9y4mrbwhg6taz9n6hrbk5ol14fuj9uzwaz',\r\n    // API_BASE: 'http://localhost:3000/api',\r\n    API_BASE: '/api'\r\n};","import React from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport environment from '../../../core/environment';\r\nimport { Post } from '../../../core/models/Post.model';\r\n\r\ninterface PostEditorProps {\r\n  onEditorChange: (content: string) => void;\r\n  post?: Post | null;\r\n}\r\n\r\nexport default (props: PostEditorProps) => {\r\n  return (\r\n    <Editor\r\n      apiKey={environment.tinyApiKey}\r\n      initialValue={props.post ? props.post.content : '<p>This is the initial content of the editor</p>'}\r\n      init={{\r\n        height: 300,\r\n        menubar: false,\r\n        plugins: [\r\n          'advlist autolink lists link charmap print preview anchor',\r\n          'searchreplace visualblocks code fullscreen',\r\n          'insertdatetime media table paste code codesample help wordcount',\r\n        ],\r\n        toolbar:\r\n          `undo redo | formatselect | bold italic backcolor codesample | \\\r\n              alignleft aligncenter alignright alignjustify | \\\r\n              bullist numlist outdent indent | removeformat | preview help`,\r\n      }}\r\n      onEditorChange={props.onEditorChange}\r\n    />\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Button, Container, ControlLabel, Form, Schema } from 'rsuite';\r\nimport DynamicTag from '../../core/components/controls/DynamicTag';\r\nimport Input from '../../core/components/controls/Input';\r\nimport { postActions } from '../../store/actions';\r\nimport { AppState } from '../../store/reducers';\r\nimport PostEditor from './PostEditor/PostEditor';\r\n\r\nconst { StringType, ArrayType } = Schema.Types;\r\nconst model = Schema.Model({\r\n  title: StringType('Por favor ingrese un titulo valido.').isRequiredOrEmpty(\r\n    'Este campo es obligatorio.'\r\n  ),\r\n  content: StringType('Por favor ingrese una un contenido valido.')\r\n    .isRequiredOrEmpty('Este campo es obligatorio.')\r\n    .minLength(6),\r\n  tags: ArrayType().of(StringType()).minLength(3),\r\n});\r\n\r\nexport default () => {\r\n  let form = useRef<any>(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const loading = useSelector((state: AppState) => state.posts.loading);\r\n  const currentPost = useSelector((state: AppState) => state.posts.currentPost);\r\n  const { id } = useParams() as any;\r\n\r\n  const [formValue, setFormValue] = useState({\r\n    title: '',\r\n    content: '',\r\n    tags: [] as string[],\r\n  });\r\n\r\n  const onPostSubmit = useCallback(() => {\r\n    if (form.current.check()) {\r\n      if (id) {\r\n        dispatch(postActions.updatePostAction({\r\n          ...currentPost,\r\n          ...formValue\r\n        }));\r\n      } else {\r\n        dispatch(postActions.createPostAction(formValue));\r\n      }\r\n    }\r\n  }, [dispatch, currentPost, formValue, id]);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(postActions.searchPostByIdAction(id));\r\n    }\r\n  }, [dispatch, id]);\r\n\r\n  useEffect(() => {\r\n    if (currentPost) {\r\n      setFormValue(currentPost as any);\r\n    }\r\n  }, [currentPost])\r\n\r\n  if (id && !currentPost) {\r\n    return <></>;\r\n  } \r\n\r\n  return (\r\n    <Container>\r\n      <Form\r\n        ref={form}\r\n        fluid\r\n        onChange={(formValue) => setFormValue(formValue as any)}\r\n        formValue={formValue}\r\n        model={model}\r\n      >\r\n        <Input label='Titulo' name='title' />\r\n\r\n        <PostEditor\r\n          post={currentPost}\r\n          onEditorChange={(content: string) =>\r\n            setFormValue({ ...formValue, content })\r\n          }\r\n        />\r\n        <br></br>\r\n        <ControlLabel style={{ marginTop: '20px' }}>\r\n          Etiquetas (Minimo 3*)\r\n        </ControlLabel>\r\n        <br></br>\r\n        <DynamicTag tags={formValue.tags} onChangeTags={(tags) => setFormValue({ ...formValue, tags })} />\r\n        <br></br>\r\n        <Button\r\n          loading={loading}\r\n          disabled={loading}\r\n          appearance='primary'\r\n          onClick={onPostSubmit}\r\n        >\r\n          Crear Post\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useCallback, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Container, Form, Button, Schema } from 'rsuite';\r\nimport { postActions } from '../../../store/actions';\r\nimport { AppState } from '../../../store/reducers';\r\nimport PostEditor from '../../CreatePostPage/PostEditor/PostEditor';\r\n\r\nconst { StringType } = Schema.Types;\r\nconst model = Schema.Model({\r\n  content: StringType('Por favor ingrese una un contenido valido.')\r\n    .isRequiredOrEmpty('Este campo es obligatorio.')\r\n    .minLength(6),\r\n});\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const post = useSelector((state: AppState) => state.posts.currentPost);\r\n  const user = useSelector((state: AppState) => state.auth.currentUser);\r\n  const [formValue, setFormValue] = useState({\r\n    content: '',\r\n  });\r\n  let form = useRef<any>(null);\r\n\r\n  const sendComment = useCallback(() => {\r\n    if (form.current.check() && post) {\r\n      dispatch(\r\n        postActions.createCommentAction({\r\n          ...formValue,\r\n          postId: post?._id as string,\r\n          votes: 0,\r\n          createdDate: new Date(),\r\n          owner: user ?? undefined,\r\n        })\r\n      );\r\n    }\r\n  }, [formValue, dispatch, user, post]);\r\n\r\n  return (\r\n    <Container>\r\n      <h4>Agregar Comentario</h4> \r\n      <br />\r\n      <Form\r\n        ref={form}\r\n        fluid\r\n        onChange={(formValue) => setFormValue(formValue as any)}\r\n        formValue={formValue}\r\n        model={model}\r\n      >\r\n        <PostEditor\r\n          onEditorChange={(content: string) =>\r\n            setFormValue({ ...formValue, content })\r\n          }\r\n        />\r\n        <br></br>\r\n        <Button appearance='primary' onClick={sendComment}>\r\n          Enviar comentario\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n","import moment from 'moment';\r\nimport React, { useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Avatar, Badge, Container, Divider, FlexboxGrid, Icon } from 'rsuite';\r\nimport { Comment } from '../../../../core/models/Comment.model';\r\nimport { postActions } from '../../../../store/actions';\r\n\r\ninterface PostCommentProps {\r\n  comment: Comment;\r\n}\r\n\r\nexport default ({ comment }: PostCommentProps) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const upvote = useCallback(() => {\r\n    dispatch(postActions.upvoteCommentAction(comment._id as string));\r\n  }, [comment, dispatch]);\r\n\r\n  const downvote = useCallback(() => {\r\n    dispatch(postActions.downvoteCommentAction(comment._id as string));\r\n  }, [comment, dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      <FlexboxGrid>\r\n        <FlexboxGrid.Item\r\n          colspan={2}\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <Icon\r\n            icon='caret-up'\r\n            style={{\r\n              fontSize: '40px',\r\n              cursor: 'pointer',\r\n              color: comment?.voted ? 'cyan' : '',\r\n            }}\r\n            onClick={upvote}\r\n          ></Icon>\r\n          <h2>{comment?.votes}</h2>\r\n          <Icon\r\n            icon='caret-down'\r\n            style={{ fontSize: '40px', cursor: 'pointer' }}\r\n            onClick={downvote}\r\n          ></Icon>\r\n        </FlexboxGrid.Item>\r\n        <FlexboxGrid.Item colspan={18}>\r\n          <div\r\n            style={{ paddingTop: '20px' }}\r\n            dangerouslySetInnerHTML={{\r\n              __html: comment?.content ? comment?.content : '',\r\n            }}\r\n          ></div>\r\n        </FlexboxGrid.Item>\r\n        <FlexboxGrid.Item\r\n          colspan={4}\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          <Avatar src={comment.owner?.profileImg} />\r\n\r\n          <span>\r\n            {comment.owner?.name} - <Badge content={comment.owner?.rating} />\r\n          </span>\r\n          <span>{moment(comment.createdDate).fromNow()}</span>\r\n        </FlexboxGrid.Item>\r\n      </FlexboxGrid>\r\n      <Divider></Divider>\r\n    </Container>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Container } from 'rsuite';\r\nimport { AppState } from '../../../store/reducers';\r\nimport PostComment from './PostComment/PostComment';\r\n\r\nexport default () => {\r\n  const comments = useSelector(\r\n    (state: AppState) => state.posts.currentPostComments\r\n  );\r\n  return (\r\n    <>\r\n      {comments.length >= 1 ? (\r\n        <Container>\r\n          <h4>Comentarios</h4>\r\n          <br />\r\n          {comments.map((com) => (\r\n            <PostComment key={com._id} comment={com}></PostComment>\r\n          ))}\r\n        </Container>\r\n      ) : <span>Nadie ha comentado aun, sé el primero en hacerlo!</span>}\r\n    </>\r\n  );\r\n};\r\n","import React, { PropsWithChildren, useImperativeHandle, useState } from 'react';\r\nimport { Button, Modal } from 'rsuite';\r\n\r\ninterface ConfirmModalProps {\r\n  onConfirm: () => void;\r\n  onCancel?: () => void;\r\n}\r\n\r\ninterface ConfirmModalMembers {\r\n    open: () => any;\r\n}\r\n\r\nexport default React.forwardRef<ConfirmModalMembers, PropsWithChildren<ConfirmModalProps>>((props, ref) => {\r\n  const [show, setShow] = useState(false);\r\n  useImperativeHandle(ref, () => ({\r\n    open: () => setShow(true),\r\n  }));\r\n  return (\r\n    <Modal\r\n      backdrop='static'\r\n      show={show}\r\n      onHide={() => setShow(false)}\r\n      size='xs'\r\n    >\r\n      <Modal.Body>{props.children}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onConfirm} appearance='primary'>\r\n          Confirmar\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            setShow(false);\r\n            props.onCancel && props.onCancel();\r\n          }}\r\n          appearance='subtle'\r\n        >\r\n          Cancelar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n});\r\n","import React, { ElementRef, useCallback, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  ButtonToolbar,\r\n  Container,\r\n  FlexboxGrid,\r\n  Icon,\r\n} from 'rsuite';\r\nimport ConfirmModal from '../../../core/components/ConfirmModal';\r\nimport { Post } from '../../../core/models/Post.model';\r\nimport { postActions } from '../../../store/actions';\r\nimport { AppState } from '../../../store/reducers';\r\n\r\ninterface ViewPostHeaderProps {\r\n  post: Post | null;\r\n}\r\n\r\nexport default ({ post }: ViewPostHeaderProps) => {\r\n  const currentUser = useSelector((state: AppState) => state.auth.currentUser);\r\n  const modal = useRef<ElementRef<typeof ConfirmModal>>(null);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const deletePost = useCallback(() => {\r\n    dispatch(postActions.deletePostAction(post?._id as string));\r\n  }, [post, dispatch]);\r\n\r\n  return (\r\n    <Container style={{ maxHeight: 200 }}>\r\n      <FlexboxGrid align='middle'>\r\n        <FlexboxGrid.Item colspan={20} order={1}>\r\n          <h1>{post?.title}</h1>\r\n        </FlexboxGrid.Item>\r\n        <FlexboxGrid.Item colspan={20}>\r\n          <ButtonToolbar>\r\n            <ButtonGroup>\r\n              {currentUser?._id === post?.owner?._id ? (\r\n                <>\r\n                  <Button\r\n                    appearance='subtle'\r\n                    onClick={() => history.push(location.pathname + '/edit')}\r\n                  >\r\n                    Editar\r\n                  </Button>\r\n                  <Button\r\n                    appearance='subtle'\r\n                    color='red'\r\n                    onClick={() => modal.current?.open()}\r\n                  >\r\n                    Borrar\r\n                  </Button>\r\n                </>\r\n              ) : null}\r\n              <Button appearance='subtle'>Compartir</Button>\r\n            </ButtonGroup>\r\n          </ButtonToolbar>\r\n        </FlexboxGrid.Item>\r\n      </FlexboxGrid>\r\n      <ConfirmModal ref={modal} onConfirm={deletePost}>\r\n        <Icon\r\n          icon='remind'\r\n          style={{\r\n            color: '#ffb300',\r\n            fontSize: 24,\r\n          }}\r\n        />\r\n        {'  '}\r\n        <p>\r\n          Una vez presione confirmar este post sera eliminado incluyendo sus\r\n          comentarios y todo lo relacionado a el.\r\n        </p>\r\n        <br />\r\n        <strong>¿Esta seguro que desea hacerlo?</strong>\r\n      </ConfirmModal>\r\n    </Container>\r\n  );\r\n};\r\n","import moment from 'moment';\r\nimport React, { useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  Avatar,\r\n  Badge,\r\n  Container,\r\n  Divider,\r\n  FlexboxGrid,\r\n  Icon,\r\n  Loader,\r\n} from 'rsuite';\r\nimport FlexboxGridItem from 'rsuite/lib/FlexboxGrid/FlexboxGridItem';\r\nimport { postActions } from '../../store/actions';\r\nimport { AppState } from '../../store/reducers';\r\nimport AddComment from './AddComment/AddComment';\r\nimport PostCommentList from './PostCommentsList/PostCommentList';\r\nimport ViewPostHeader from './ViewPostHeader/ViewPostHeader';\r\n\r\nexport default () => {\r\n  const { id } = useParams() as any;\r\n  const dispatch = useDispatch();\r\n  const { loading, currentPost: post } = useSelector(\r\n    (state: AppState) => state.posts\r\n  );\r\n  useEffect(() => {\r\n    dispatch(postActions.searchPostByIdAction(id));\r\n    dispatch(postActions.searchCommentsAction(id));\r\n  }, [id, dispatch]);\r\n\r\n  const upvote = useCallback(() => {\r\n    dispatch(postActions.upvotePostAction(id));\r\n  }, [id, dispatch]);\r\n\r\n  const downvote = useCallback(() => {\r\n    dispatch(postActions.downvotePostAction(id));\r\n  }, [id, dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      {loading ? (\r\n        <Loader content='Cargando Post...'></Loader>\r\n      ) : (\r\n        <>\r\n          <ViewPostHeader post={post}></ViewPostHeader>\r\n          <Divider></Divider>\r\n          <FlexboxGrid>\r\n            <FlexboxGridItem\r\n              colspan={2}\r\n              style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <Icon\r\n                icon='caret-up'\r\n                style={{\r\n                  fontSize: '40px',\r\n                  cursor: 'pointer',\r\n                  color: post?.voted ? 'cyan' : '',\r\n                }}\r\n                onClick={upvote}\r\n              ></Icon>\r\n              <h2>{post?.votes}</h2>\r\n              <Icon\r\n                icon='caret-down'\r\n                style={{ fontSize: '40px', cursor: 'pointer' }}\r\n                onClick={downvote}\r\n              ></Icon>\r\n            </FlexboxGridItem>\r\n            <FlexboxGridItem colspan={18}>\r\n              <div\r\n                dangerouslySetInnerHTML={{\r\n                  __html: post?.content ? post?.content : '',\r\n                }}\r\n              ></div>\r\n            </FlexboxGridItem>\r\n            <FlexboxGrid.Item\r\n              colspan={4}\r\n              style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                justifyContent: 'center',\r\n              }}\r\n            >\r\n              <Avatar src={post?.owner?.profileImg} />\r\n\r\n              <span>\r\n                {post?.owner?.name} - <Badge content={post?.owner?.rating} />\r\n              </span>\r\n              <span>{moment(post?.createdDate).fromNow()}</span>\r\n            </FlexboxGrid.Item>\r\n          </FlexboxGrid>\r\n          <Divider></Divider>\r\n          <PostCommentList></PostCommentList>\r\n          <AddComment></AddComment>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\nimport { Panel, Tooltip, Whisper } from 'rsuite';\r\nimport { Course } from '../../../core/models/Course.model';\r\nimport { User } from '../../../core/models/User.model';\r\n\r\nimport './CourseSummary.css';\r\n\r\nexport interface CourseSummaryProps {\r\n  course: Course;\r\n}\r\n\r\nexport default ({ course }: CourseSummaryProps) => {\r\n  const match = useRouteMatch();\r\n  const history = useHistory();\r\n  return (\r\n    <Whisper\r\n      placement='bottom'\r\n      trigger='hover'\r\n      speaker={<Tooltip>{course.name}</Tooltip>}\r\n    >\r\n      <Panel\r\n        onClick={() => history.push(match.path + '/' + course._id + '/feed')}\r\n        shaded\r\n        bordered\r\n        bodyFill\r\n        style={{ display: 'inline-block', width: 300, cursor: 'pointer' }}\r\n      >\r\n        <img\r\n          src={course.backgroundImg}\r\n          height='240'\r\n          alt='Course background'\r\n        ></img>\r\n        <Panel\r\n          header={\r\n            <h4\r\n              style={{\r\n                overflow: 'hidden',\r\n                textOverflow: 'ellipsis',\r\n                whiteSpace: 'nowrap',\r\n                width: 250,\r\n              }}\r\n            >\r\n              {course.name}\r\n            </h4>\r\n          }\r\n        >\r\n          <p>Profesor: {(course.professor as User)?.name} {(course.professor as User)?.lastname}</p>\r\n        </Panel>\r\n      </Panel>\r\n    </Whisper>\r\n  );\r\n};\r\n","import React, { ElementRef } from 'react';\r\nimport { useState } from 'react';\r\nimport { Icon, Loader, Uploader } from 'rsuite';\r\nimport { FileType } from 'rsuite/lib/Uploader';\r\n\r\nfunction previewFile(file: File, callback: (arg: any) => void) {\r\n  const reader = new FileReader();\r\n  reader.onloadend = () => {\r\n    callback(reader.result);\r\n  };\r\n  reader.readAsDataURL(file as File);\r\n}\r\n\r\nconst styles = {\r\n  width: 150,\r\n  height: 150,\r\n};\r\n\r\nexport type UploaderProps = {\r\n  img?: string;\r\n  uploaderRef?: ElementRef<typeof Uploader>;\r\n  action: string;\r\n  autoupload?: boolean;\r\n  onSuccessUpload: (response: Object, file: FileType) => void;\r\n  onErrorUpload?: (error: any) => void;\r\n};\r\n\r\nexport default ({\r\n  img,\r\n  action,\r\n  autoupload = true,\r\n  uploaderRef,\r\n  onSuccessUpload,\r\n  onErrorUpload,\r\n}: UploaderProps) => {\r\n  const [uploading, setUploading] = useState(false);\r\n  const [fileInfo, setFileInfo] = useState(img);\r\n\r\n  return (\r\n    <Uploader\r\n      fileListVisible={false}\r\n      multiple={false}\r\n      listType='picture'\r\n      accept='image/*'\r\n      action={action}\r\n      ref={uploaderRef}\r\n      autoUpload={autoupload}\r\n      withCredentials\r\n      onChange={(file) => {\r\n        previewFile(file[0].blobFile as File, (value) => {\r\n          setFileInfo(value);\r\n        });\r\n      }}\r\n      onUpload={() => {\r\n        setUploading(true);\r\n      }}\r\n      onSuccess={(response: Object, file: FileType) => {\r\n        setUploading(false);\r\n        onSuccessUpload(response, file);\r\n      }}\r\n      onError={(error) => {\r\n        setFileInfo(null);\r\n        setUploading(false);\r\n        onErrorUpload(error);\r\n      }}\r\n    >\r\n      <button style={styles}>\r\n        {uploading && <Loader backdrop center />}\r\n        {fileInfo ? (\r\n          <img src={fileInfo} width='100%' height='100%' alt='profile' />\r\n        ) : (\r\n          <Icon icon='camera' size='5x' />\r\n        )}\r\n      </button>\r\n    </Uploader>\r\n  );\r\n};\r\n","import React, { useCallback, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Alert, Button, Col, Form, Grid, Modal, Row, Schema } from 'rsuite';\r\nimport ImageUploader from '../../../core/components/controls/ImageUploader';\r\nimport Input from '../../../core/components/controls/Input';\r\nimport environment from '../../../core/environment';\r\nimport { createCourseAction } from '../../../store/actions/course.action';\r\nimport { AppState } from '../../../store/reducers';\r\nimport { getCurrentPeriod, getPeriods } from '../CoursesList';\r\n\r\nexport interface CreateCourseModalProps {\r\n  show: boolean;\r\n  close: () => void;\r\n}\r\n\r\nconst { StringType, NumberType } = Schema.Types;\r\nconst model = Schema.Model({\r\n  name: StringType('Por favor ingrese un nombre valido.')\r\n    .isRequired('Este campo es obligatorio.')\r\n    .maxLength(100),\r\n  period: StringType('Por favor ingrese un periodo valido.')\r\n    .isRequired('Este campo es obligatorio')\r\n    .maxLength(30),\r\n  capacity: NumberType('Por favor ingrese una capacidad valida.')\r\n    .isRequired('Este campo es obligatorio.')\r\n    .min(10),\r\n});\r\n\r\nexport default ({ show, close }: CreateCourseModalProps) => {\r\n  const initialValue = {\r\n    name: '',\r\n    period: getCurrentPeriod(),\r\n    capacity: 10,\r\n  };\r\n  const dispatch = useDispatch();\r\n  const [formValue, setFormValue] = useState(initialValue);\r\n  let form = useRef<any>(null);\r\n  let uploader = useRef<any>(null);\r\n  const currentUser = useSelector((state: AppState) => state.auth.currentUser);\r\n\r\n  const resetForm = useCallback(() => {\r\n    setFormValue(initialValue);\r\n  }, [initialValue]);\r\n\r\n  const handleUploadSuccess = useCallback(\r\n    ({ url }) => {\r\n      dispatch(\r\n        createCourseAction({\r\n          backgroundImg: url,\r\n          professor: currentUser._id,\r\n          alumns: [],\r\n          ...formValue,\r\n        })\r\n      );\r\n    },\r\n    [dispatch, formValue, currentUser]\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      backdrop={true}\r\n      show={show}\r\n      onHide={() => {\r\n        resetForm();\r\n        close();\r\n      }}\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title>Crear nuevo curso</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form\r\n          ref={form}\r\n          fluid\r\n          onChange={(formValue) => setFormValue(formValue as any)}\r\n          formValue={formValue}\r\n          model={model}\r\n        >\r\n          <Grid fluid>\r\n            <Row>\r\n              <Col mdOffset={8} md={8}>\r\n                <ImageUploader\r\n                  action={`${environment.API_BASE}/courses/uploadCourseImg?courseName=${encodeURIComponent(formValue.name)}`}\r\n                  onSuccessUpload={handleUploadSuccess}\r\n                  autoupload={false}\r\n                  uploaderRef={uploader}\r\n                  onErrorUpload={err => console.log(err)}\r\n                ></ImageUploader>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={24}>\r\n                <Input label='Nombre' name='name' />\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            <Row>\r\n              <Col md={12}>\r\n                <Input label='Periodo' name='period' type='select' data={getPeriods().map(x => ({ label: x, value: x }))} />\r\n              </Col>\r\n              <Col md={12}>\r\n                <Input label='Capacidad' name='capacity' type='number' min={10} max={50} />\r\n              </Col>\r\n            </Row>\r\n          </Grid>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={close} appearance='primary'>\r\n          Cerrar\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            if (!form.current.check()) return;\r\n            if (uploader.current.state.fileList.length === 0) {\r\n              Alert.error('Por favor seleccione una imagen para el curso.');\r\n            } else {\r\n              uploader.current.start();\r\n            }\r\n          }}\r\n          appearance='primary'\r\n        >\r\n          Guardar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Col, Container, Divider, Loader, Radio, RadioGroup, Row } from 'rsuite';\r\nimport { courseActions } from '../../store/actions';\r\nimport { AppState } from '../../store/reducers';\r\nimport CourseSummary from './CourseSummary/CourseSummary';\r\n\r\nimport './CoursesList.css';\r\nimport CreateCourseModal from './CreateCourseModal/CreateCourseModal';\r\n\r\nexport const getCurrentPeriod = () => {\r\n  const date = new Date();\r\n  const year = date.getUTCFullYear();\r\n  const month = date.getUTCMonth();\r\n\r\n  let letter: string;\r\n\r\n  if (month >= 0 && month <= 4) {\r\n    letter = 'A';\r\n  } else if (month > 4 && month <= 8) {\r\n    letter = 'B';\r\n  } else if (month > 8 && month <= 12) {\r\n    letter = 'C';\r\n  }\r\n\r\n  return `${year}-${letter}`;\r\n};\r\n\r\nexport const getPeriods = () => {\r\n  const date = new Date();\r\n\r\n  if (date.getUTCMonth() <= 4) {\r\n    return [\r\n      date.getUTCFullYear() - 1 + '-C',\r\n      date.getUTCFullYear() + '-A',\r\n      date.getUTCFullYear() + '-B',\r\n    ];\r\n  } else if (date.getUTCMonth() <= 8) {\r\n    return [\r\n      date.getUTCFullYear() + '-A',\r\n      date.getUTCFullYear() + '-B',\r\n      date.getUTCFullYear() + '-C',\r\n    ];\r\n  } else if (date.getUTCMonth() <= 12) {\r\n    return [\r\n      date.getUTCFullYear() + '-B',\r\n      date.getUTCFullYear() + '-C',\r\n      (date.getUTCFullYear() + 1) + '-A',\r\n    ];\r\n  }\r\n};\r\n\r\nexport default () => {\r\n  const currentUser = useSelector((state: AppState) => state.auth.currentUser);\r\n  const currentCourses = useSelector(\r\n    (state: AppState) => state.courses.currentCourses\r\n  );\r\n  const loading = useSelector((state: AppState) => state.courses.loading);\r\n  const [selectedPeriod, setSelectedPeriod] = useState(getCurrentPeriod());\r\n  const [showCourseModal, setShowCourseModal] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const closeModal = useCallback(() => {\r\n    setShowCourseModal(false);\r\n  }, [setShowCourseModal]);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      courseActions.searchCoursesAction({\r\n        userType: currentUser.type,\r\n        period: selectedPeriod,\r\n      })\r\n    );\r\n  }, [dispatch, currentUser, selectedPeriod]);\r\n\r\n  if (loading) {\r\n    return <Loader size='lg' content='Cargando...' />;\r\n  }\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <h1>\r\n          Cursos{' '}\r\n          {currentUser.type === 'professor' ? (\r\n            <>\r\n              &bull;{' '}\r\n              <Button onClick={() => setShowCourseModal(true)}>\r\n                Agregar curso\r\n              </Button>\r\n            </>\r\n          ) : null}\r\n        </h1>\r\n        <RadioGroup inline onChange={setSelectedPeriod} value={selectedPeriod}>\r\n          {getPeriods().map((x, index) => <Radio key={x} value={x} checked={x === getCurrentPeriod()}>{x}</Radio>)}\r\n        </RadioGroup>\r\n        <Divider />\r\n        {currentCourses.map((x) => (\r\n          <Col key={x._id} sm={24} md={8}>\r\n            <CourseSummary course={x}></CourseSummary>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n      <CreateCourseModal close={closeModal} show={showCourseModal} />\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Col, Container, Grid, Icon, Nav, Row } from 'rsuite';\r\nimport { getAllCourseAttachmentsAction } from '../../../store/actions/course.action';\r\nimport { AppState } from '../../../store/reducers';\r\n\r\nconst imageExtensions = ['png', 'jpg'];\r\nconst documentExtensions = ['pdf', 'docx', 'doc', '.rtf'];\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const [activeTab, setActiveTab] = useState('images');\r\n  const currentAttachments = useSelector(\r\n    (state: AppState) => state.courses.currentAttachments\r\n  );\r\n  const course = useSelector((state: AppState) => state.courses.currentCourse);\r\n\r\n  useEffect(() => {\r\n    if (!course) return;\r\n\r\n    dispatch(getAllCourseAttachmentsAction(course._id));\r\n  }, [dispatch, course]);\r\n\r\n  let selectedAttachs = [];\r\n  let component;\r\n  switch (activeTab) {\r\n    case 'images':\r\n      selectedAttachs = currentAttachments.filter((x) =>\r\n        imageExtensions.includes(x.extension.replace('.', ''))\r\n      );\r\n      component = selectedAttachs.map((x) => (\r\n        <Col\r\n          key={x._id}\r\n          sm={8}\r\n          style={{ height: 300, width: 300 }}\r\n          onClick={() => window.open(x.url)}\r\n        >\r\n          <img\r\n            src={x.url}\r\n            alt={x.title}\r\n            style={{ height: '100%', width: '100%', cursor: 'pointer' }}\r\n          ></img>\r\n        </Col>\r\n      ));\r\n      break;\r\n    case 'documents':\r\n      selectedAttachs = currentAttachments.filter((x) =>\r\n        documentExtensions.includes(x.extension.replace('.', ''))\r\n      );\r\n      component = selectedAttachs.map((x) => (\r\n        <Col\r\n          key={x._id}\r\n          sm={8}\r\n          style={{\r\n            padding: 20,\r\n            borderRadius: 10,\r\n            border: '1px solid gray',\r\n            cursor: 'pointer',\r\n          }}\r\n          onClick={() => window.open(x.url)}\r\n        >\r\n          <Icon icon='file-text-o' size='4x' style={{ marginRight: 20 }} />\r\n          <strong>{x.title}</strong>\r\n        </Col>\r\n      ));\r\n      break;\r\n    default:\r\n      selectedAttachs = currentAttachments.filter(\r\n        (x) =>\r\n          !documentExtensions.includes(x.extension.replace('.', '')) &&\r\n          !imageExtensions.includes(x.extension.replace('.', ''))\r\n      );\r\n      component = selectedAttachs.map((x) => (\r\n        <Col\r\n          key={x._id}\r\n          sm={8}\r\n          style={{\r\n            padding: 20,\r\n            borderRadius: 10,\r\n            border: '1px solid gray',\r\n            cursor: 'pointer',\r\n          }}\r\n          onClick={() => window.open(x.url)}\r\n        >\r\n          <Icon icon='file-o' size='4x' style={{ marginRight: 20 }} />\r\n          <strong>{x.title}</strong>\r\n        </Col>\r\n      ));\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Nav\r\n        justified\r\n        appearance='tabs'\r\n        activeKey={activeTab}\r\n        onSelect={setActiveTab}\r\n      >\r\n        <Nav.Item key='images' eventKey='images'>\r\n          Imagenes\r\n        </Nav.Item>\r\n        <Nav.Item key='documents' eventKey='documents'>\r\n          Documentos\r\n        </Nav.Item>\r\n        <Nav.Item key='others' eventKey='others'>\r\n          Otros\r\n        </Nav.Item>\r\n      </Nav>\r\n      <Grid style={{ margin: 0, padding: 0 }}>\r\n        <Row style={{ paddingTop: 20, paddingLeft: 0 }}>\r\n          {selectedAttachs.length === 0 ? (\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                height: 600,\r\n              }}\r\n            >\r\n              <span>No hay archivos que mostrar</span> &nbsp;&nbsp;&nbsp;\r\n              <Icon icon='meh-o' size='2x' />\r\n            </div>\r\n          ) : (\r\n            component\r\n          )}\r\n        </Row>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { ElementRef } from 'react';\r\nimport { Uploader } from 'rsuite';\r\n\r\nexport type UploaderProps = {\r\n  uploaderRef?: ElementRef<typeof Uploader>;\r\n  action: string;\r\n  onUploadSuccess?: (attachment: any) => void;\r\n};\r\n\r\nconst styles = {\r\n  lineHeight: '100px',\r\n};\r\n\r\nexport default ({ action, uploaderRef, onUploadSuccess }: UploaderProps) => {\r\n  return (\r\n    <Uploader\r\n      action={action}\r\n      draggable\r\n      autoUpload={false}\r\n      ref={uploaderRef}\r\n      multiple\r\n      withCredentials\r\n      onSuccess={(res: any) => {\r\n        onUploadSuccess && onUploadSuccess(res.attachment);\r\n      }}\r\n    >\r\n      <div style={styles}>Clic o arrastra aqui para subir</div>\r\n    </Uploader>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Col, Container, Grid, Icon, IconButton, Row } from 'rsuite';\r\nimport Input from '../../../core/components/controls/Input';\r\nimport { ExamQuestion } from '../../../core/models/Exam.model';\r\n\r\ninterface ExamQuestionProps {\r\n  question: ExamQuestion;\r\n  editable: boolean;\r\n  readonly: boolean;\r\n}\r\n\r\nexport default ({ question, editable, readonly }: ExamQuestionProps) => {\r\n  return (\r\n    <Container style={{ marginBottom: 40 }}>\r\n      <Grid>\r\n        <Row>\r\n          <Col sm={20}>\r\n            <label>\r\n              <h3>\r\n                {question.order}. {question.label}\r\n              </h3>\r\n            </label>\r\n          </Col>\r\n          <Col sm={2} smOffset={2}>\r\n            {editable ? (\r\n              <div>\r\n                <IconButton\r\n                  icon={<Icon icon='pencil' style={{ color: 'white' }} />}\r\n                  circle\r\n                />\r\n\r\n                <IconButton\r\n                  icon={<Icon icon='trash-o' style={{ color: 'red' }} />}\r\n                  circle\r\n                />\r\n              </div>\r\n            ) : null}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Input\r\n            readonly={readonly}\r\n            label='Respuesta'\r\n            disableSearch={true}\r\n            name={question.order.toString()}\r\n            type={question.type as any}\r\n            data={question.options.map((x) => ({ label: x, value: x }))}\r\n          />\r\n        </Row>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","import React, {\r\n  forwardRef,\r\n  useCallback,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Divider,\r\n  FlexboxGrid,\r\n  Form,\r\n  Schema,\r\n} from 'rsuite';\r\nimport Input from '../../core/components/controls/Input';\r\nimport {\r\n  DeliveredExam,\r\n  DeliveredExamAnswer,\r\n} from '../../core/models/DeliveredExam.model';\r\nimport {\r\n  addExamQuestion,\r\n  createDeliveredExamAction,\r\n  getExamsAction,\r\n} from '../../store/actions/exam.actions';\r\nimport { AppState } from '../../store/reducers';\r\nimport ExamQuestion from './ExamQuestion/ExamQuestion';\r\n\r\nconst { StringType, ArrayType, NumberType, BooleanType } = Schema.Types;\r\nconst model = Schema.Model({\r\n  label: StringType('Por favor ingrese un enunciado valido.')\r\n    .isRequired('Este campo es obligatorio.')\r\n    .maxLength(1000),\r\n  type: StringType('Por favor ingrese un tipo valido')\r\n    .isRequired('Este campo es obligatorio.')\r\n    .maxLength(100),\r\n  options: ArrayType('Por favor ingrese opciones validas'),\r\n  order: NumberType('Por favor ingrese un numero valido').isRequired(\r\n    'Este campo es obligatorio.'\r\n  ),\r\n});\r\n\r\nconst questionTypes = [\r\n  {\r\n    label: 'Texto',\r\n    value: 'textarea',\r\n  },\r\n  {\r\n    label: 'Seleccion multiple',\r\n    value: 'select',\r\n  },\r\n  {\r\n    label: 'Verdadero y falso',\r\n    value: 'boolean',\r\n  },\r\n];\r\n\r\ninterface ExamViewerProps {\r\n  fetchExam?: boolean;\r\n  readonly?: boolean;\r\n}\r\n\r\nexport default forwardRef(\r\n  ({ fetchExam = true, readonly }: ExamViewerProps, ref) => {\r\n    const dispatch = useDispatch();\r\n    const currentExam = useSelector(\r\n      (state: AppState) => state.exams.currentExam\r\n    );\r\n    const currentUser = useSelector(\r\n      (state: AppState) => state.auth.currentUser\r\n    );\r\n    const loading = useSelector((state: AppState) => state.exams.loading);\r\n\r\n    const initialValue = {\r\n      label: '',\r\n      type: '',\r\n      options: [],\r\n      order: 1,\r\n    };\r\n    const [formValue, setFormValue] = useState(initialValue);\r\n    const form = useRef<any>(null);\r\n\r\n    const [answerFormValue, setAnswerFormValue] = useState({});\r\n    const [answerModel, setAnswerModel] = useState({});\r\n    const answerForm = useRef<any>(null);\r\n\r\n    useEffect(() => {\r\n      const auxModel = {};\r\n\r\n      currentExam?.questions.forEach((x) => {\r\n        switch (x.type) {\r\n          case 'select':\r\n          case 'textarea':\r\n            auxModel[x.order] = StringType(\r\n              'Por favor ingrese una respuesta valida'\r\n            ).isRequired('Este campo es obligatorio.');\r\n            break;\r\n          case 'boolean':\r\n            auxModel[x.order] = BooleanType(\r\n              'Por favor ingrese una respuesta valida'\r\n            ).isRequired('Este campo es obligatorio');\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n      setAnswerModel(auxModel);\r\n    }, [currentExam]);\r\n\r\n    const { id } = useParams() as any;\r\n\r\n    useEffect(() => {\r\n      if (!fetchExam) return;\r\n      dispatch(getExamsAction(id));\r\n    }, [dispatch, id, fetchExam]);\r\n\r\n    const saveExamQuestion = useCallback(() => {\r\n      if (form.current.check()) {\r\n        if (formValue.type === 'boolean') {\r\n          dispatch(\r\n            addExamQuestion({\r\n              ...formValue,\r\n              type: 'select',\r\n              options: ['Verdadero', 'Falso'],\r\n              exam: currentExam?._id,\r\n            })\r\n          );\r\n        } else {\r\n          dispatch(\r\n            addExamQuestion({\r\n              ...formValue,\r\n              exam: currentExam?._id,\r\n            })\r\n          );\r\n        }\r\n        setFormValue(initialValue);\r\n      }\r\n    }, [dispatch, formValue, currentExam, initialValue]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      sendExamAnswers: () => {\r\n        if (answerForm.current.check() && answerFormValue !== undefined) {\r\n          const answers: DeliveredExamAnswer[] = [];\r\n          for (const key in answerFormValue) {\r\n            const element = answerFormValue[key];\r\n            answers.push({\r\n              question: parseInt(key),\r\n              value: element,\r\n            });\r\n          }\r\n          const delivered = {\r\n            exam: currentExam._id,\r\n            owner: currentUser._id,\r\n            answers,\r\n          } as DeliveredExam;\r\n          dispatch(createDeliveredExamAction(delivered));\r\n        }\r\n      },\r\n      setExamAnswers: (answers: DeliveredExamAnswer[]) => {\r\n        const answerValue = {};\r\n        answers.forEach((a) => {\r\n          answerValue[a.question] = a.value;\r\n        });\r\n\r\n        setAnswerFormValue(answerValue);\r\n      },\r\n    }));\r\n\r\n    return (\r\n      <Container>\r\n        <h1>{currentExam?.name}</h1>\r\n        <Divider />\r\n        {currentUser?.type === 'professor' && !readonly ? (\r\n          <>\r\n            <Form\r\n              ref={form}\r\n              onChange={setFormValue}\r\n              formValue={formValue}\r\n              model={model}\r\n              fluid\r\n            >\r\n              <FlexboxGrid style={{ marginBottom: 30 }}>\r\n                <FlexboxGrid.Item componentClass={Col} colspan={6} sm={8}>\r\n                  <Input\r\n                    label='Enunciado'\r\n                    name='label'\r\n                    type='textarea'\r\n                    rows={5}\r\n                  />\r\n                </FlexboxGrid.Item>\r\n                <FlexboxGrid.Item componentClass={Col} colspan={5} smOffset={1} sm={8}>\r\n                  <Input\r\n                    label='Tipo'\r\n                    name='type'\r\n                    type='select'\r\n                    data={questionTypes}\r\n                  />\r\n                </FlexboxGrid.Item>\r\n                {formValue.type === 'select' ? (\r\n                  <FlexboxGrid.Item componentClass={Col} colspan={5} smOffset={1} sm={8}>\r\n                    <Input\r\n                      label='Opciones'\r\n                      name='options'\r\n                      type='tags'\r\n                      data={[]}\r\n                      placeholder='Agregue opciones'\r\n                    />\r\n                  </FlexboxGrid.Item>\r\n                ) : null}\r\n                <FlexboxGrid.Item componentClass={Col} colspan={4} smOffset={1}>\r\n                  <Input label='Orden' name='order' type='number' />\r\n                </FlexboxGrid.Item>\r\n              </FlexboxGrid>\r\n              <FlexboxGrid>\r\n                <FlexboxGrid.Item componentClass={Col} colspan={4} sm={8}>\r\n                  <Button\r\n                    color='blue'\r\n                    onClick={saveExamQuestion}\r\n                    loading={loading}\r\n                    block\r\n                  >\r\n                    Agregar pregunta\r\n                  </Button>\r\n                </FlexboxGrid.Item>\r\n                <FlexboxGrid.Item componentClass={Col} colspan={4} smOffset={1} sm={8}>\r\n                  <Button\r\n                    color='red'\r\n                    onClick={() => setFormValue(initialValue)}\r\n                    block\r\n                  >\r\n                    Cancelar\r\n                  </Button>\r\n                </FlexboxGrid.Item>\r\n              </FlexboxGrid>\r\n            </Form>\r\n            <Divider />\r\n          </>\r\n        ) : null}\r\n        <Form\r\n          ref={answerForm}\r\n          model={Schema.Model(answerModel)}\r\n          onChange={setAnswerFormValue}\r\n          formValue={answerFormValue}\r\n          fluid\r\n        >\r\n          {currentExam?.questions\r\n            .sort((a, b) => a.order - b.order)\r\n            .map((x, index) => (\r\n              <ExamQuestion\r\n                readonly={readonly}\r\n                key={index}\r\n                question={x}\r\n                editable={currentUser?._id === currentExam.creator && !readonly}\r\n              />\r\n            ))}\r\n        </Form>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Button, Icon, Modal } from 'rsuite';\r\nimport { DeliveredExam } from '../../../../../core/models/DeliveredExam.model';\r\nimport ExamViewer from '../../../../../exams/ExamViewer/ExamViewer';\r\nimport { AppState } from '../../../../../store/reducers';\r\n\r\ninterface CreateDeliveredExamProps {\r\n  show: boolean;\r\n  close: () => void;\r\n  deliveredExam?: DeliveredExam;\r\n  readonly: boolean;\r\n}\r\n\r\nexport default (props: CreateDeliveredExamProps) => {\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const exam = useSelector((state: AppState) => state.exams.currentExam);\r\n  const loading = useSelector((state: AppState) => state.exams.loading);\r\n  const viewerRef = useRef<any>(null);\r\n\r\n  const saveExam = useCallback(() => {\r\n    setShowConfirm(false);\r\n    viewerRef.current.sendExamAnswers();\r\n    props.close();\r\n  }, [props]);\r\n\r\n  const { deliveredExam, readonly, show } = props;\r\n\r\n  useEffect(() => {\r\n    if (!deliveredExam || !readonly || !show) return;\r\n    setTimeout(\r\n      () => viewerRef.current.setExamAnswers(deliveredExam.answers),\r\n      1000\r\n    );\r\n  }, [deliveredExam, readonly, show]);\r\n\r\n  return (\r\n    <Modal show={props.show} onHide={props.close} full backdrop='static'>\r\n      <Modal.Header>\r\n        <Modal.Title>{exam?.name}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <ExamViewer fetchExam={false} ref={viewerRef} readonly={readonly} />\r\n        <Modal show={showConfirm} onHide={() => setShowConfirm(false)}>\r\n          <Modal.Header>\r\n            <Modal.Title>Confirmar submision</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Icon\r\n              icon='remind'\r\n              style={{\r\n                color: '#ffb300',\r\n                fontSize: 24,\r\n              }}\r\n            />\r\n            Una vez confirmada la submision no podra modificar sus respuestas.\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button color='red' onClick={() => setShowConfirm(false)}>\r\n              Cancelar\r\n            </Button>\r\n            <Button color='blue' onClick={saveExam} loading={loading}>\r\n              Confirmar\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button color='red' onClick={props.close}>\r\n          {props.readonly ? 'Cerrar' : 'Cancelar'}\r\n        </Button>\r\n        {props.readonly ? null : (\r\n          <Button color='blue' onClick={() => setShowConfirm(true)}>\r\n            Confirmar\r\n          </Button>\r\n        )}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n","import React, { useCallback, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, ControlLabel, Input, Modal } from 'rsuite';\r\nimport FileUploader from '../../../../../core/components/controls/FileUploader';\r\nimport environment from '../../../../../core/environment';\r\nimport { DeliveredAssignation } from '../../../../../core/models/DeliveredAssignation.model';\r\nimport { Exam } from '../../../../../core/models/Exam.model';\r\nimport { createDeliveredAssignationAction } from '../../../../../store/actions/course.action';\r\nimport { setCurrentExamAction } from '../../../../../store/actions/exam.actions';\r\nimport { AppState } from '../../../../../store/reducers';\r\nimport CreateDeliveredExamModal from '../CreateDeliveredExamModal/CreateDeliveredExamModal';\r\n\r\nexport interface CreateDeliveredModalProps {\r\n  show: boolean;\r\n  close: () => void;\r\n}\r\n\r\nexport default ({ show, close }: CreateDeliveredModalProps) => {\r\n  const [createdAttachments, setCreatedAttachments] = useState([]);\r\n  const [showExam, setShowExam] = useState(false);\r\n  const [comment, setComment] = useState('');\r\n  const dispatch = useDispatch();\r\n  const uploader = useRef<any>(null);\r\n  const currentDeliveredExam = useSelector(\r\n    (state: AppState) => state.exams.currentDeliveredExam\r\n  );\r\n  const assignation = useSelector(\r\n    (state: AppState) => state.courses.currentAssignation\r\n  );\r\n\r\n  const handleUploadSuccess = useCallback(\r\n    (newAttach) => {\r\n      if (!newAttach) {\r\n        dispatch(\r\n          createDeliveredAssignationAction({\r\n            comment,\r\n            attachments: [],\r\n            assignation: assignation?._id,\r\n            exam: currentDeliveredExam ? currentDeliveredExam._id : '',\r\n          } as DeliveredAssignation)\r\n        );\r\n        close();\r\n      } else {\r\n        const nextAttachs = [...createdAttachments, newAttach];\r\n        setCreatedAttachments(nextAttachs);\r\n        if (nextAttachs.length === uploader.current.state.fileList.length) {\r\n          dispatch(\r\n            createDeliveredAssignationAction({\r\n              attachments: nextAttachs.map((x) => x._id),\r\n              assignation: assignation?._id,\r\n              comment,\r\n              exam: currentDeliveredExam ? currentDeliveredExam._id : '',\r\n            } as DeliveredAssignation)\r\n          );\r\n          close();\r\n        }\r\n      }\r\n    },\r\n    [\r\n      dispatch,\r\n      createdAttachments,\r\n      close,\r\n      comment,\r\n      assignation,\r\n      currentDeliveredExam,\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>Entrega de asignacion</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <ControlLabel>Comentario</ControlLabel>\r\n          <Input\r\n            onChange={setComment}\r\n            value={comment}\r\n            type='textarea'\r\n            style={{ marginBottom: 20 }}\r\n          />\r\n          {assignation?.exam ? (\r\n            currentDeliveredExam ? (\r\n              <Button\r\n                onClick={() => {\r\n                  dispatch(setCurrentExamAction(assignation.exam as Exam));\r\n                  setShowExam(true);\r\n                }}\r\n                color='blue'\r\n                block\r\n                style={{ marginBottom: 20 }}\r\n              >\r\n                Ver respuestas\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                color='blue'\r\n                style={{ marginBottom: 20 }}\r\n                block\r\n                onClick={() => {\r\n                  dispatch(setCurrentExamAction(assignation.exam as Exam));\r\n                  setShowExam(true);\r\n                }}\r\n              >\r\n                Realizar examen\r\n              </Button>\r\n            )\r\n          ) : null}\r\n          <FileUploader\r\n            action={environment.API_BASE + '/attachments/upload'}\r\n            onUploadSuccess={handleUploadSuccess}\r\n            uploaderRef={uploader}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button color='red' onClick={close}>\r\n            Cancelar\r\n          </Button>\r\n          <Button\r\n            color='blue'\r\n            onClick={() => {\r\n              if (uploader.current.state.fileList.length > 0) {\r\n                uploader.current.start();\r\n              } else {\r\n                handleUploadSuccess(null);\r\n              }\r\n            }}\r\n          >\r\n            Confirmar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <CreateDeliveredExamModal\r\n        show={showExam}\r\n        close={() => setShowExam(false)}\r\n        deliveredExam={currentDeliveredExam}\r\n        readonly={!!currentDeliveredExam}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React, { useCallback, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Button,\r\n  Col,\r\n  Divider,\r\n  Grid,\r\n  Icon,\r\n  List,\r\n  Modal,\r\n  Row,\r\n  SelectPicker,\r\n} from 'rsuite';\r\nimport { Attachment } from '../../../../../core/models/Attachment.model';\r\nimport { CourseGrade } from '../../../../../core/models/CourseGrade.model';\r\nimport { DeliveredAssignation } from '../../../../../core/models/DeliveredAssignation.model';\r\nimport { DeliveredExam } from '../../../../../core/models/DeliveredExam.model';\r\nimport { Exam } from '../../../../../core/models/Exam.model';\r\nimport { User } from '../../../../../core/models/User.model';\r\nimport {\r\n  createAlumnGradeAction,\r\n  updateAlumnGradeAction,\r\n} from '../../../../../store/actions/course.action';\r\nimport { setCurrentExamAction } from '../../../../../store/actions/exam.actions';\r\nimport { AppState } from '../../../../../store/reducers';\r\nimport CreateDeliveredExamModal from '../CreateDeliveredExamModal/CreateDeliveredExamModal';\r\n\r\nexport interface DeliveredDetailModalProps {\r\n  show: boolean;\r\n  close: () => void;\r\n  delivered: DeliveredAssignation;\r\n}\r\n\r\nconst possibleGrades = [\r\n  'SI',\r\n  'NP',\r\n  '01',\r\n  '02',\r\n  '03',\r\n  '04',\r\n  '05',\r\n  '06',\r\n  '07',\r\n  '08',\r\n  '09',\r\n  '10',\r\n  '11',\r\n  '12',\r\n  '13',\r\n  '14',\r\n  '15',\r\n  '16',\r\n  '17',\r\n  '18',\r\n  '19',\r\n  '20',\r\n];\r\n\r\nexport default ({ show, close, delivered }: DeliveredDetailModalProps) => {\r\n  const dispatch = useDispatch();\r\n  const [grade, setGrade] = useState(delivered.grade?.value);\r\n  const [showExam, setShowExam] = useState(false);\r\n  const course = useSelector((state: AppState) => state.courses.currentCourse);\r\n  const currentUser = useSelector((state: AppState) => state.auth.currentUser);\r\n  const assignation = useSelector(\r\n    (state: AppState) => state.courses.currentAssignation\r\n  );\r\n\r\n  const saveGrade = useCallback(() => {\r\n    if (delivered.grade) {\r\n      dispatch(\r\n        updateAlumnGradeAction({\r\n          alumn: delivered.owner._id,\r\n          grade: (assignation.grade as CourseGrade)._id,\r\n          value: grade,\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        createAlumnGradeAction({\r\n          alumn: delivered.owner._id,\r\n          grade: (assignation.grade as CourseGrade)._id,\r\n          value: grade,\r\n        })\r\n      );\r\n    }\r\n\r\n    close();\r\n  }, [dispatch, grade, assignation, delivered, close]);\r\n\r\n  return (\r\n    <Modal show={show} onHide={close} backdrop='static'>\r\n      <Modal.Header>\r\n        <Modal.Title>\r\n          Entrega de {delivered?.owner.name} {delivered?.owner.lastname} - C.I.{' '}\r\n          {delivered?.owner.identification}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <p>{delivered?.comment}</p>\r\n\r\n        {delivered?.exam ? (\r\n          <>\r\n            <h4>Examen</h4>\r\n            <Divider />\r\n            <Button\r\n              color='blue'\r\n              block\r\n              onClick={() => {\r\n                dispatch(setCurrentExamAction(assignation.exam as Exam));\r\n                setShowExam(true);\r\n              }}\r\n            >\r\n              Ver respuestas\r\n            </Button>\r\n          </>\r\n        ) : null}\r\n        {delivered?.attachments.length === 0 ? null : (\r\n          <>\r\n            <h4>Archivos adjuntos</h4>\r\n          </>\r\n        )}\r\n        <List hover>\r\n          {(delivered?.attachments as Attachment[])?.map((x) => (\r\n            <List.Item\r\n              key={x._id}\r\n              style={{ cursor: 'pointer' }}\r\n              onClick={() => window.open(x.url)}\r\n            >\r\n              <Grid fluid>\r\n                <Row>\r\n                  <Col sm={4}>\r\n                    <Icon\r\n                      icon='file-text-o'\r\n                      style={{ cursor: 'pointer', display: 'inline' }}\r\n                      onClick={() => window.open(x.url)}\r\n                      size='4x'\r\n                    ></Icon>\r\n                  </Col>\r\n                  <Col sm={20}>\r\n                    <h5>{x.title}</h5>\r\n                  </Col>\r\n                </Row>\r\n              </Grid>\r\n            </List.Item>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <h3>Nota</h3>\r\n        {(course?.professor as User)?._id === currentUser._id ? (\r\n          <>\r\n            <SelectPicker\r\n              searchable={false}\r\n              placement='topStart'\r\n              onChange={setGrade}\r\n              value={grade}\r\n              data={possibleGrades.map((x) => ({ label: x, value: x }))}\r\n            />\r\n          </>\r\n        ) : delivered.grade ? (\r\n          <h5>{delivered.grade?.value}</h5>\r\n        ) : (\r\n          <h5>Pendiente</h5>\r\n        )}\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button color='red' onClick={close}>\r\n          Cerrar\r\n        </Button>\r\n        {(course?.professor as User)?._id === currentUser._id ? (\r\n          <Button color='blue' onClick={saveGrade} disabled={!grade}>\r\n            Guardar\r\n          </Button>\r\n        ) : null}\r\n      </Modal.Footer>\r\n      <CreateDeliveredExamModal\r\n        show={showExam}\r\n        close={() => setShowExam(false)}\r\n        readonly={true}\r\n        deliveredExam={delivered?.exam as DeliveredExam}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Icon,\r\n  List,\r\n  Row,\r\n  Tooltip,\r\n  Whisper,\r\n} from 'rsuite';\r\nimport {\r\n  deleteAssignationAction,\r\n  deleteDeliveredAssignationAction,\r\n  searchSingleAssignationAction,\r\n} from '../../../../store/actions/course.action';\r\nimport { AppState } from '../../../../store/reducers';\r\nimport moment from 'moment';\r\nimport { Attachment } from '../../../../core/models/Attachment.model';\r\nimport { User } from '../../../../core/models/User.model';\r\nimport { deleteAttachmentAction } from '../../../../store/actions/core.actions';\r\nimport CreateDeliveredModal from './CreateDeliveredModal/CreateDeliveredModal';\r\nimport { DeliveredAssignation } from '../../../../core/models/DeliveredAssignation.model';\r\nimport DeliveredDetailModal from './DeliveredDetailModal/DeliveredDetailModal';\r\nimport { CourseGrade } from '../../../../core/models/CourseGrade.model';\r\n\r\nexport default () => {\r\n  const [showDelivered, setShowDelivered] = useState(false);\r\n  const [currentDelivered, setCurrentDelivered] = useState(null);\r\n  const match = useRouteMatch();\r\n  const dispatch = useDispatch();\r\n  const course = useSelector((state: AppState) => state.courses.currentCourse);\r\n  const currentUser = useSelector((state: AppState) => state.auth.currentUser);\r\n  const loading = useSelector((state: AppState) => state.courses.loading);\r\n\r\n  const assignation = useSelector(\r\n    (state: AppState) => state.courses.currentAssignation\r\n  );\r\n  const { assignId } = match.params as any;\r\n\r\n  useEffect(() => {\r\n    if (!course) return;\r\n    dispatch(\r\n      searchSingleAssignationAction({\r\n        courseId: course?._id,\r\n        assignId,\r\n        filter:\r\n          currentUser._id !== (course.professor as User)._id\r\n            ? 'alumn'\r\n            : 'professor',\r\n      })\r\n    );\r\n  }, [dispatch, course, assignId, currentUser]);\r\n\r\n  const deleteAssignation = useCallback(() => {\r\n    assignation?.attachments.forEach((x) =>\r\n      dispatch(deleteAttachmentAction(x))\r\n    );\r\n    dispatch(deleteAssignationAction(assignId));\r\n  }, [dispatch, assignId, assignation]);\r\n\r\n  const deleteDeliveredAssignation = useCallback(\r\n    (delivered) => {\r\n      dispatch(deleteDeliveredAssignationAction(delivered));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <Grid>\r\n        <Row>\r\n          <Col md={16}>\r\n            <h2 style={{ display: 'inline', marginRight: 20 }}>\r\n              {assignation?.title} -{' '}\r\n              {(assignation?.grade as CourseGrade)?.percentage + '%'}\r\n            </h2>\r\n            {(course?.professor as User)?._id === currentUser?._id ? (\r\n              <Button color='red' onClick={deleteAssignation} loading={loading}>\r\n                Eliminar asignación\r\n              </Button>\r\n            ) : null}\r\n            <Divider />\r\n            <p>{assignation?.content}</p>\r\n            <Divider />\r\n            <h3>Archivos adjuntos</h3>\r\n            {(assignation?.attachments as Attachment[])?.map((x) => {\r\n              let icon = 'text';\r\n\r\n              if (x.contentType.includes('image')) icon = 'image';\r\n\r\n              return (\r\n                <Whisper\r\n                  key={x._id}\r\n                  placement='bottom'\r\n                  trigger='hover'\r\n                  speaker={<Tooltip>{x.title}</Tooltip>}\r\n                >\r\n                  <Icon\r\n                    onClick={() => window.open(x.url)}\r\n                    style={{ margin: 20, cursor: 'pointer' }}\r\n                    icon={`file-${icon}-o` as any}\r\n                    size='4x'\r\n                  />\r\n                </Whisper>\r\n              );\r\n            })}\r\n          </Col>\r\n          <Col md={8} style={{ paddingLeft: '20px' }}>\r\n            <h3>Fecha de entrega: </h3>\r\n            <h3>{moment(assignation?.dueDate).format('DD/MM/YYYY hh:mm a')}</h3>\r\n            {course?.alumns.find((x) => x._id === currentUser._id) ? (\r\n              <Button\r\n                onClick={() => setShowDelivered(true)}\r\n                style={{ marginBottom: 20 }}\r\n                color='blue'\r\n                disabled={\r\n                  assignation?.delivered.findIndex(\r\n                    (x) => x.owner._id === currentUser._id\r\n                  ) > -1\r\n                }\r\n              >\r\n                Entregar asignacion\r\n              </Button>\r\n            ) : null}\r\n            <h3>Entregas:</h3>\r\n            <List hover>\r\n              {(assignation?.delivered as DeliveredAssignation[])?.map((x) => (\r\n                <List.Item\r\n                  key={x._id}\r\n                  style={{ cursor: 'pointer' }}\r\n                  onClick={() => setCurrentDelivered(x)}\r\n                >\r\n                  <Grid fluid>\r\n                    <Row style={{ width: '100%' }}>\r\n                      <Col sm={x.attachments.length > 0 ? 16 : 24}>\r\n                        <strong>\r\n                          {x.owner.name} {x.owner.lastname} - (\r\n                          {x.grade ? 'Corregida' : 'Pendiente'})\r\n                        </strong>\r\n                        <br />\r\n                        {new Date(x.uploadedDate).getTime() >\r\n                        new Date(assignation.dueDate).getTime() ? (\r\n                          <span style={{ color: 'red' }}></span>\r\n                        ) : (\r\n                          moment(x.uploadedDate).format('DD/MM/YYYY hh:mm a')\r\n                        )}\r\n                        <p style={{ marginTop: 10 }}>{x.comment}</p>\r\n                      </Col>\r\n                      {x.attachments.length > 0 ? (\r\n                        <Col sm={7}>\r\n                          <Icon icon='file-text-o' size='4x' />\r\n                        </Col>\r\n                      ) : null}\r\n                      {x.owner._id === currentUser._id ||\r\n                      currentUser._id === (course.professor as User)?._id ? (\r\n                        <Col sm={1}>\r\n                          <Icon\r\n                            icon='close'\r\n                            style={{ color: 'red', cursor: 'pointer' }}\r\n                            onClick={() => deleteDeliveredAssignation(x)}\r\n                          ></Icon>\r\n                        </Col>\r\n                      ) : null}\r\n                    </Row>\r\n                  </Grid>\r\n                </List.Item>\r\n              ))}\r\n            </List>\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n      {currentDelivered ? (\r\n        <DeliveredDetailModal\r\n          delivered={currentDelivered}\r\n          show={!!currentDelivered}\r\n          close={() => setCurrentDelivered(null)}\r\n        />\r\n      ) : null}\r\n      <CreateDeliveredModal\r\n        show={showDelivered}\r\n        close={() => setShowDelivered(false)}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Col, Container, Grid, Icon, Row } from 'rsuite';\r\nimport moment from 'moment';\r\nimport { Assignation } from '../../../../core/models/Assignation.model';\r\n\r\nexport default ({ assignation }: { assignation: Assignation }) => {\r\n  return (\r\n    <Container style={{ paddingTop: '20px', paddingBottom: '20px' }}>\r\n      <Grid>\r\n        <Row>\r\n          <Col md={16}>\r\n            <Row>\r\n              <Col md={24}>\r\n                <h5>{assignation.title}</h5>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={24}>{assignation.content}</Col>\r\n            </Row>\r\n          </Col>\r\n          <Col md={3}>\r\n            Para el dia:\r\n            <br />\r\n            {moment(assignation.dueDate).format('DD/MM/YYYY')}\r\n          </Col>\r\n          <Col md={3}>\r\n            {assignation.attachments.length > 0 ? (\r\n              <Icon icon='file-zip-o' size='5x'></Icon>\r\n            ) : null}\r\n          </Col>\r\n          <Col md={2}>\r\n            <Icon icon='chevron-right' size='4x'/>\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Col,\r\n  ControlLabel,\r\n  Form,\r\n  Grid,\r\n  Modal,\r\n  Row,\r\n  Schema,\r\n} from 'rsuite';\r\nimport FileUploader from '../../../../core/components/controls/FileUploader';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  createCourseAssignationAction,\r\n  getCourseGradesAction,\r\n} from '../../../../store/actions/course.action';\r\nimport { Assignation } from '../../../../core/models/Assignation.model';\r\nimport { Course } from '../../../../core/models/Course.model';\r\nimport Input from '../../../../core/components/controls/Input';\r\nimport { AppState } from '../../../../store/reducers';\r\nimport { getExamsAction } from '../../../../store/actions/exam.actions';\r\nimport environment from '../../../../core/environment';\r\n\r\nexport interface CreateAssignationModal {\r\n  show: boolean;\r\n  close: () => void;\r\n  course: Course;\r\n}\r\n\r\nconst { StringType, DateType } = Schema.Types;\r\nconst model = Schema.Model({\r\n  title: StringType('Por favor ingrese un numero de cedula valido.')\r\n    .isRequired('Este campo es obligatorio.')\r\n    .maxLength(100),\r\n  content: StringType('Por favor ingrese una contraseña valida.')\r\n    .isRequired('Este campo es obligatorio.')\r\n    .maxLength(10000),\r\n  dueDate: DateType().isRequired('Este campo es obligatorio.'),\r\n  grade: StringType('Por favor ingrese una nota valida.').isRequired(\r\n    'Este campo es obligatorio.'\r\n  ),\r\n  exam: StringType('Por favor ingrese una nota valida.'),\r\n});\r\n\r\nexport default ({ show, close, course }: CreateAssignationModal) => {\r\n  const initialValue = {\r\n    title: '',\r\n    content: '',\r\n    dueDate: new Date(),\r\n    grade: '',\r\n    exam: '',\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const courseGrades = useSelector(\r\n    (state: AppState) => state.courses.currentCourseGrades\r\n  );\r\n  const exams = useSelector((state: AppState) => state.exams.currentExams);\r\n  const uploader = useRef(null);\r\n  const [formValue, setFormValue] = useState(initialValue);\r\n  let form = useRef<any>(null);\r\n  const [createdAttachments, setCreatedAttachments] = useState([]);\r\n  const courseId = course?._id;\r\n\r\n  useEffect(() => {\r\n    if (!course) return;\r\n    dispatch(getCourseGradesAction(course._id));\r\n    dispatch(getExamsAction());\r\n  }, [dispatch, course]);\r\n\r\n  const resetForm = useCallback(() => {\r\n    setCreatedAttachments([]);\r\n    setFormValue(initialValue);\r\n  }, [initialValue]);\r\n\r\n  const handleUploadSuccess = useCallback(\r\n    (newAttach) => {\r\n      if (!newAttach) {\r\n        dispatch(\r\n          createCourseAssignationAction({\r\n            attachments: [],\r\n            course: courseId,\r\n            ...formValue,\r\n          } as Assignation)\r\n        );\r\n        resetForm();\r\n        close();\r\n      } else {\r\n        const nextAttachs = [...createdAttachments, newAttach];\r\n        setCreatedAttachments(nextAttachs);\r\n        if (nextAttachs.length === uploader.current.state.fileList.length) {\r\n          dispatch(\r\n            createCourseAssignationAction({\r\n              attachments: nextAttachs.map((x) => x._id),\r\n              course: courseId,\r\n              ...formValue,\r\n            } as Assignation)\r\n          );\r\n          resetForm();\r\n          close();\r\n        }\r\n      }\r\n    },\r\n    [dispatch, createdAttachments, courseId, formValue, close, resetForm]\r\n  );\r\n\r\n  return (\r\n    <Modal\r\n      full\r\n      backdrop={true}\r\n      show={show}\r\n      onHide={() => {\r\n        resetForm();\r\n        close();\r\n      }}\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title>Crear nueva asignacion</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form\r\n          ref={form}\r\n          fluid\r\n          onChange={(formValue) => setFormValue(formValue as any)}\r\n          formValue={formValue}\r\n          model={model}\r\n        >\r\n          <Grid>\r\n            <Row style={{ marginBottom: 20 }}>\r\n              <Input label='Titulo de la asignación' name='title' />\r\n            </Row>\r\n            <Row style={{ marginBottom: 20 }}>\r\n              <Input label='Descripcion' name='content' type='textarea' />\r\n            </Row>\r\n            <Row style={{ marginBottom: 20 }}>\r\n              <Col sm={10}>\r\n                <Input\r\n                  label='Fecha de entrega'\r\n                  name='dueDate'\r\n                  type='date'\r\n                  allowHour={true}\r\n                />\r\n              </Col>\r\n              <Col sm={10} smOffset={4}>\r\n                <Input\r\n                  disableSearch={true}\r\n                  label='Nota relacionada'\r\n                  name='grade'\r\n                  data={courseGrades.map((x) => ({\r\n                    label: `${x.name} - ${x.percentage}%`,\r\n                    value: x._id,\r\n                  }))}\r\n                  type='select'\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row style={{ marginBottom: 20 }}>\r\n              <Col sm={10}>\r\n                <Input\r\n                  disableSearch={true}\r\n                  label='Examen relacionado'\r\n                  name='exam'\r\n                  data={exams.map((x) => ({\r\n                    label: x.name,\r\n                    value: x._id,\r\n                  }))}\r\n                  type='select'\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <ControlLabel>Archivos adjuntos</ControlLabel>\r\n              <FileUploader\r\n                action={environment.API_BASE + '/attachments/upload'}\r\n                uploaderRef={uploader}\r\n                onUploadSuccess={handleUploadSuccess}\r\n              ></FileUploader>\r\n            </Row>\r\n          </Grid>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={close} color='red'>\r\n          Cerrar\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            if (!form.current.check()) return;\r\n            if (uploader.current.state.fileList.length > 0) {\r\n              uploader.current.start();\r\n            } else {\r\n              handleUploadSuccess(null);\r\n            }\r\n          }}\r\n          appearance='primary'\r\n        >\r\n          Guardar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\nimport { Container, Divider, Icon, IconButton, List, Loader } from 'rsuite';\r\nimport { User } from '../../../../core/models/User.model';\r\nimport { searchCourseAssignationsAction } from '../../../../store/actions/course.action';\r\nimport { AppState } from '../../../../store/reducers';\r\nimport Assignation from '../Assignation/Assignation';\r\nimport CreateAssignationModal from '../CreateAssignationModal/CreateAssignationModal';\r\n\r\nexport default () => {\r\n  const [showAssignModal, setShowAssignModal] = useState(false);\r\n  const assignations = useSelector(\r\n    (state: AppState) => state.courses.currentCourseAssignations\r\n  );\r\n  const loading = useSelector((state: AppState) => state.courses.loading);\r\n  const currentUser = useSelector((state: AppState) => state.auth.currentUser);\r\n  const course = useSelector((state: AppState) => state.courses.currentCourse);\r\n  const dispatch = useDispatch();\r\n  const match = useRouteMatch();\r\n  const history = useHistory();\r\n  const { id } = match.params as any;\r\n\r\n  const closeAssignModal = useCallback(() => {\r\n    setShowAssignModal(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(searchCourseAssignationsAction(id));\r\n  }, [dispatch, id]);\r\n\r\n  return (\r\n    <Container style={{ flex: 0 }}>\r\n      <div>\r\n        <h3 style={{ color: 'white', display: 'inline' }}>Pendientes</h3>\r\n        {currentUser?._id === (course?.professor as User)?._id ? (\r\n          <>\r\n            &nbsp; &#8226; Agregar nueva asignacion\r\n            <IconButton\r\n              style={{ marginLeft: 10 }}\r\n              icon={<Icon icon='plus' />}\r\n              circle\r\n              onClick={() => setShowAssignModal(true)}\r\n            />\r\n          </>\r\n        ) : null}\r\n      </div>\r\n      <Divider />\r\n      {loading ? (\r\n        <Loader center />\r\n      ) : assignations.length === 0 ? (\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            padding: 20,\r\n          }}\r\n        >\r\n          <span>No hay asignaciones pendientes </span>&nbsp;&nbsp;&nbsp;\r\n          <Icon icon='smile-o' size='3x' />\r\n        </div>\r\n      ) : (\r\n        <List hover>\r\n          {assignations\r\n            .filter((x) => new Date().getTime() < new Date(x.dueDate).getTime())\r\n            .map((x) => (\r\n              <List.Item\r\n                key={x._id}\r\n                style={{ cursor: 'pointer' }}\r\n                onClick={() =>\r\n                  history.push(match.path.replace(':id', id) + x._id)\r\n                }\r\n              >\r\n                <Assignation assignation={x}></Assignation>\r\n              </List.Item>\r\n            ))}\r\n        </List>\r\n      )}\r\n      <br />\r\n      <h3 style={{ color: 'white', display: 'inline' }}>Finalizadas </h3>\r\n      <Divider />\r\n      {loading ? (\r\n        <Loader center />\r\n      ) : (\r\n        <List hover>\r\n          {assignations\r\n            .filter((x) => new Date().getTime() > new Date(x.dueDate).getTime())\r\n            .map((x) => (\r\n              <List.Item\r\n                key={x._id}\r\n                style={{ cursor: 'pointer' }}\r\n                onClick={() =>\r\n                  history.push(match.path.replace(':id', id) + x._id)\r\n                }\r\n              >\r\n                <Assignation assignation={x}></Assignation>\r\n              </List.Item>\r\n            ))}\r\n        </List>\r\n      )}\r\n      <CreateAssignationModal\r\n        show={showAssignModal}\r\n        close={closeAssignModal}\r\n        course={course}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport { Container } from 'rsuite';\r\nimport AssignationDetail from './AssignationDetail/AssignationDetail';\r\nimport AssignationsList from './AssignationsList/AssignationsList';\r\n\r\nexport default () => {\r\n  const match = useRouteMatch();\r\n  return (\r\n    <Container style={{ flex: 0 }}>\r\n      <Switch>\r\n        <Route path={match.path + '/'} exact component={AssignationsList} />\r\n        <Route path={match.path + '/:assignId'} exact component={AssignationDetail} />\r\n      </Switch>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useCallback, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Input,\r\n  List,\r\n  Avatar,\r\n  FlexboxGrid,\r\n  Badge,\r\n} from 'rsuite';\r\nimport { AppState } from '../../../store/reducers';\r\nimport moment from 'moment';\r\nimport { createCourseFeedAction } from '../../../store/actions/course.action';\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((state: AppState) => state.courses.loading);\r\n  const course = useSelector((state: AppState) => state.courses.currentCourse);\r\n  const [newComment, setNewComment] = useState('');\r\n\r\n  const saveComment = useCallback(() => {\r\n    dispatch(\r\n      createCourseFeedAction({ course: course._id, content: newComment })\r\n    );\r\n  }, [dispatch, newComment, course]);\r\n\r\n  return (\r\n    <Container>\r\n      <img\r\n        style={{ width: '100%', height: 200, borderRadius: 5 }}\r\n        alt='Banner'\r\n        src={'https://image.freepik.com/free-photo/back-school-education-banner-background_8087-1192.jpg'}\r\n      ></img>\r\n\r\n      <div style={{ marginTop: 20 }}>\r\n        <Input\r\n          value={newComment}\r\n          onChange={setNewComment}\r\n          placeholder='Comparte algo con la clase...'\r\n        ></Input>\r\n        <Button\r\n          color='blue'\r\n          appearance='primary'\r\n          style={{ marginTop: 20 }}\r\n          block={false}\r\n          onClick={saveComment}\r\n          loading={loading}\r\n        >\r\n          Compartir\r\n        </Button>\r\n      </div>\r\n      <Divider />\r\n      <h3>Comentarios</h3>\r\n      <List>\r\n        {course?.feed\r\n          .sort(\r\n            (a, b) =>\r\n              new Date(b.createdDate).getTime() -\r\n              new Date(a.createdDate).getTime()\r\n          )\r\n          .map((x) => (\r\n            <List.Item key={x.createdDate}>\r\n              <FlexboxGrid style={{ paddingLeft: '20px' }}>\r\n                <FlexboxGrid.Item\r\n                  colspan={4}\r\n                  style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'left',\r\n                  }}\r\n                >\r\n                  <Avatar src={x.owner?.profileImg} />\r\n                  <span>\r\n                    {x.owner?.name} - <Badge content={x.owner?.rating} />\r\n                  </span>\r\n                  <span>{moment(x.createdDate).fromNow()}</span>\r\n                </FlexboxGrid.Item>\r\n                <FlexboxGrid.Item\r\n                  colspan={16}\r\n                  style={{\r\n                    padding: 10,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'left',\r\n                  }}\r\n                >\r\n                  <p>{x.content}</p>\r\n                </FlexboxGrid.Item>\r\n              </FlexboxGrid>\r\n            </List.Item>\r\n          ))}\r\n      </List>\r\n    </Container>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Table } from 'rsuite';\r\nimport { AlumnGrade } from '../../../../core/models/AlumnGrade.model';\r\nimport { CourseGrade } from '../../../../core/models/CourseGrade.model';\r\n\r\ninterface AlumnGradesTableProps {\r\n  loading: boolean;\r\n  grades: AlumnGrade[];\r\n}\r\n\r\nexport default (props: AlumnGradesTableProps) => {\r\n  return (\r\n    <Table loading={props.loading} data={props.grades} height={500} width={1100}>\r\n      <Table.Column width={500}>\r\n        <Table.HeaderCell>Asignación</Table.HeaderCell>\r\n        <Table.Cell>\r\n          {(rowData: AlumnGrade) => {\r\n            return (rowData.grade as CourseGrade).name;\r\n          }}\r\n        </Table.Cell>\r\n      </Table.Column>\r\n\r\n      <Table.Column width={200}>\r\n        <Table.HeaderCell>Estado</Table.HeaderCell>\r\n        <Table.Cell dataKey='state' />\r\n      </Table.Column>\r\n\r\n      <Table.Column width={200}>\r\n        <Table.HeaderCell>Nota</Table.HeaderCell>\r\n        <Table.Cell dataKey='value' />\r\n      </Table.Column>\r\n      <Table.Column>\r\n        <Table.HeaderCell>Porcentaje</Table.HeaderCell>\r\n        <Table.Cell>\r\n          {(rowData: AlumnGrade) => {\r\n            return (rowData.grade as CourseGrade).percentage + '%';\r\n          }}\r\n        </Table.Cell>\r\n      </Table.Column>\r\n    </Table>\r\n  );\r\n};\r\n","import React, { useCallback, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Form, Modal, Schema } from 'rsuite';\r\nimport Input from '../../../../core/components/controls/Input';\r\nimport { createCourseGradeAction } from '../../../../store/actions/course.action';\r\nimport { AppState } from '../../../../store/reducers';\r\n\r\nexport interface CreateGradeModalProps {\r\n  show: boolean;\r\n  close: () => void;\r\n}\r\n\r\nconst { StringType, NumberType } = Schema.Types;\r\nconst model = Schema.Model({\r\n  name: StringType('Por favor ingrese un nombre valido.').isRequired(\r\n    'Este campo es obligatorio.'\r\n  ),\r\n  percentage: NumberType('Por favor ingrese un porcentaje valida.')\r\n    .isRequired('Este campo es obligatorio.')\r\n    .min(1)\r\n    .max(100),\r\n});\r\n\r\nexport default (props: CreateGradeModalProps) => {\r\n  const dispatch = useDispatch();\r\n  const course = useSelector((state: AppState) => state.courses.currentCourse);\r\n  const loading = useSelector((state: AppState) => state.courses.loading);\r\n\r\n  const [formValue, setFormValue] = useState({\r\n    name: '',\r\n    percentage: 25,\r\n  });\r\n  const form = useRef<any>(null);\r\n\r\n  const saveGrade = useCallback(() => {\r\n    if (form.current.check()) {\r\n      dispatch(\r\n        createCourseGradeAction({\r\n          ...formValue,\r\n          course: course._id,\r\n        })\r\n      );\r\n    }\r\n  }, [dispatch, formValue, course]);\r\n\r\n  return (\r\n    <Modal show={props.show} onHide={props.close}>\r\n      <Modal.Header>\r\n        <Modal.Title>Agregar nota</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form\r\n          ref={form}\r\n          fluid\r\n          onChange={(formValue) => setFormValue(formValue as any)}\r\n          formValue={formValue}\r\n          model={model}\r\n        >\r\n          <Input name='name' label='Nombre' disabled={loading} />\r\n          <Input\r\n            name='percentage'\r\n            label='Porcentaje'\r\n            type='number'\r\n            disabled={loading}\r\n          />\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button color='red' onClick={props.close}>\r\n          Cancelar\r\n        </Button>\r\n        <Button color='blue' onClick={saveGrade} loading={loading}>\r\n          Guardar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Table } from 'rsuite';\r\nimport { ProfessorGrade } from '../../../../core/models/ProfessorGrade.model';\r\nimport { AppState } from '../../../../store/reducers';\r\n\r\ninterface ProfessorGradesTableProps {\r\n  loading: boolean;\r\n  grades: ProfessorGrade[];\r\n}\r\n\r\nexport default (props: ProfessorGradesTableProps) => {\r\n  const courseGrades = useSelector(\r\n    (state: AppState) => state.courses.currentCourseGrades\r\n  );\r\n  return (\r\n    <Table\r\n      loading={props.loading}\r\n      data={props.grades.sort((a, b) => {\r\n        if(a.alumn.name < b.alumn.name) { return -1; }\r\n        if(a.alumn.name > b.alumn.name) { return 1; }\r\n        else {\r\n          if(a.alumn.lastname < b.alumn.lastname) { return -1; }\r\n          if(a.alumn.lastname > b.alumn.lastname) { return 1; }\r\n          return 0;\r\n        }\r\n      })}\r\n      height={500}\r\n      width={1000}\r\n    >\r\n      <Table.Column width={200}>\r\n        <Table.HeaderCell>Alumno</Table.HeaderCell>\r\n        <Table.Cell>\r\n          {(rowData: ProfessorGrade) => `${rowData.alumn.name} ${rowData.alumn.lastname}`}\r\n        </Table.Cell>\r\n      </Table.Column>\r\n      <Table.Column width={150}>\r\n        <Table.HeaderCell>Cedula</Table.HeaderCell>\r\n        <Table.Cell>\r\n          {(rowData: ProfessorGrade) => rowData.alumn.identification}\r\n        </Table.Cell>\r\n      </Table.Column>\r\n\r\n      {courseGrades.map((grade) => {\r\n        return (\r\n          <Table.Column width={200} key={grade._id} align='center'>\r\n            <Table.HeaderCell>{grade.name} ({grade.percentage}%)</Table.HeaderCell>\r\n            <Table.Cell>\r\n              {(rowData: any) => rowData.grades[grade.name]}\r\n            </Table.Cell>\r\n          </Table.Column>\r\n        );\r\n      })}\r\n    </Table>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button } from 'rsuite';\r\nimport { User } from '../../../core/models/User.model';\r\nimport {\r\n  getAllProfessorGradesAction,\r\n  getAlumnGradesAction,\r\n  getCourseGradesAction,\r\n} from '../../../store/actions/course.action';\r\nimport { AppState } from '../../../store/reducers';\r\nimport AlumnGradesTable from './AlumnGradesTable/AlumnGradesTable';\r\nimport CreateGradeModal from './CreateGradeModal/CreateGradeModal';\r\nimport ProfessorGradesTable from './ProfessorGradesTable/ProfessorGradesTable';\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const [showCreateGrade, setShowCreateGrade] = useState(false);\r\n  const course = useSelector((state: AppState) => state.courses.currentCourse);\r\n  const currentUser = useSelector((state: AppState) => state.auth.currentUser);\r\n  const loading = useSelector((state: AppState) => state.courses.loading);\r\n  const alumnGrades = useSelector(\r\n    (state: AppState) => state.courses.currentAlumnGrades\r\n  );\r\n  const professorGrades = useSelector(\r\n    (state: AppState) => state.courses.currentProfessorGrades\r\n  );\r\n\r\n  const isProfessor = (course?.professor as User)?._id === currentUser._id;\r\n\r\n  useEffect(() => {\r\n    if (!course || !currentUser) return;\r\n\r\n    if (isProfessor) {\r\n      dispatch(getCourseGradesAction(course._id));\r\n      dispatch(getAllProfessorGradesAction(course._id));\r\n    } else {\r\n      dispatch(\r\n        getAlumnGradesAction({\r\n          course: course._id,\r\n          alumn: currentUser._id,\r\n          filter: currentUser._id !== (course.professor as User)._id ? 'alumn' : 'professor'\r\n        })\r\n      );\r\n    }\r\n  }, [dispatch, course, currentUser, isProfessor]);\r\n\r\n  return (\r\n    <div>\r\n      <CreateGradeModal\r\n        show={showCreateGrade}\r\n        close={() => setShowCreateGrade(false)}\r\n      />\r\n      {(course?.professor as User)?._id === currentUser._id ? (\r\n        <Button\r\n          style={{ marginBottom: 20 }}\r\n          color='blue'\r\n          onClick={() => setShowCreateGrade(true)}\r\n        >\r\n          Agregar nota\r\n        </Button>\r\n      ) : null}\r\n      {isProfessor ? (\r\n        <ProfessorGradesTable loading={loading} grades={professorGrades} />\r\n      ) : (\r\n        <AlumnGradesTable loading={loading} grades={alumnGrades} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AutoComplete, Avatar, Col, Grid } from 'rsuite';\r\nimport { AppState } from '../../../store/reducers';\r\nimport { User } from '../../models/User.model';\r\nimport _ from 'lodash';\r\nimport { authActions } from '../../../store/actions';\r\n\r\nexport interface UserAutocompleteProps {\r\n  label: string;\r\n  onSelect: (user: User) => void;\r\n  filter?: (users: User[]) => User[];\r\n}\r\n\r\nexport default ({ label, onSelect, filter }: UserAutocompleteProps) => {\r\n  const dispatch = useDispatch();\r\n  const users = useSelector((state: AppState) => state.auth.autocompleteUsers);\r\n\r\n  const delayedQuery = useCallback(\r\n    _.debounce((q) => {\r\n      //setLoading(true);\r\n      dispatch(authActions.searchUsersAction(q));\r\n    }, 500),\r\n    []\r\n  );\r\n\r\n  const handleChange = useCallback(\r\n    (val) => {\r\n      val && delayedQuery(val);\r\n    },\r\n    [delayedQuery]\r\n  );\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      delayedQuery.cancel();\r\n    }\r\n  }, [delayedQuery]);\r\n  \r\n  return (\r\n    <>\r\n      <label>{label}</label>\r\n      <br/>\r\n      <AutoComplete\r\n        filterBy={(value, item) => true}\r\n        renderItem={(item) => {\r\n          const user = item as User;\r\n          return (\r\n            <div\r\n              style={{ display: 'flex', alignItems: 'center' }}\r\n              key={user._id}\r\n            >\r\n              <Grid style={{ width: '500px' }}>\r\n                <Col sm={2} md={2}>\r\n                  <Avatar circle src={user.profileImg}></Avatar>\r\n                </Col>\r\n                <Col sm={1}></Col>\r\n                <Col sm={21} md={21}>\r\n                  <p>{user.name + ' ' + user.lastname}</p>\r\n                  <p>{user.email}</p>\r\n                </Col>\r\n              </Grid>\r\n            </div>\r\n          );\r\n        }}\r\n        onChange={handleChange}\r\n        data={filter ? filter(users) : users}\r\n        onSelect={(e) => onSelect(e as User)}\r\n      ></AutoComplete>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Avatar, Col, Container, Grid, IconButton } from 'rsuite';\r\nimport { User } from '../../../../core/models/User.model';\r\n\r\nexport interface MemberProps {\r\n  user?: User;\r\n  buttonIcon?: React.ReactElement;\r\n  onButtonClick?: (args: any) => void;\r\n}\r\n\r\nexport default ({ user, buttonIcon, onButtonClick }: MemberProps) => {\r\n  const [avatarColor] = useState(\r\n    '#' + Math.floor(Math.random() * 16777215).toString(16)\r\n  );\r\n  return (\r\n    <Container style={{ width: '100%'}}>\r\n      <Grid style={{ width: '100%' }}>\r\n        <Col sm={2} md={2}>\r\n          {user?.profileImg ? (\r\n            <Avatar circle src={user?.profileImg}></Avatar>\r\n          ) : (\r\n            <Avatar circle style={{ background: avatarColor }}>\r\n              {user?.name?.substr(0, 1).toUpperCase()}\r\n              {user?.lastname?.substr(0, 1).toUpperCase()}\r\n            </Avatar>\r\n          )}\r\n        </Col>\r\n        <Col sm={1}/>\r\n        <Col sm={19} md={19}>\r\n          <h4>\r\n            {user?.name} {user?.lastname}\r\n          </h4>\r\n        </Col>\r\n        {buttonIcon ? (\r\n          <Col sm={2} md={2}>\r\n            <IconButton icon={buttonIcon} onClick={onButtonClick} />\r\n          </Col>\r\n        ) : null}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal, Button, Divider, List, Icon, Loader } from 'rsuite';\r\nimport UsersAutocomplete from '../../../../core/components/controls/UsersAutocomplete';\r\nimport { Course } from '../../../../core/models/Course.model';\r\nimport { User } from '../../../../core/models/User.model';\r\nimport {\r\n  addCourseMemberAction,\r\n  removeCourseMemberAction,\r\n} from '../../../../store/actions/course.action';\r\nimport { AppState } from '../../../../store/reducers';\r\nimport Member from '../Member/Member';\r\n\r\nimport './ManageMembersModal.css';\r\n\r\nexport interface ManageMembersModalProps {\r\n  show: boolean;\r\n  close: () => void;\r\n  course: Course | null;\r\n}\r\n\r\nexport default ({ show, close, course }: ManageMembersModalProps) => {\r\n  const loading = useSelector((state: AppState) => state.courses.loading);\r\n  const dispatch = useDispatch();\r\n  const handleUserAdd = useCallback(\r\n    (user: User) => {\r\n      dispatch(\r\n        addCourseMemberAction({\r\n          user,\r\n          course: course as Course,\r\n        })\r\n      );\r\n    },\r\n    [dispatch, course]\r\n  );\r\n\r\n  const handleUserRemove = useCallback(\r\n    (user: User) => {\r\n      dispatch(\r\n        removeCourseMemberAction({\r\n          user,\r\n          course: course as Course,\r\n        })\r\n      );\r\n    },\r\n    [dispatch, course]\r\n  );\r\n\r\n  return (\r\n    <div className='modal-container'>\r\n      <Modal overflow={true} backdrop={true} show={show} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>Miembros del curso</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <UsersAutocomplete\r\n            label='Agregar miembro'\r\n            filter={(users: User[]) =>\r\n              users.filter((x) => !course?.alumns?.find((a) => a._id === x._id) && x.type === 'alumn')\r\n            }\r\n            onSelect={handleUserAdd}\r\n          />\r\n          <Divider />\r\n          <List style={{ display: loading ? 'none' : 'initial' }}>\r\n            {course?.alumns?.map((x) => (\r\n              <List.Item key={x._id}>\r\n                <Member\r\n                  user={x}\r\n                  buttonIcon={<Icon icon='close' style={{ color: 'red' }} />}\r\n                  onButtonClick={() => handleUserRemove(x)}\r\n                ></Member>\r\n              </List.Item>\r\n            ))}\r\n          </List>\r\n          {loading ? <Loader /> : null}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={close} appearance='primary'>\r\n            Cerrar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useCallback, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Container, Divider, Icon, IconButton, List } from 'rsuite';\r\nimport { User } from '../../../core/models/User.model';\r\nimport { AppState } from '../../../store/reducers';\r\n\r\nimport './CourseMembers.css';\r\nimport ManageMembersModal from './ManageMembersModal/ManageMembersModal';\r\nimport Member from './Member/Member';\r\n\r\nexport default () => {\r\n  const course = useSelector((state: AppState) => state.courses.currentCourse);\r\n  const currentUser = useSelector((state: AppState) => state.auth.currentUser);\r\n  const [showMembersModal, setShowMembersModal] = useState(false);\r\n\r\n  const closeMembersModal = useCallback(() => {\r\n    setShowMembersModal(false);\r\n  }, [setShowMembersModal]);\r\n\r\n  return (\r\n    <Container style={{ flex: 0 }}>\r\n      <h3 style={{ color: 'white' }}>Profesor</h3>\r\n      <Divider />\r\n      <Member user={course?.professor as User}></Member>\r\n      <br />\r\n      <div>\r\n        <h3 style={{ color: 'white', display: 'inline' }}>Alumnos </h3> &#8226;{' '}\r\n        {course?.alumns?.length} estudiante (s)\r\n        {currentUser?._id === (course?.professor as User)?._id ? (\r\n          <>\r\n            &nbsp; &#8226;{' '}\r\n            <IconButton\r\n              icon={<Icon icon='cog' />}\r\n              circle\r\n              onClick={() => setShowMembersModal(true)}\r\n            />\r\n          </>\r\n        ) : null}\r\n      </div>\r\n      <br />\r\n      {course?.alumns.length === 0 ? (\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <span>Aun no hay alumnos en este curso</span>&nbsp;&nbsp;&nbsp;{' '}\r\n          <Icon icon='frown-o' size='2x' />\r\n        </div>\r\n      ) : (\r\n        <List>\r\n          {course?.alumns?.map((x) => (\r\n            <List.Item key={x._id}>\r\n              <Member user={x}></Member>\r\n            </List.Item>\r\n          ))}\r\n        </List>\r\n      )}\r\n      <ManageMembersModal\r\n        show={showMembersModal}\r\n        course={course}\r\n        close={closeMembersModal}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  Route,\r\n  Switch,\r\n  useHistory,\r\n  useLocation,\r\n  useRouteMatch,\r\n} from 'react-router-dom';\r\nimport { Container, Nav } from 'rsuite';\r\nimport { courseActions } from '../../store/actions';\r\nimport CourseArchives from './CourseArchives/CourseArchives';\r\nimport CourseAssignations from './CourseAssignations/CourseAssignations';\r\nimport CourseFeed from './CourseFeed/CourseFeed';\r\nimport CourseGrades from './CourseGrades/CourseGrades';\r\nimport CourseMembers from './CourseMembers/CourseMembers';\r\n\r\nimport './CourseView.css';\r\n\r\nexport default () => {\r\n  const [activeTab, setActiveTab] = useState('feed');\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const match = useRouteMatch();\r\n  const { id } = match.params as any;\r\n\r\n  const selectHandle = useCallback(\r\n    (eventKey: string) => {\r\n      setActiveTab(eventKey);\r\n      history.push(match.path.replace(':id', id) + '/' + eventKey);\r\n    },\r\n    [history, match.path, id, setActiveTab]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setActiveTab(\r\n      location.pathname.substr(location.pathname.lastIndexOf('/') + 1)\r\n    );\r\n  }, [location.pathname]);\r\n\r\n  useEffect(() => {\r\n    dispatch(courseActions.searchCourseByIdAction(id));\r\n  }, [dispatch, id]);\r\n\r\n  return (\r\n    <Container>\r\n      <Nav appearance='subtle' activeKey={activeTab} onSelect={selectHandle}>\r\n        <Nav.Item eventKey='feed'>Feed</Nav.Item>\r\n        <Nav.Item eventKey='assignments'>Asignaciones</Nav.Item>\r\n        <Nav.Item eventKey='members'>Miembros</Nav.Item>\r\n        <Nav.Item eventKey='grades'>Notas</Nav.Item>\r\n        <Nav.Item eventKey='archives'>Archivos</Nav.Item>\r\n      </Nav>\r\n      <Container style={{ padding: 20 }}>\r\n        <Switch>\r\n          <Route\r\n            path={match.path + '/feed'}\r\n            exact\r\n            component={CourseFeed}\r\n          ></Route>\r\n          <Route\r\n            path={match.path + '/members'}\r\n            exact\r\n            component={CourseMembers}\r\n          />\r\n          <Route\r\n            path={match.path + '/assignments'}\r\n            component={CourseAssignations}\r\n          />\r\n          <Route path={match.path + '/grades'} exact component={CourseGrades} />\r\n          <Route\r\n            path={match.path + '/archives'}\r\n            exact\r\n            component={CourseArchives}\r\n          />\r\n        </Switch>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Input, Message, Modal } from 'rsuite';\r\nimport { resetVerifiedAction, verifiyCodeAction } from '../../store/actions/auth.actions';\r\nimport { AppState } from '../../store/reducers';\r\n\r\nexport interface VerifyCodeModalProps {\r\n  onCancel: () => void;\r\n  onSuccessVerify: () => void;\r\n  phoneNumber: string;\r\n  show: boolean;\r\n  title: string;\r\n}\r\n\r\nexport default (props: VerifyCodeModalProps) => {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((state: AppState) => state.auth.loading);\r\n  const error = useSelector((state: AppState) => state.auth.error);\r\n  const isVerified = useSelector((state: AppState) => state.auth.codeVerified);\r\n  const { onSuccessVerify } = props;\r\n  useEffect(() => {\r\n    if (isVerified) {\r\n      onSuccessVerify();\r\n      dispatch(resetVerifiedAction(false));\r\n    }\r\n  }, [dispatch, isVerified, onSuccessVerify]);\r\n\r\n  const [verificationCode, setVerificationCode] = useState('');\r\n\r\n  const sendVerificationCode = useCallback(() => {\r\n      dispatch(verifiyCodeAction({\r\n        phoneNumber: props.phoneNumber,\r\n        verificationCode: verificationCode\r\n      }))\r\n  }, [dispatch, verificationCode, props.phoneNumber]);\r\n\r\n  const isValid = useCallback(() => {\r\n    let valid = true;\r\n    if (verificationCode.length !== 5) valid = false;\r\n    else if (isNaN(parseInt(verificationCode))) valid = false;\r\n    \r\n    return valid;\r\n  }, [verificationCode]);\r\n\r\n  return (\r\n    <Modal show={props.show}>\r\n      <Modal.Header>\r\n        <Modal.Title>{props.title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {error ? <Message showIcon type='error' description={error.message} /> : null}\r\n        <Input label='Codigo de verificación' onChange={setVerificationCode}/>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={props.onCancel}>Cancelar</Button>\r\n        <Button onClick={sendVerificationCode} loading={loading} disabled={!isValid()}> \r\n          Confirmar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Col, Form, Grid, Row, Schema } from 'rsuite';\r\nimport Input from '../../core/components/controls/Input';\r\n\r\nconst { StringType, DateType } = Schema.Types;\r\nconst model = Schema.Model({\r\n  email: StringType()\r\n    .isRequired('Este campo es obligatorio.')\r\n    .isEmail('El formato no es correcto.')\r\n    .maxLength(100),\r\n  name: StringType()\r\n    .isRequired('Este campo es obligatorio.')\r\n    .minLength(3)\r\n    .maxLength(100),\r\n  lastname: StringType()\r\n    .isRequired('Este campo es obligatorio.')\r\n    .minLength(3)\r\n    .maxLength(100),\r\n  birthdate: DateType().isRequired('Este campo es obligatorio.'),\r\n  phoneNumber: StringType('Por favor ingrese un numero valido')\r\n    .isRequired('Este campo es obligatorio')\r\n    .maxLength(100)\r\n    .minLength(6)\r\n    .addRule(\r\n      (value: string) => value.startsWith('+'),\r\n      'Por favor ingrese un codigo de pais valido.'\r\n    ),\r\n});\r\n\r\nexport interface BasicInfoFormProps {\r\n  value: {\r\n    email: string;\r\n    name: string;\r\n    lastname: string;\r\n    birthdate: Date;\r\n    phoneNumber: string;\r\n  };\r\n  setValue: (value) => void;\r\n}\r\n\r\nexport default ({ value, setValue }: BasicInfoFormProps) => {\r\n  return (\r\n    <>\r\n      <Form\r\n        fluid\r\n        onChange={(formValue) => setValue(formValue)}\r\n        formValue={value}\r\n        model={model}\r\n      >\r\n        <Grid fluid>\r\n          <Row style={{ marginBottom: 20 }}>\r\n            <Col sm={11}>\r\n              <Input name='name' label='Nombre' />\r\n            </Col>\r\n            <Col smOffset={2} sm={11}>\r\n              <Input name='lastname' label='Apellido' />\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ marginBottom: 20 }}>\r\n            <Col sm={11}>\r\n              <Input name='email' label='Correo electronico' />\r\n            </Col>\r\n            <Col smOffset={2} sm={11}>\r\n              <Input name='birthdate' label='Fecha de nacimiento' type='date' />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={11}>\r\n              <Input name='phoneNumber' label='Numero de telefono' />\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Col, Form, Grid, Row, Schema } from 'rsuite';\r\nimport Input from '../../core/components/controls/Input';\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\nconst model = Schema.Model({\r\n  githubLink: StringType('None'),\r\n});\r\n\r\nexport interface ExternalLinksFormProps {\r\n  value: {\r\n    githubLink: string;\r\n  };\r\n  setValue: (formValue) => void;\r\n}\r\n\r\nexport default ({ value, setValue }: ExternalLinksFormProps) => {\r\n  return (\r\n    <Form\r\n      fluid\r\n      onChange={(formValue) => setValue(formValue)}\r\n      formValue={value}\r\n      model={model}\r\n    >\r\n      <Grid fluid>\r\n        <Row>\r\n          <Col sm={24}>\r\n            <Input name='githubLink' label='Github' />\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    </Form>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  Button,\r\n  Col,\r\n  Form,\r\n  Grid,\r\n  Row,\r\n  Schema,\r\n} from 'rsuite';\r\nimport Input from '../../core/components/controls/Input';\r\nimport { AppState } from '../../store/reducers';\r\n\r\nconst { StringType, BooleanType } = Schema.Types;\r\n\r\nconst model = Schema.Model({\r\n  password: StringType('Por favor ingrese una contraseña valida.')\r\n    .isRequired('Este campo es obligatorio.')\r\n    .minLength(6),\r\n  verifyPassword: StringType('Por favor ingrese una contraseña valida.')\r\n    .isRequired('Este campo es obligatorio.')\r\n    .minLength(6)\r\n    .addRule((value, data) => {\r\n      if (value !== data.password) return false;\r\n      return true;\r\n    }, 'Las contraseñas no coinciden.'),\r\n  mfa: BooleanType('Por favor ingrese una opcion valida.'),\r\n});\r\n\r\nexport interface SecurityFormProps {\r\n  value: {\r\n    password: string;\r\n    verifyPassword: string;\r\n    mfa: boolean;\r\n  };\r\n  setValue: (formValue) => void;\r\n  saveChanges: (changes: any) => void;\r\n}\r\n\r\nexport default ({ value, setValue, saveChanges }: SecurityFormProps) => {\r\n  const loading = useSelector((state: AppState) => state.auth.loading);\r\n  return (\r\n    <Form\r\n      fluid\r\n      onChange={(formValue) => setValue(formValue)}\r\n      formValue={value}\r\n      model={model}\r\n    >\r\n      <Grid fluid>\r\n        <Row style={{ marginBottom: 20 }}>\r\n          <Col sm={24}>\r\n            <Input name='password' label='Contraseña' />\r\n          </Col>\r\n        </Row>\r\n        <Row style={{ marginBottom: 20 }}>\r\n          <Col sm={24}>\r\n            <Input name='verifyPassword' label='Verificar contraseña' />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col sm={24}>\r\n            <Button\r\n              color={value.mfa ? 'red' : 'blue'}\r\n              onClick={() => {\r\n                setValue({\r\n                  ...value,\r\n                  mfa: !value.mfa\r\n                });\r\n                saveChanges({ mfa: !value.mfa })\r\n              }}\r\n              loading={loading}\r\n            >\r\n              {value.mfa\r\n                ? 'Desactivar autenticacion de dos pasos '\r\n                : 'Activar autenticacion de dos pasos (telefono)'}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    </Form>\r\n  );\r\n};\r\n","import React, { useCallback, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Alert, Button, Container, Divider, FlexboxGrid } from 'rsuite';\r\nimport VerifyCodeModal from '../auth/VerifyCodeModal/VerifyCodeModal';\r\nimport ImageUploader from '../core/components/controls/ImageUploader';\r\nimport environment from '../core/environment';\r\nimport {\r\n  loginUserSuccessAction,\r\n  sendVerificationCodeAction,\r\n  updateUserAction,\r\n} from '../store/actions/auth.actions';\r\nimport { AppState } from '../store/reducers';\r\nimport BasicInfoForm from './BasicInfoForm/BasicInfoForm';\r\nimport ExternalLinksForm from './ExternalLinksForm/ExternalLinksForm';\r\nimport SecurityForm from './SecurityForm/SecurityForm';\r\n\r\nexport default () => {\r\n  const loading = useSelector((state: AppState) => state.auth.loading);\r\n  const dispatch = useDispatch();\r\n  const currentUser = useSelector((state: AppState) => state.auth.currentUser);\r\n  const [showVerify, setShowVerify] = useState(false);\r\n  const [basicInfoValue, setBasicInfoValue] = useState({\r\n    email: currentUser.email,\r\n    name: currentUser.name,\r\n    lastname: currentUser.lastname,\r\n    phoneNumber: currentUser.phoneNumber,\r\n    birthdate: new Date(currentUser.birthdate),\r\n  });\r\n  const [securityInfoValue, setSecurityInfoValue] = useState({\r\n    password: '',\r\n    verifyPassword: '',\r\n    mfa: currentUser.mfa,\r\n  });\r\n  const [externalLinksValue, setExternalLinksValue] = useState({\r\n    githubLink: currentUser.githubLink,\r\n  });\r\n\r\n  const sendVerificationCode = useCallback(() => {\r\n    dispatch(sendVerificationCodeAction(basicInfoValue.phoneNumber));\r\n    setShowVerify(true);\r\n  }, [dispatch, basicInfoValue.phoneNumber]);\r\n\r\n  const saveChanges = useCallback(\r\n    (changes = {}) => {\r\n      dispatch(\r\n        updateUserAction({\r\n          ...currentUser,\r\n          ...basicInfoValue,\r\n          ...externalLinksValue,\r\n          ...changes,\r\n        })\r\n      );\r\n      setShowVerify(false);\r\n    },\r\n    [dispatch, currentUser, basicInfoValue, externalLinksValue]\r\n  );\r\n\r\n  const isDifferent = useCallback(\r\n    (value) => {\r\n      let different = false;\r\n      for (const key in value) {\r\n        if (key === 'birthdate') {\r\n          different =\r\n            value[key].getTime() !== new Date(currentUser[key]).getTime();\r\n        } else {\r\n          different = value[key] !== currentUser[key];\r\n        }\r\n        if (different) break;\r\n      }\r\n\r\n      return different;\r\n    },\r\n    [currentUser]\r\n  );\r\n\r\n  const onSuccessImgUpload = useCallback(\r\n    (response) => {\r\n      Alert.success('Imagen actualizada con exito.');\r\n      dispatch(loginUserSuccessAction(response));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const onClickSave = useCallback(() => {\r\n    if (basicInfoValue.phoneNumber !== currentUser.phoneNumber) {\r\n      sendVerificationCode();\r\n    } else {\r\n      saveChanges();\r\n    }\r\n  }, [\r\n    basicInfoValue.phoneNumber,\r\n    currentUser.phoneNumber,\r\n    saveChanges,\r\n    sendVerificationCode,\r\n  ]);\r\n\r\n  return (\r\n    <Container style={{ width: '100%' }}>\r\n      <VerifyCodeModal\r\n        title='Verificacion de nuevo telefono'\r\n        show={showVerify}\r\n        onSuccessVerify={saveChanges}\r\n        phoneNumber={basicInfoValue.phoneNumber}\r\n        onCancel={() => setShowVerify(false)}\r\n      />\r\n      <FlexboxGrid style={{ height: '100%', margin: 0 }}>\r\n        <FlexboxGrid.Item\r\n          colspan={8}\r\n          style={{\r\n            height: '100%',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            flexDirection: 'column',\r\n          }}\r\n        >\r\n          <h3 style={{ marginBottom: 10 }}>Perfil</h3>\r\n          <ImageUploader\r\n            action={environment.API_BASE + '/auth/users/uploadProfileImg'}\r\n            img={currentUser.profileImg}\r\n            onSuccessUpload={onSuccessImgUpload}\r\n          ></ImageUploader>\r\n          <h4 style={{ marginTop: 20 }}>\r\n            {currentUser.name} {currentUser.lastname}\r\n          </h4>\r\n          <FlexboxGrid style={{ width: '100%', marginTop: 30 }}>\r\n            <FlexboxGrid.Item\r\n              colspan={11}\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <h5>{0}</h5>\r\n              posts\r\n            </FlexboxGrid.Item>\r\n            <FlexboxGrid.Item colspan={2} style={{ height: '100%' }}>\r\n              <Divider vertical style={{ height: '100%' }} />\r\n            </FlexboxGrid.Item>\r\n            <FlexboxGrid.Item\r\n              colspan={11}\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <h5>{currentUser.rating}</h5>\r\n              puntuacion\r\n            </FlexboxGrid.Item>\r\n          </FlexboxGrid>\r\n        </FlexboxGrid.Item>\r\n        <FlexboxGrid.Item\r\n          colspan={2}\r\n          style={{ height: '100%', display: 'flex', justifyContent: 'center' }}\r\n        >\r\n          <Divider style={{ height: '100%' }} vertical />\r\n        </FlexboxGrid.Item>\r\n        <FlexboxGrid.Item colspan={14}>\r\n          <Container\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'row',\r\n              justifyContent: 'space-between',\r\n            }}\r\n          >\r\n            <h4>Datos personales</h4>\r\n            <div>\r\n              <Button\r\n                color='red'\r\n                disabled={\r\n                  (!isDifferent(basicInfoValue) &&\r\n                    !isDifferent(externalLinksValue)) ||\r\n                  loading\r\n                }\r\n              >\r\n                Cancelar\r\n              </Button>\r\n              <Divider vertical style={{ height: '100%' }} />\r\n              <Button\r\n                color='blue'\r\n                disabled={\r\n                  !isDifferent(basicInfoValue) &&\r\n                  !isDifferent(externalLinksValue)\r\n                }\r\n                loading={loading}\r\n                onClick={onClickSave}\r\n              >\r\n                Guardar\r\n              </Button>\r\n            </div>\r\n          </Container>\r\n          <Divider />\r\n          <BasicInfoForm value={basicInfoValue} setValue={setBasicInfoValue} />\r\n          <h4 style={{ marginTop: 30 }}>Seguridad</h4>\r\n          <Divider />\r\n          <SecurityForm\r\n            value={securityInfoValue}\r\n            setValue={setSecurityInfoValue}\r\n            saveChanges={saveChanges}\r\n          />\r\n          <h4 style={{ marginTop: 30 }}>Links externos</h4>\r\n          <Divider />\r\n          <ExternalLinksForm\r\n            value={externalLinksValue}\r\n            setValue={setExternalLinksValue}\r\n          />\r\n        </FlexboxGrid.Item>\r\n      </FlexboxGrid>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useCallback, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Form, Modal, Schema } from 'rsuite';\r\nimport Input from '../../core/components/controls/Input';\r\nimport { examActions } from '../../store/actions';\r\nimport { AppState } from '../../store/reducers';\r\n\r\ninterface CreateExamModalProps {\r\n  show: boolean;\r\n  close: () => void;\r\n}\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\nconst model = Schema.Model({\r\n  name: StringType('Por favor ingrese una contraseña valida.')\r\n    .isRequired('Este campo es obligatorio.')\r\n    .minLength(6),\r\n});\r\n\r\nexport default (props: CreateExamModalProps) => {\r\n  const initialValue = {\r\n    name: '',\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((state: AppState) => state.exams.loading);\r\n\r\n  const [formValue, setFormValue] = useState(initialValue);\r\n  const form = useRef<any>(null);\r\n\r\n  const saveExam = useCallback(() => {\r\n    if (form.current.check()) {\r\n      dispatch(\r\n        examActions.createExamAction({\r\n          ...formValue,\r\n          questions: [],\r\n        })\r\n      );\r\n      setFormValue(initialValue);\r\n      props.close();\r\n    }\r\n  }, [dispatch, props, initialValue, formValue]);\r\n\r\n  return (\r\n    <Modal show={props.show} onHide={props.close}>\r\n      <Modal.Header>\r\n        <Modal.Title>Crear nuevo examen</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form\r\n          model={model}\r\n          fluid\r\n          ref={form}\r\n          onChange={setFormValue}\r\n          formValue={formValue}\r\n        >\r\n          <Input label='Nombre' name='name'></Input>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button color='red' onClick={props.close}>\r\n          Cancelar\r\n        </Button>\r\n        <Button appearance='primary' onClick={saveExam} loading={loading}>\r\n          Guardar\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Button, Divider, List, Loader } from 'rsuite';\r\nimport { getExamsAction, setCurrentExamAction } from '../../store/actions/exam.actions';\r\nimport { AppState } from '../../store/reducers';\r\nimport CreateExamModal from '../CreateExamModal/CreateExamModal';\r\n\r\nexport default () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [showCreate, setShowCreate] = useState(false);\r\n  const currentExams = useSelector(\r\n    (state: AppState) => state.exams.currentExams\r\n  );\r\n  const loading = useSelector((state: AppState) => state.exams.loading);\r\n\r\n  useEffect(() => {\r\n    dispatch(getExamsAction());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      {' '}\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        <h1 style={{ display: 'inline' }}>Examenes</h1>\r\n        <Button color='blue' onClick={() => setShowCreate(true)}>\r\n          Agregar examen\r\n        </Button>\r\n      </div>\r\n      <Divider />\r\n      <List hover>\r\n        {loading ? (\r\n          <Loader center />\r\n        ) : (\r\n          currentExams.map((x) => (\r\n            <List.Item\r\n              style={{ cursor: 'pointer' }}\r\n              key={x._id}\r\n              onClick={() => {\r\n                history.push('/app/exams/' + x._id);\r\n                dispatch(setCurrentExamAction(x));\r\n              }}\r\n            >\r\n              <h1>{x.name}</h1>\r\n            </List.Item>\r\n          ))\r\n        )}\r\n      </List>\r\n      <CreateExamModal show={showCreate} close={() => setShowCreate(false)} />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport {  Container } from 'rsuite';\r\nimport ExamViewer from './ExamViewer/ExamViewer';\r\nimport ExamsList from './ExamsList/ExamsList';\r\n\r\nexport default () => {\r\n  const match = useRouteMatch();\r\n\r\n  return (\r\n    <Container>\r\n      <Switch>\r\n        <Route path={match.path + '/saved'} exact component={ExamsList} />\r\n        <Route path={match.path + '/:id'} exact component={ExamViewer} />\r\n      </Switch>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport Navbar from './Navbar/Navbar';\r\nimport SideNav from './SideNav/SideNav';\r\n\r\nimport './MainLayout.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState } from '../../store/reducers';\r\nimport { Redirect, Route, Switch, useHistory, useRouteMatch } from 'react-router-dom';\r\nimport { Container, Sidebar } from 'rsuite';\r\nimport PostList from '../../posts/PostList/PostList';\r\nimport CreatePostPage from '../../posts/CreatePostPage/CreatePostPage';\r\nimport ViewPostPage from '../../posts/ViewPostPage/ViewPostPage';\r\nimport CoursesList from '../../courses/CoursesList/CoursesList';\r\nimport CourseView from '../../courses/CourseView/CourseView';\r\nimport ProfileView from '../../profile/ProfileView';\r\nimport ExamView from '../../exams/ExamView';\r\n\r\ninterface MainLayoutProps {}\r\n\r\nexport default (props: MainLayoutProps) => {\r\n  const history = useHistory();\r\n  const match = useRouteMatch();\r\n  const [activeKey, setActiveKey] = useState('1');\r\n\r\n  const handleSelect = (key: string) => {\r\n    setActiveKey(key);\r\n    switch (key) {\r\n      case '1':\r\n        history.push(match.path + '/');\r\n        break;\r\n      \r\n      case '2':\r\n        history.push(match.path + '/courses');\r\n        break;\r\n      \r\n      case '3':\r\n        history.push(match.path + '/exams/saved');\r\n        break;\r\n    \r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const currentUser = useSelector((state: AppState) => state.auth.currentUser);\r\n  if (!currentUser) {\r\n    history.push('/auth/login');\r\n    return <></>;\r\n  }\r\n  return (\r\n    <>\r\n      <Navbar onSelect={handleSelect}></Navbar>\r\n      <Container style={{ height: '89%' }}>\r\n        <Sidebar style={{ flex: 0, minHeight: '100vh', width: 'auto' }}>\r\n          <SideNav activeKey={activeKey} handleSelect={handleSelect}></SideNav>\r\n        </Sidebar>\r\n        <Container style={{ padding: '20px', overflow: 'auto' }}>\r\n          <Switch>\r\n            <Route path={match.path + '/posts'} exact component={PostList}/>\r\n            <Route path={match.path + '/posts/create'} exact component={CreatePostPage}/>\r\n            <Route path={match.path + '/posts/:id'} exact component={ViewPostPage}/>\r\n            <Route path={match.path + '/posts/:id/edit'} exact component={CreatePostPage}/>\r\n            <Route path={match.path + '/courses'} exact component={CoursesList} />\r\n            <Route path={match.path + '/courses/:id'} component={CourseView} />\r\n            <Route path={match.path + '/profile'} component={ProfileView} />\r\n            <Route path={match.path + '/exams'} component={ExamView} />\r\n            <Redirect from={match.path + '/'} to={match.path + '/posts'} />\r\n          </Switch>\r\n        </Container>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useRef, useCallback } from 'react';\r\nimport { Schema, Form, Button, Message } from 'rsuite';\r\nimport Input from '../../core/components/controls/Input';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState } from '../../store/reducers';\r\nimport { Link } from 'react-router-dom';\r\nimport { loginUserAction } from '../../store/actions/auth.actions';\r\n\r\nconst { StringType, NumberType } = Schema.Types;\r\nconst model = Schema.Model({\r\n  identification: NumberType(\r\n    'Por favor ingrese un numero de cedula valido.'\r\n  ).isRequired('Este campo es obligatorio.'),\r\n  password: StringType('Por favor ingrese una contraseña valida.')\r\n    .isRequired('Este campo es obligatorio.')\r\n    .minLength(6),\r\n});\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((state: AppState) => state.auth.loading);\r\n  const [formValue, setFormValue] = useState({\r\n    identification: '',\r\n    password: '',\r\n  });\r\n  const error = useSelector((state: AppState) =>\r\n    state.auth.error ? state.auth.error : null\r\n  );\r\n  let form = useRef<any>(null);\r\n  const submitLogin = useCallback(() => {\r\n    if (form.current.check()) {\r\n      dispatch(loginUserAction(formValue));\r\n    }\r\n  }, [dispatch, form, formValue]);\r\n  return (\r\n    <>\r\n      {error ? <Message showIcon type='error' description={error.message} /> : null}\r\n      <Form\r\n        ref={form}\r\n        fluid\r\n        onChange={(formValue) => setFormValue(formValue as any)}\r\n        formValue={formValue}\r\n        model={model}\r\n      >\r\n        <Input name='identification' label='Cedula' />\r\n        <Input name='password' label='Contraseña' type='password' />\r\n        <p>\r\n          <Link to='/auth/register'>Aun no tienes una cuenta ?</Link>\r\n        </p>\r\n        <p>\r\n          <Link to='/auth/passwordRecovery'>Olvidaste tu contraseña ?</Link>\r\n        </p>\r\n        <br></br>\r\n        <Button\r\n          loading={loading}\r\n          appearance='primary'\r\n          disabled={loading}\r\n          onClick={submitLogin}\r\n        >\r\n          Iniciar Sesion\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useRef, useCallback } from 'react';\r\nimport { Schema, Form, Button, Message, Grid, Row, Col } from 'rsuite';\r\nimport Input from '../../core/components/controls/Input';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState } from '../../store/reducers';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  registerUserAction,\r\n  sendVerificationCodeAction,\r\n} from '../../store/actions/auth.actions';\r\n\r\nimport './RegisterForm.css';\r\nimport VerifyCodeModal from '../VerifyCodeModal/VerifyCodeModal';\r\n\r\nconst { StringType, NumberType, DateType } = Schema.Types;\r\nconst model = Schema.Model({\r\n  identification: NumberType(\r\n    'Por favor ingrese un numero de cedula valido.'\r\n  ).isRequired('Este campo es obligatorio.'),\r\n  email: StringType()\r\n    .isRequired('Este campo es obligatorio.')\r\n    .isEmail('El formato no es correcto.')\r\n    .maxLength(100),\r\n  name: StringType()\r\n    .isRequired('Este campo es obligatorio.')\r\n    .minLength(3)\r\n    .maxLength(100),\r\n  lastname: StringType()\r\n    .isRequired('Este campo es obligatorio.')\r\n    .minLength(3)\r\n    .maxLength(100),\r\n  birthdate: DateType().isRequired('Este campo es obligatorio.'),\r\n  phoneNumber: StringType('Por favor ingrese un numero valido')\r\n    .isRequired('Este campo es obligatorio')\r\n    .maxLength(100)\r\n    .minLength(6)\r\n    .addRule(\r\n      (value: string) => value.startsWith('+'),\r\n      'Por favor ingrese un codigo de pais valido.'\r\n    ),\r\n  password: StringType('Por favor ingrese una contraseña valida.')\r\n    .isRequired('Este campo es obligatorio.')\r\n    .minLength(6),\r\n  verifyPassword: StringType('Por favor ingrese una contraseña valida.')\r\n    .isRequired('Este campo es obligatorio.')\r\n    .minLength(6)\r\n    .addRule((value, data) => {\r\n      if (value !== data.password) return false;\r\n      return true;\r\n    }, 'Las contraseñas no coinciden.'),\r\n});\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((state: AppState) => state.auth.loading);\r\n  const [showVerify, setShowVerify] = useState(false);\r\n  const [formValue, setFormValue] = useState({\r\n    identification: 0,\r\n    email: '',\r\n    name: '',\r\n    lastname: '',\r\n    birthdate: new Date(),\r\n    phoneNumber: '',\r\n    password: '',\r\n    verifyPassword: '',\r\n  });\r\n  const error = useSelector((state: AppState) =>\r\n    state.auth.error ? state.auth.error : null\r\n  );\r\n  let form = useRef<any>(null);\r\n\r\n  const sendVerificationCode = useCallback(() => {\r\n    if (!form.current.check()) return;\r\n    dispatch(sendVerificationCodeAction(formValue.phoneNumber));\r\n    setShowVerify(true);\r\n  }, [dispatch, formValue.phoneNumber]);\r\n\r\n  const submitRegister = useCallback(() => {\r\n    if (form.current.check()) {\r\n      dispatch(registerUserAction({ ...formValue, isActive: true }));\r\n    }\r\n  }, [dispatch, form, formValue]);\r\n  return (\r\n    <>\r\n      {error ? (\r\n        <Message showIcon type='error' description={error.message} />\r\n      ) : null}\r\n      <Form\r\n        ref={form}\r\n        fluid\r\n        onChange={(formValue) => setFormValue(formValue as any)}\r\n        formValue={formValue}\r\n        model={model}\r\n      >\r\n        <Grid fluid>\r\n          <Row className='grid-row'>\r\n            <Col sm={24}>\r\n              <Input name='identification' label='Cedula' />\r\n            </Col>\r\n          </Row>\r\n          <Row className='grid-row'>\r\n            <Col sm={24}>\r\n              <Input name='email' label='Correo Electronico' />\r\n            </Col>\r\n          </Row>\r\n          <Row className='grid-row'>\r\n            <Col sm={24} md={12}>\r\n              <Input name='name' label='Nombre' />\r\n            </Col>\r\n            <Col sm={24} md={12}>\r\n              <Input name='lastname' label='Apellido' />\r\n            </Col>\r\n          </Row>\r\n          <Row className='grid-row'>\r\n            <Col sm={24} md={12}>\r\n              <Input name='birthdate' label='Fecha de Nacimiento' type='date' />\r\n            </Col>\r\n            <Col sm={24} md={12}>\r\n              <Input name='phoneNumber' label='Numero de telefono' />\r\n            </Col>\r\n          </Row>\r\n          <Row className='grid-row'>\r\n            <Col sm={24} md={12}>\r\n              <Input name='password' label='Contraseña' type='password' />\r\n            </Col>\r\n            <Col sm={24} md={12}>\r\n              <Input\r\n                name='verifyPassword'\r\n                label='Repetir contraseña'\r\n                type='password'\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n        <p>\r\n          <Link to='/auth/login'>Ya tienes una cuenta ? Inicia Sesion</Link>\r\n        </p>\r\n        <br></br>\r\n        <Button\r\n          loading={loading}\r\n          appearance='primary'\r\n          disabled={loading}\r\n          onClick={sendVerificationCode}\r\n        >\r\n          Registrarse\r\n        </Button>\r\n      </Form>\r\n      <VerifyCodeModal\r\n        title='Verificacion de telefono'\r\n        onSuccessVerify={submitRegister}\r\n        show={showVerify}\r\n        phoneNumber={formValue.phoneNumber}\r\n        onCancel={() => setShowVerify(false)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useRef, useCallback } from 'react';\r\nimport { Form, Button, Message, HelpBlock, Schema } from 'rsuite';\r\nimport Input from '../../core/components/controls/Input';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppState } from '../../store/reducers';\r\nimport {\r\n  sendRecoveryCodeAction,\r\n  submitRecoveryCodeAction,\r\n  resetPasswordAction,\r\n} from '../../store/actions/auth.actions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst resetPassModel = Schema.Model({\r\n  email: Schema.Types.StringType().isEmail().isRequired(),\r\n  password: Schema.Types.StringType().isRequired('Este campo es obligatorio.'),\r\n  verifyPassword: Schema.Types.StringType(\r\n    'Por favor ingrese una contraseña valida.'\r\n  )\r\n    .isRequired('Este campo es obligatorio.')\r\n    .minLength(6)\r\n    .addRule((value, data) => {\r\n      if (value !== data.password) return false;\r\n      return true;\r\n    }, 'Las contraseñas no coinciden.'),\r\n});\r\n\r\nexport default () => {\r\n  const loading = useSelector((state: AppState) => state.auth.loading);\r\n  const error = useSelector((state: AppState) =>\r\n    state.auth.error ? state.auth.error : null\r\n  );\r\n  const currentResetEmail = useSelector(\r\n    (state: AppState) => state.auth.currentResetEmail\r\n  );\r\n  const message = useSelector((state: AppState) => state.auth.message);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [stage, setStage] = useState(1);\r\n\r\n  const [sendCodeFormValue, setSendCodeFormValue] = useState({\r\n    identification: '',\r\n  });\r\n  const [submitCodeFormValue, setSubmitCodeFormValue] = useState({\r\n    email: '',\r\n    code: '',\r\n  });\r\n  const [resetPassFormValue, setResetPassFormValue] = useState({\r\n    email: '',\r\n    password: '',\r\n    verifyPassword: '',\r\n  });\r\n\r\n  let form = useRef<any>(null);\r\n\r\n  const sendCode = useCallback(() => {\r\n    if (sendCodeFormValue.identification !== '') {\r\n      dispatch(sendRecoveryCodeAction(sendCodeFormValue.identification));\r\n    }\r\n  }, [dispatch, sendCodeFormValue]);\r\n\r\n  const submitCode = useCallback(() => {\r\n    if (submitCodeFormValue.code !== '') {\r\n      dispatch(submitRecoveryCodeAction(submitCodeFormValue));\r\n    }\r\n  }, [submitCodeFormValue, dispatch]);\r\n\r\n  const resetPassword = useCallback(() => {\r\n    if (form.current.check()) {\r\n      dispatch(resetPasswordAction(resetPassFormValue));\r\n    }\r\n  }, [form, dispatch, resetPassFormValue]);\r\n\r\n  if (currentResetEmail && stage === 1) {\r\n    setSubmitCodeFormValue({\r\n      email: currentResetEmail,\r\n      code: '',\r\n    });\r\n    setStage(2);\r\n  } else if (message !== '' && stage === 2) {\r\n    setResetPassFormValue({\r\n      email: currentResetEmail,\r\n      password: '',\r\n      verifyPassword: '',\r\n    });\r\n    setStage(3);\r\n  }\r\n\r\n  switch (stage) {\r\n    case 1:\r\n      return (\r\n        <>\r\n          {error ? (\r\n            <Message showIcon type='error' description={error.message} />\r\n          ) : null}\r\n          <Form\r\n            ref={form}\r\n            fluid\r\n            onChange={(formValue) => setSendCodeFormValue(formValue as any)}\r\n            formValue={sendCodeFormValue}\r\n          >\r\n            <Input name='identification' label='Cedula' />\r\n            <HelpBlock>\r\n              Ingresa tu cedula y enviaremos un codigo a tu correo electronico\r\n              asociado que te servirá para recuperar tu contraseña.\r\n            </HelpBlock>\r\n            <br></br>\r\n            <Button\r\n              loading={loading}\r\n              appearance='primary'\r\n              disabled={loading}\r\n              onClick={sendCode}\r\n            >\r\n              Solicitar Codigo\r\n            </Button>\r\n          </Form>\r\n        </>\r\n      );\r\n    case 2:\r\n      return (\r\n        <>\r\n          <Message\r\n            showIcon\r\n            type='warning'\r\n            description='No recargues ni dejes esta pagina!'\r\n          />\r\n          {error ? (\r\n            <Message showIcon type='error' description={error.message} />\r\n          ) : null}\r\n          <Form\r\n            ref={form}\r\n            fluid\r\n            onChange={(formValue) => setSubmitCodeFormValue(formValue as any)}\r\n            formValue={submitCodeFormValue}\r\n          >\r\n            <Input name='code' label='Codigo de recuperación' />\r\n\r\n            <HelpBlock>\r\n              Ingresa el codigo que te hemos enviado al correo para recuperar tu\r\n              contraseña.\r\n            </HelpBlock>\r\n            <br></br>\r\n            <Button\r\n              loading={loading}\r\n              appearance='primary'\r\n              disabled={loading}\r\n              onClick={submitCode}\r\n            >\r\n              Enviar Codigo\r\n            </Button>\r\n          </Form>\r\n        </>\r\n      );\r\n    case 3:\r\n      return (\r\n        <>\r\n          {message ? (\r\n            <Message\r\n              showIcon\r\n              type='success'\r\n              description={\r\n                <p>\r\n                  {message}\r\n                  <br />\r\n                  {message.includes('recuperado') ? <Link to=\"/auth/login\">Ir a la pagina de login</Link> : null}\r\n                </p>\r\n              }\r\n            />\r\n          ) : null}\r\n          {error ? (\r\n            <Message showIcon type='error' description={error.message} />\r\n          ) : null}\r\n          <Form\r\n            ref={form}\r\n            fluid\r\n            onChange={(formValue) => setResetPassFormValue(formValue as any)}\r\n            formValue={resetPassFormValue}\r\n            model={resetPassModel}\r\n          >\r\n            <Input name='password' label='Nueva contraseña' type='password' />\r\n            <Input\r\n              name='verifyPassword'\r\n              label='Repetir nueva contraseña'\r\n              type='password'\r\n            />\r\n\r\n            <HelpBlock>\r\n              Ingresa el codigo que te hemos enviado al correo para recuperar tu\r\n              contraseña.\r\n            </HelpBlock>\r\n            <br></br>\r\n            <Button\r\n              loading={loading}\r\n              appearance='primary'\r\n              disabled={loading}\r\n              onClick={resetPassword}\r\n            >\r\n              Reestablecer contraseña\r\n            </Button>\r\n          </Form>\r\n        </>\r\n      );\r\n    default:\r\n      return <></>;\r\n  }\r\n};\r\n","import React, { useCallback, useState } from 'react';\r\nimport {\r\n  Container,\r\n  Header,\r\n  Navbar,\r\n  Content,\r\n  FlexboxGrid,\r\n  Panel,\r\n  Footer,\r\n  Icon,\r\n  IconButton,\r\n} from 'rsuite';\r\nimport {\r\n  Route,\r\n  RouteComponentProps,\r\n  Switch,\r\n  useHistory,\r\n} from 'react-router-dom';\r\nimport LoginForm from '../../auth/LoginForm/LoginForm';\r\n\r\nimport './AuthLayout.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppState } from '../../store/reducers';\r\nimport RegisterForm from '../../auth/registerForm/RegisterForm';\r\nimport PasswordRecoveryForm from '../../auth/PasswordRecoveryForm/PasswordRecoveryForm';\r\nimport VerifyCodeModal from '../../auth/VerifyCodeModal/VerifyCodeModal';\r\nimport { sendVerificationCodeAction } from '../../store/actions/auth.actions';\r\n\r\ninterface AuthLayoutProps {}\r\n\r\nexport default (props: RouteComponentProps<AuthLayoutProps>) => {\r\n  const currentUser = useSelector((state: AppState) => state.auth.currentUser);\r\n  const codeVerified = useSelector(\r\n    (state: AppState) => state.auth.codeVerified\r\n  );\r\n  const [showVerify, setShowVerify] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const sendVerificationCode = useCallback(() => {\r\n    dispatch(sendVerificationCodeAction(currentUser?.phoneNumber));\r\n  }, [dispatch, currentUser]);\r\n\r\n  if (currentUser && (!currentUser.mfa || codeVerified)) {\r\n    const history = useHistory();\r\n    history.push('/app');\r\n    return <></>;\r\n  } else if (currentUser?.mfa && !showVerify && !codeVerified) {\r\n    setShowVerify(true);\r\n    sendVerificationCode();\r\n  }\r\n\r\n  return (\r\n    <Container style={{ height: '100%', overflow: 'auto' }}>\r\n      <VerifyCodeModal\r\n        title='Autenticacion multi factor'\r\n        show={showVerify}\r\n        onCancel={() => setShowVerify(false)}\r\n        onSuccessVerify={() => {}}\r\n        phoneNumber={currentUser?.phoneNumber}\r\n      />\r\n      <Header>\r\n        <Navbar\r\n          appearance='inverse'\r\n          style={{ display: 'flex', alignItems: 'center', height: 50 }}\r\n        >\r\n          <Navbar.Header\r\n            style={{\r\n              backgroundColor: '#000066',\r\n              height: '80%',\r\n              width: 100,\r\n              borderRadius: 5,\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              marginLeft: 20,\r\n            }}\r\n          >\r\n            URUOnline\r\n          </Navbar.Header>\r\n        </Navbar>\r\n      </Header>\r\n      <Content className='auth-background'>\r\n        <FlexboxGrid justify='center' align='middle' style={{ height: '100%' }}>\r\n          <FlexboxGrid.Item colspan={12}>\r\n            <Panel\r\n              className='form-panel'\r\n              header={\r\n                <Switch>\r\n                  <Route\r\n                    exact\r\n                    path={props.match.path + '/login'}\r\n                    render={() => (\r\n                      <h1 style={{ color: 'black' }}>Iniciar Sesion</h1>\r\n                    )}\r\n                  />\r\n                  <Route\r\n                    exact\r\n                    path={props.match.path + '/register'}\r\n                    component={() => (\r\n                      <h1 style={{ color: 'black' }}>Registrarse</h1>\r\n                    )}\r\n                  />\r\n                </Switch>\r\n              }\r\n              bordered\r\n            >\r\n              <Route\r\n                exact\r\n                path={props.match.path + '/login'}\r\n                component={LoginForm}\r\n              />\r\n              <Route\r\n                exact\r\n                path={props.match.path + '/register'}\r\n                component={RegisterForm}\r\n              />\r\n              <Route\r\n                exact\r\n                path={props.match.path + '/passwordRecovery'}\r\n                component={PasswordRecoveryForm}\r\n              />\r\n            </Panel>\r\n          </FlexboxGrid.Item>\r\n        </FlexboxGrid>\r\n      </Content>\r\n      <Footer\r\n        style={{\r\n          height: 100,\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          backgroundColor: 'black',\r\n        }}\r\n      >\r\n        <IconButton\r\n          style={{ marginRight: 3, marginLeft: 3 }}\r\n          icon={<Icon icon='twitter' />}\r\n          circle\r\n          size='lg'\r\n          onClick={() => window.open('https://twitter.com/notiuru')}\r\n        />\r\n        <IconButton\r\n          style={{ marginRight: 3, marginLeft: 3 }}\r\n          icon={<Icon icon='instagram' />}\r\n          circle\r\n          size='lg'\r\n          onClick={() => window.open('https://www.instagram.com/notiuruoficial/?hl=en')}\r\n        />\r\n        <IconButton\r\n          style={{ marginRight: 3, marginLeft: 3 }}\r\n          icon={<Icon icon='desktop' />}\r\n          circle\r\n          size='lg'\r\n          onClick={() => window.open('http://uru.insiemp.com/educa/')}\r\n        />\r\n      </Footer>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\nimport './App.css';\n\nimport 'rsuite/dist/styles/rsuite-dark.css';\nimport MainLayout from './hoc/MainLayout/MainLayout';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { checkAuthenticatedAction } from './store/actions/auth.actions';\nimport { Switch, Route, Redirect, useHistory } from 'react-router-dom';\nimport AuthLayout from './hoc/AuthLayout/AuthLayout';\nimport { Loader } from 'rsuite';\nimport { AppState } from './store/reducers';\nimport 'moment/locale/es';\nimport moment from 'moment';\nimport { coreActions } from './store/actions';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const checked = useSelector(\n    (state: AppState) => state.auth.authenticatedChecked\n  );\n  const redirectUri = useSelector(\n    (state: AppState) => state.general.redirectUrl\n  );\n\n  moment.locale('es');\n  useEffect(() => {\n    dispatch(checkAuthenticatedAction());\n  }, [dispatch]);\n\n  const mainclasses = ['main-container'];\n  !checked && mainclasses.push('loader-container');\n\n  if (redirectUri) {\n    dispatch(coreActions.setRedirectAction(''));\n    history.push(redirectUri);\n  }\n  return (\n    <div className='App'>\n      <div className={mainclasses.join(' ')}>\n        {!checked ? (\n          <Loader size='lg' content='Cargando...' />\n        ) : (\n          <Switch>\n            <Redirect exact path='/' to='/auth/login' />\n            <Route path='/auth' component={AuthLayout} />\n            <Route path='/app' component={MainLayout} />\n          </Switch>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { User } from '../../core/models/User.model';\r\nimport { Action } from '../actions/action.model';\r\nimport { authActions } from '../actions';\r\nimport { ApiError } from '../../core/models/ApiError.model';\r\n\r\nexport interface AuthState {\r\n  authenticatedChecked: boolean;\r\n  currentUser: User | null;\r\n  currentResetEmail: string;\r\n  autocompleteUsers: User[];\r\n  loading: boolean;\r\n  error: ApiError | null;\r\n  codeVerified: boolean;\r\n  message: string;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  authenticatedChecked: false,\r\n  currentUser: null,\r\n  currentResetEmail: '',\r\n  autocompleteUsers: [],\r\n  loading: true,\r\n  codeVerified: false,\r\n  error: null,\r\n  message: '',\r\n};\r\n\r\nexport const authReducer = (\r\n  state: AuthState = initialState,\r\n  action: Action\r\n) => {\r\n  switch (action.type) {\r\n    case authActions.CHECK_AUTHENTICATED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case authActions.CHECK_AUTHENTICATED_SUCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentUser: action.payload,\r\n        authenticatedChecked: true,\r\n      };\r\n    case authActions.CHECK_AUTHENTICATED_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        authenticatedChecked: true,\r\n      };\r\n    case authActions.LOGIN_USER:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        currentUser: null,\r\n      };\r\n    case authActions.LOGIN_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentUser: action.payload,\r\n      };\r\n    case authActions.LOGIN_USER_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case authActions.RESET_VERIFIED: \r\n      return {\r\n        ...state,\r\n        codeVerified: action.payload,\r\n      }\r\n    case authActions.SEND_VERIFICATION_CODE:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: true,\r\n        codeVerified: false,\r\n        message: '',\r\n      };\r\n    case authActions.SEND_VERIFICATION_CODE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: false,\r\n        codeVerified: false,\r\n        message: action.payload,\r\n      };\r\n    case authActions.VERIFY_CODE:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: true,\r\n      };\r\n    case authActions.VERIFY_CODE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        loading: false,\r\n        codeVerified: true,\r\n      };\r\n    case authActions.REGISTER_USER:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        currentUser: null,\r\n        error: null,\r\n      };\r\n    case authActions.REGISTER_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentUser: action.payload,\r\n        error: null,\r\n      };\r\n    case authActions.UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case authActions.UPDATE_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentUser: action.payload,\r\n        error: null,\r\n      };\r\n    case authActions.LOGOUT_USER:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case authActions.LOGOUT_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentUser: null,\r\n      };\r\n    case authActions.SEND_RECOVERY_CODE:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n        message: '',\r\n      };\r\n    case authActions.SEND_RECOVERY_CODE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        currentResetEmail: action.payload.email,\r\n        // message: action.payload.message,\r\n      };\r\n    case authActions.SUBMIT_RECOVERY_CODE:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n        message: '',\r\n      };\r\n    case authActions.SUBMIT_RECOVERY_CODE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload.message,\r\n      };\r\n    case authActions.RESET_PASSWORD:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case authActions.RESET_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload.message,\r\n        currentResetEmail: null,\r\n      };\r\n    case authActions.SEARCH_USERS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        autocompleteUsers: [],\r\n      };\r\n    case authActions.SEARCH_USERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        autocompleteUsers: action.payload,\r\n      };\r\n    case authActions.AUTH_ACTION_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { AlumnGrade } from '../../core/models/AlumnGrade.model';\r\nimport { Assignation } from '../../core/models/Assignation.model';\r\nimport { Attachment } from '../../core/models/Attachment.model';\r\nimport { Course } from '../../core/models/Course.model';\r\nimport { CourseGrade } from '../../core/models/CourseGrade.model';\r\nimport { DeliveredAssignation } from '../../core/models/DeliveredAssignation.model';\r\nimport { ProfessorGrade } from '../../core/models/ProfessorGrade.model';\r\nimport { User } from '../../core/models/User.model';\r\nimport { courseActions } from '../actions';\r\nimport { Action } from '../actions/action.model';\r\n\r\nexport interface CoursesState {\r\n  currentCourses: Course[];\r\n  currentCourse: Course | null;\r\n  currentCourseAssignations: Assignation[];\r\n  currentCourseGrades: CourseGrade[];\r\n  currentAlumnGrades: AlumnGrade[];\r\n  currentProfessorGrades: ProfessorGrade[];\r\n  currentAssignation: Assignation;\r\n  currentAttachments: Attachment[];\r\n  error: string;\r\n  message: string;\r\n  loading: boolean;\r\n}\r\n\r\nconst initialState: CoursesState = {\r\n  currentCourses: [],\r\n  currentCourse: null,\r\n  currentCourseAssignations: [],\r\n  currentProfessorGrades: [],\r\n  currentCourseGrades: [],\r\n  currentAlumnGrades: [],\r\n  currentAttachments: [],\r\n  currentAssignation: null,\r\n  error: '',\r\n  message: '',\r\n  loading: false,\r\n};\r\n\r\nexport const courseReducer = (\r\n  state: CoursesState = initialState,\r\n  action: Action\r\n): CoursesState => {\r\n  switch (action.type) {\r\n    case courseActions.SEARCH_COURSES:\r\n      return {\r\n        ...state,\r\n        currentCourses: [],\r\n        loading: true,\r\n        error: '',\r\n      };\r\n\r\n    case courseActions.SEARCH_COURSES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentCourses: action.payload,\r\n        loading: false,\r\n      };\r\n    case courseActions.CREATE_COURSE:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case courseActions.CREATE_COURSE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentCourses: [...state.currentCourses, action.payload],\r\n      };\r\n    case courseActions.SEARCH_COURSE_BY_ID:\r\n      return {\r\n        ...state,\r\n        currentCourse: null,\r\n        loading: true,\r\n        error: '',\r\n      };\r\n    case courseActions.SEARCH_COURSE_BY_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentCourse: action.payload,\r\n        loading: false,\r\n        error: '',\r\n      };\r\n    case courseActions.ADD_COURSE_MEMBER:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n      };\r\n    case courseActions.ADD_COURSE_MEMBER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentCourse: {\r\n          ...state.currentCourse,\r\n          alumns: [action.payload, ...(state.currentCourse?.alumns as User[])],\r\n        },\r\n      };\r\n    case courseActions.REMOVE_COURSE_MEMBER:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n      };\r\n    case courseActions.REMOVE_COURSE_MEMBER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentCourse: {\r\n          ...state.currentCourse,\r\n          alumns: state.currentCourse?.alumns?.filter(\r\n            (x) => x._id !== action.payload._id\r\n          ),\r\n        },\r\n      };\r\n    case courseActions.CREATE_DELIVERED_ASSIGNATION:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n        message: '',\r\n      };\r\n    case courseActions.CREATE_DELIVERED_ASSIGNATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        message: '',\r\n        currentAssignation: {\r\n          ...state.currentAssignation,\r\n          delivered: [...state.currentAssignation.delivered, action.payload],\r\n        },\r\n      };\r\n    case courseActions.DELETE_DELIVERED_ASSIGNATION:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n        message: '',\r\n      };\r\n    case courseActions.DELETE_DELIVERED_ASSIGNATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        message: 'Se ha eliminado la entrega con exito.',\r\n        currentAssignation: {\r\n          ...state.currentAssignation,\r\n          delivered: (state.currentAssignation\r\n            .delivered as DeliveredAssignation[])?.filter(\r\n            (x) => x._id !== action.payload._id\r\n          ),\r\n        },\r\n      };\r\n    case courseActions.CREATE_COURSE_ASSIGNATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        message: 'Se ha creado la asignacion con exito.',\r\n        currentCourseAssignations: [\r\n          ...state.currentCourseAssignations,\r\n          action.payload,\r\n        ],\r\n      };\r\n    case courseActions.DELETE_ASSIGNATION:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n        message: '',\r\n      };\r\n    case courseActions.DELETE_ASSIGNATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        message: action.payload,\r\n        currentAssignation: null,\r\n      };\r\n    case courseActions.SEARCH_COURSE_ASSIGNATIONS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        currentCourseAssignations: [],\r\n      };\r\n    case courseActions.SEARCH_COURSE_ASSIGNATIONS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentCourseAssignations: action.payload,\r\n      };\r\n    case courseActions.SEARCH_SINGLE_ASSIGNATION:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        currentAssignation: null,\r\n      };\r\n    case courseActions.SEARCH_SINGLE_ASSIGNATION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        currentAssignation: action.payload,\r\n      };\r\n\r\n    case courseActions.CREATE_COURSE_GRADE:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n        message: '',\r\n      };\r\n    case courseActions.CREATE_COURSE_GRADE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        currentCourseGrades: [...state.currentCourseGrades, action.payload],\r\n      };\r\n    case courseActions.GET_COURSE_GRADES:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n        message: '',\r\n        currentCourseGrades: [],\r\n      };\r\n    case courseActions.GET_COURSE_GRADES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        currentCourseGrades: action.payload,\r\n      };\r\n    case courseActions.GET_ALL_PROFESSOR_GRADES:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        message: '',\r\n        error: '',\r\n        currentProfessorGrades: [],\r\n      };\r\n    case courseActions.GET_ALL_PROFESSOR_GRADES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        currentProfessorGrades: action.payload,\r\n      };\r\n    case courseActions.CREATE_ALUMN_GRADE:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n        message: '',\r\n      };\r\n    case courseActions.CREATE_ALUMN_GRADE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        currentAlumnGrades: [...state.currentAlumnGrades, action.payload],\r\n      };\r\n    case courseActions.GET_ALUMN_GRADES:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n        currentAlumnGrades: [],\r\n      };\r\n    case courseActions.UPDATE_ALUMN_GRADE:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n      };\r\n    case courseActions.UPDATE_ALUMN_GRADE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        currentAlumnGrades: [\r\n          ...state.currentAlumnGrades.filter(\r\n            (x) => x._id !== action.payload._id\r\n          ),\r\n          action.payload,\r\n        ],\r\n      };\r\n    case courseActions.GET_ALUMN_GRADES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentAlumnGrades: action.payload,\r\n      };\r\n    case courseActions.GET_COURSE_ATTACHMENTS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n        message: '',\r\n        currentAttachments: [],\r\n      };\r\n    case courseActions.GET_COURSE_ATTACHMENTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        message: '',\r\n        currentAttachments: action.payload,\r\n      };\r\n    case courseActions.CREATE_COURSE_FEED:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n        message: '',\r\n      };\r\n    case courseActions.CREATE_COURSE_FEED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        currentCourse: {\r\n          ...state.currentCourse,\r\n          feed: action.payload,\r\n        },\r\n      };\r\n    case courseActions.COURSE_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.message,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { coreActions } from '../actions';\r\nimport { Action } from '../actions/action.model';\r\n\r\nexport interface GeneralState {\r\n  redirectUrl: string;\r\n  loading: boolean;\r\n}\r\n\r\nconst initialState: GeneralState = {\r\n  redirectUrl: '',\r\n  loading: false,\r\n};\r\n\r\nexport const generalReducer = (\r\n  state: GeneralState = initialState,\r\n  action: Action\r\n) => {\r\n  switch (action.type) {\r\n    case coreActions.SET_REDIRECT:\r\n      return {\r\n        ...state,\r\n        redirectUrl: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { Aggregator } from '../../core/models/Aggregator.model';\r\nimport { Comment } from '../../core/models/Comment.model';\r\nimport { PagingInfo } from '../../core/models/PagingInfo.model';\r\nimport { Post } from '../../core/models/Post.model';\r\nimport { postActions } from '../actions';\r\nimport { Action } from '../actions/action.model';\r\n\r\nexport interface PostsState {\r\n  loading: boolean;\r\n  posts: Post[];\r\n  currentPost: Post | null;\r\n  currentPostComments: Comment[];\r\n  paging: PagingInfo | null;\r\n}\r\n\r\nconst initialState: PostsState = {\r\n  loading: false,\r\n  posts: [],\r\n  currentPost: null,\r\n  currentPostComments: [],\r\n  paging: null,\r\n};\r\n\r\nexport const postsReducer = (\r\n  state: PostsState = initialState,\r\n  action: Action\r\n) => {\r\n  switch (action.type) {\r\n    case postActions.SEARCH_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: [],\r\n        loading: true,\r\n        paging: null,\r\n      };\r\n    case postActions.SEARCH_POSTS_SUCCESS:\r\n      const payload: Aggregator<Post> = action.payload;\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        posts: payload.docs,\r\n        paging: payload,\r\n      };\r\n    case postActions.SEARCH_POST_BY_ID:\r\n      return {\r\n        ...state,\r\n        currentPost: null,\r\n        loading: true,\r\n      };\r\n    case postActions.SEARCH_POST_BY_ID_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentPost: action.payload,\r\n      };\r\n\r\n    case postActions.CREATE_POST_SUCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case postActions.UPVOTE_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentPost: {\r\n          ...state.currentPost,\r\n          votes:\r\n            typeof state.currentPost?.votes !== 'undefined'\r\n              ? state.currentPost?.votes + 1\r\n              : 0,\r\n          voted: true,\r\n        },\r\n      };\r\n    case postActions.DOWNVOTE_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentPost: {\r\n          ...state.currentPost,\r\n          votes:\r\n            typeof state.currentPost?.votes !== 'undefined'\r\n              ? state.currentPost?.votes - 1\r\n              : 0,\r\n          voted: false,\r\n        },\r\n      };\r\n    case postActions.SEARCH_COMMENTS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        currentPostComments: [],\r\n      };\r\n    case postActions.SEARCH_COMMENTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentPostComments: action.payload,\r\n      };\r\n    case postActions.CREATE_COMMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentPostComments: [\r\n          ...state.currentPostComments,\r\n          action.payload.payload,\r\n        ],\r\n      };\r\n    case postActions.UPVOTE_COMMENT_SUCCESS:\r\n      const index = state.currentPostComments.findIndex(\r\n        (c) => c._id === action.payload.payload\r\n      );\r\n      const updatedComments = [...state.currentPostComments];\r\n      updatedComments[index] = {\r\n        ...updatedComments[index],\r\n        votes: (updatedComments[index]?.votes as number) + 1,\r\n        voted: true,\r\n      };\r\n      return {\r\n        ...state,\r\n        currentPostComments: updatedComments,\r\n      };\r\n    case postActions.DOWNVOTE_COMMENT_SUCCESS:\r\n      const i = state.currentPostComments.findIndex(\r\n        (c) => c._id === action.payload.payload\r\n      );\r\n      const updated = [...state.currentPostComments];\r\n      updated[i] = {\r\n        ...updated[i],\r\n        votes: (updated[i]?.votes as number) - 1,\r\n        voted: false,\r\n      };\r\n      return {\r\n        ...state,\r\n        currentPostComments: updated,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { DeliveredExam } from '../../core/models/DeliveredExam.model';\r\nimport { Exam } from '../../core/models/Exam.model';\r\nimport { examActions } from '../actions';\r\nimport { Action } from '../actions/action.model';\r\n\r\nexport interface ExamsState {\r\n  currentExams: Exam[];\r\n  currentExam: Exam;\r\n  currentDeliveredExam: DeliveredExam;\r\n  loading: boolean;\r\n  error: string;\r\n  message: string;\r\n}\r\n\r\nconst initialState: ExamsState = {\r\n  currentExam: null,\r\n  currentExams: [],\r\n  currentDeliveredExam: null,\r\n  loading: false,\r\n  error: '',\r\n  message: '',\r\n};\r\n\r\nexport const examsReducer = (\r\n  state: ExamsState = initialState,\r\n  action: Action\r\n): ExamsState => {\r\n  switch (action.type) {\r\n    case examActions.CREATE_EXAM:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n        message: '',\r\n      };\r\n    case examActions.CREATE_EXAM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        currentExams: [...state.currentExams, action.payload],\r\n      };\r\n    case examActions.GET_EXAMS:\r\n      const auxState = {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n        message: '',\r\n      };\r\n      if (action.payload) auxState.currentExam = null;\r\n      else auxState.currentExams = [];\r\n      return auxState;\r\n    case examActions.GET_EXAMS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        currentExams: action.payload,\r\n        error: '',\r\n      };\r\n    case examActions.DELETE_EXAM:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n        message: '',\r\n      };\r\n    case examActions.DELETE_EXAM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        currentExams: state.currentExams.filter(\r\n          (x) => x._id !== action.payload\r\n        ),\r\n      };\r\n    case examActions.ADD_EXAM_QUESTION:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n        message: '',\r\n      };\r\n    case examActions.ADD_EXAM_QUESTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: '',\r\n        currentExam: {\r\n          ...state.currentExam,\r\n          questions: action.payload,\r\n        },\r\n      };\r\n    case examActions.CREATE_DELIVERED_EXAM:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        currentDeliveredExam: null,\r\n        error: '',\r\n      };\r\n    case examActions.CREATE_DELIVERED_EXAM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentDeliveredExam: action.payload,\r\n        loading: false,\r\n      };\r\n    case examActions.SET_CURRENT_EXAM:\r\n      return {\r\n        ...state,\r\n        currentExam: action.payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { authReducer, AuthState } from './auth.reducer';\r\nimport { courseReducer, CoursesState } from './course.reducer';\r\nimport { ExamsState } from './exams.reducer';\r\nimport { generalReducer, GeneralState } from './general.reducer';\r\nimport { postsReducer, PostsState } from './posts.reducer';\r\nimport { examsReducer } from './exams.reducer';\r\n\r\nexport interface AppState {\r\n  auth: AuthState;\r\n  posts: PostsState;\r\n  general: GeneralState;\r\n  exams: ExamsState;\r\n  courses: CoursesState\r\n}\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  posts: postsReducer,\r\n  general: generalReducer,\r\n  courses: courseReducer,\r\n  exams: examsReducer\r\n});\r\n","import axios from 'axios';\r\nimport environment from './environment';\r\n\r\n\r\nconst api = axios.create({\r\n    baseURL: environment.API_BASE\r\n});\r\n\r\napi.defaults.withCredentials = true;\r\n\r\nexport default api;","import { put } from 'redux-saga/effects';\r\nimport api from '../../core/axios';\r\nimport { Action } from '../actions/action.model';\r\nimport { authActions } from '../actions/index';\r\n\r\nexport function* checkAuthenticatedEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get('/auth');\r\n    yield put(authActions.checkAuthenticatedSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(authActions.checkAuthenticatedFailAction());\r\n  }\r\n}\r\n\r\nexport function* loginUserEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/auth/login', action.payload);\r\n    yield put(authActions.loginUserSuccessAction(data));\r\n  } catch (error) {\r\n    console.log(error);\r\n    yield put(\r\n      authActions.loginUserFailAction({\r\n        message: error.message,\r\n        stack: error.stack,\r\n        status: error.response.status,\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport function* registerUserEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/auth/register', action.payload);\r\n    yield put(authActions.registerUserSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(authActions.authActionFail(error));\r\n  }\r\n}\r\n\r\nexport function* sendVerificationCodeEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/auth/sendCode', {\r\n      phoneNumber: action.payload\r\n    });\r\n    yield put(authActions.sendVerificationCodeSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(authActions.authActionFail(error));\r\n  }\r\n}\r\n\r\nexport function* verifyCodeEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/auth/verifyCode', {\r\n      verificationCode: action.payload.verificationCode,\r\n      phoneNumber: action.payload.phoneNumber\r\n    });\r\n    yield put(authActions.verifyCodeSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(authActions.authActionFail(error));\r\n  } \r\n}\r\n\r\nexport function* updateUserEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.put('/auth/users', action.payload);\r\n    yield put(authActions.updateUserSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(authActions.authActionFail(error));\r\n  }\r\n}\r\n\r\nexport function* logoutUserEffect(action: Action) {\r\n  try {\r\n    yield api.get('/auth/logout');\r\n    yield put(authActions.logoutUserSuccessAction());\r\n  } catch (error) {\r\n    yield put(\r\n      authActions.authActionFail({\r\n        message: error.message,\r\n        stack: error.stack,\r\n        status: error.response.status,\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport function* sendRecoveryCodeEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get('/auth/passResetCode?id=' + action.payload);\r\n    yield put(authActions.sendRecoveryCodeSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(authActions.authActionFail(error.response.data));\r\n  }\r\n}\r\n\r\nexport function* submitRecoveryCodeEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/auth/passResetCode', action.payload);\r\n    yield put(authActions.submitRecoveryCodeSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(authActions.authActionFail(error.response.data));\r\n  }\r\n}\r\n\r\nexport function* resetPasswordEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/auth/resetPass', action.payload);\r\n    yield put(authActions.resetPasswordSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(authActions.authActionFail(error.response.data));\r\n  }\r\n}\r\n\r\nexport function* searchUsersEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get('/auth/users?term=' + action.payload);\r\n    yield put(authActions.searchUsersActionSuccess(data));\r\n  } catch (error) {\r\n    yield put(authActions.authActionFail(error.response.data));\r\n  }\r\n}\r\n\r\nconst authEffects = [\r\n  {\r\n    action: authActions.CHECK_AUTHENTICATED,\r\n    effect: checkAuthenticatedEffect,\r\n  },\r\n  {\r\n    action: authActions.LOGIN_USER,\r\n    effect: loginUserEffect,\r\n  },\r\n  {\r\n    action: authActions.REGISTER_USER,\r\n    effect: registerUserEffect,\r\n  },\r\n  {\r\n    action: authActions.SEND_VERIFICATION_CODE,\r\n    effect: sendVerificationCodeEffect\r\n  },\r\n  {\r\n    action: authActions.VERIFY_CODE,\r\n    effect: verifyCodeEffect\r\n  },\r\n  {\r\n    action: authActions.UPDATE_USER,\r\n    effect: updateUserEffect,\r\n  },\r\n  {\r\n    action: authActions.LOGOUT_USER,\r\n    effect: logoutUserEffect,\r\n  },\r\n  {\r\n    action: authActions.SEND_RECOVERY_CODE,\r\n    effect: sendRecoveryCodeEffect,\r\n  },\r\n  {\r\n    action: authActions.SUBMIT_RECOVERY_CODE,\r\n    effect: submitRecoveryCodeEffect,\r\n  },\r\n  {\r\n    action: authActions.RESET_PASSWORD,\r\n    effect: resetPasswordEffect,\r\n  },\r\n  {\r\n    action: authActions.SEARCH_USERS,\r\n    effect: searchUsersEffect,\r\n  },\r\n];\r\n\r\nexport default authEffects;\r\n","import { put } from 'redux-saga/effects';\r\nimport api from '../../core/axios';\r\nimport { courseActions } from '../actions';\r\nimport { Action } from '../actions/action.model';\r\nimport { setRedirectAction } from '../actions/core.actions';\r\n\r\nexport function* searchCoursesEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get(`/courses/${action.payload.userType}?period=${action.payload.period}`);\r\n    yield put(courseActions.searchCoursesSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* createCourseEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/courses', action.payload);\r\n    yield put(courseActions.createCourseSuccessAction(data.course));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n} \r\n\r\nexport function* searchCourseByIdEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get(`/courses?courseId=${action.payload}`);\r\n    yield put(courseActions.searchCourseByIdSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* addCourseMemberEffect(action: Action) {\r\n  try {\r\n    yield api.post(`/courses/members?courseId=${action.payload.course._id}&alumnId=${action.payload.user._id}`);\r\n    yield put(courseActions.addCourseMemberSucessAction(action.payload.user));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* removeCourseMemberEffect(action: Action) {\r\n  try {\r\n    yield api.delete(`/courses/members?courseId=${action.payload.course._id}&alumnId=${action.payload.user._id}`);\r\n    yield put(courseActions.removeCourseMemberSuccessAction(action.payload.user));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* searchCourseAssignationsEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get(`/courses/assignations?courseId=${action.payload}`);\r\n    yield put(courseActions.searchCourseAssignationsSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* searchSingleAssignationEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get(`/courses/assignations?courseId=${action.payload.courseId}&assignId=${action.payload.assignId}&filter=${action.payload.filter}`);\r\n    yield put(courseActions.searchSingleAssignationSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* deleteAssignationEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.delete(`/courses/assignations?assignationId=${action.payload}`);\r\n    yield put(courseActions.deleteAssignationSuccessAction(data.message));\r\n    yield put(setRedirectAction('/app/courses'))\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* createCourseAssignationEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/courses/assignations', action.payload);\r\n    yield put(courseActions.createCourseAssignationSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* createDeliveredAssignationEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/courses/deliveredAssignations', action.payload);\r\n    yield put(courseActions.createDeliveredAssignationSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* deleteDeliveredAssignationEffect(action: Action) {\r\n  try {\r\n    yield api.delete('/courses/deliveredAssignations', { data: action.payload });\r\n    yield put(courseActions.deleteDeliveredAssignationSuccessAction(action.payload));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* createCourseGradeEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/courses/grades', action.payload);\r\n    yield put(courseActions.getAllProfessorGradesAction(action.payload.course));\r\n    yield put(courseActions.createCourseGradeSuccessAction(data.grade));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* getCourseGradesEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get('/courses/grades?courseId=' + action.payload);\r\n    yield put(courseActions.getCourseGradesSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* createAlumnGradeEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/courses/grades/alumn', action.payload);\r\n    yield put(courseActions.createAlumnGradeSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* getAlumnGradesEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get(`/courses/grades/alumn?courseId=${action.payload.course}&alumnId=${action.payload.alumn}&filter=${action.payload.filter}`);\r\n    yield put(courseActions.getAlumnGradesSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* updateAlumnGradeEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.put(`/courses/grades/alumn?gradeId=${action.payload.grade}&alumnId=${action.payload.alumn}`, action.payload);\r\n    yield put(courseActions.updateAlumnGradeSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* getAllProfessorGradesEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get(`/courses/grades/professor?courseId=${action.payload}`);\r\n    yield put(courseActions.getAllProfessorGradesSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* getAllCourseAttachmentsEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get(`/courses/attachments?courseId=${action.payload}`);\r\n    yield put(courseActions.getAllCourseAttachmentsSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* createCourseFeedEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/courses/feed', action.payload);\r\n    yield put(courseActions.createCourseFeedSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(courseActions.courseFailedAction(error));\r\n  }\r\n}\r\n\r\nconst courseEffects = [\r\n  {\r\n    action: courseActions.SEARCH_COURSES,\r\n    effect: searchCoursesEffect\r\n  },\r\n  {\r\n    action: courseActions.CREATE_COURSE,\r\n    effect: createCourseEffect\r\n  },\r\n  {\r\n    action: courseActions.SEARCH_COURSE_BY_ID,\r\n    effect: searchCourseByIdEffect\r\n  },\r\n  {\r\n    action: courseActions.ADD_COURSE_MEMBER,\r\n    effect: addCourseMemberEffect\r\n  },\r\n  {\r\n    action: courseActions.REMOVE_COURSE_MEMBER,\r\n    effect: removeCourseMemberEffect\r\n  },\r\n  {\r\n    action: courseActions.SEARCH_COURSE_ASSIGNATIONS,\r\n    effect: searchCourseAssignationsEffect\r\n  },\r\n  {\r\n    action: courseActions.DELETE_ASSIGNATION,\r\n    effect: deleteAssignationEffect\r\n  },\r\n  {\r\n    action: courseActions.SEARCH_SINGLE_ASSIGNATION,\r\n    effect: searchSingleAssignationEffect\r\n  },\r\n  {\r\n    action: courseActions.CREATE_COURSE_ASSIGNATION,\r\n    effect: createCourseAssignationEffect\r\n  },\r\n  {\r\n    action: courseActions.CREATE_DELIVERED_ASSIGNATION,\r\n    effect: createDeliveredAssignationEffect\r\n  },\r\n  {\r\n    action: courseActions.DELETE_DELIVERED_ASSIGNATION,\r\n    effect: deleteDeliveredAssignationEffect\r\n  },\r\n  {\r\n    action: courseActions.CREATE_COURSE_GRADE,\r\n    effect: createCourseGradeEffect,\r\n  },\r\n  {\r\n    action: courseActions.CREATE_ALUMN_GRADE,\r\n    effect: createAlumnGradeEffect\r\n  },\r\n  {\r\n    action: courseActions.GET_ALUMN_GRADES,\r\n    effect: getAlumnGradesEffect\r\n  },\r\n  {\r\n    action: courseActions.GET_COURSE_GRADES,\r\n    effect: getCourseGradesEffect\r\n  },\r\n  {\r\n    action: courseActions.UPDATE_ALUMN_GRADE,\r\n    effect: updateAlumnGradeEffect\r\n  },\r\n  {\r\n    action: courseActions.GET_ALL_PROFESSOR_GRADES,\r\n    effect: getAllProfessorGradesEffect\r\n  },\r\n  {\r\n    action: courseActions.GET_COURSE_ATTACHMENTS,\r\n    effect: getAllCourseAttachmentsEffect\r\n  },\r\n  {\r\n    action: courseActions.CREATE_COURSE_FEED,\r\n    effect: createCourseFeedEffect\r\n  }\r\n]\r\n\r\nexport default courseEffects;\r\n","import { put } from 'redux-saga/effects';\r\nimport api from '../../core/axios';\r\nimport { examActions } from '../actions';\r\nimport { Action } from '../actions/action.model';\r\n\r\nfunction* createExamEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/exams', action.payload);\r\n    yield put(examActions.createExamSuccessAction(data.exam));\r\n  } catch (error) {\r\n    yield put(examActions.examFailAction(error));\r\n  }\r\n}\r\n\r\nfunction* getExamsEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get('/exams?id=' + action.payload);\r\n    yield put(\r\n      action.payload\r\n        ? examActions.setCurrentExamAction(data)\r\n        : examActions.getExamsSuccessAction(data)\r\n    );\r\n  } catch (error) {\r\n    yield put(examActions.examFailAction(error));\r\n  }\r\n}\r\n\r\nfunction* deleteExamEffect(action: Action) {\r\n  try {\r\n    yield api.delete('/exams', {\r\n      data: { examId: action.payload },\r\n    });\r\n    yield put(examActions.deleteExamSuccessAction(action.payload));\r\n  } catch (error) {\r\n    yield put(examActions.examFailAction(error));\r\n  }\r\n}\r\n\r\nfunction* addExamQuestionEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.put('/exams', action.payload);\r\n    yield put(examActions.addExamQuestionSuccess(data.exam.questions));\r\n  } catch (error) {\r\n    yield put(examActions.examFailAction(error));\r\n  }\r\n}\r\n\r\nfunction* createDeliveredExamEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/exams/delivered', action.payload);\r\n    yield put(examActions.createDeliveredExamSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(examActions.examFailAction(error));\r\n  }\r\n}\r\nconst examEffects = [\r\n  {\r\n    action: examActions.CREATE_EXAM,\r\n    effect: createExamEffect,\r\n  },\r\n  {\r\n    action: examActions.GET_EXAMS,\r\n    effect: getExamsEffect,\r\n  },\r\n  {\r\n    action: examActions.DELETE_EXAM,\r\n    effect: deleteExamEffect,\r\n  },\r\n  {\r\n    action: examActions.ADD_EXAM_QUESTION,\r\n    effect: addExamQuestionEffect,\r\n  },\r\n  {\r\n    action: examActions.CREATE_DELIVERED_EXAM,\r\n    effect: createDeliveredExamEffect,\r\n  },\r\n];\r\n\r\nexport default examEffects;\r\n","import api from '../../core/axios';\r\nimport { Action } from '../actions/action.model';\r\nimport { DELETE_ATTACHMENT } from '../actions/core.actions';\r\n\r\nexport function* deleteAttachmentEffect(action: Action) {\r\n  try {\r\n    yield api.delete('/attachments', { data: action.payload });\r\n  } catch (error) {}\r\n}\r\n\r\nconst generalEffects = [\r\n  {\r\n    action: DELETE_ATTACHMENT,\r\n    effect: deleteAttachmentEffect,\r\n  },\r\n];\r\n\r\nexport default generalEffects;\r\n","import { put } from 'redux-saga/effects';\r\nimport api from '../../core/axios';\r\nimport { coreActions, postActions } from '../actions';\r\nimport { Action } from '../actions/action.model';\r\n\r\nexport function* searchPostsEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get(\r\n      `/posts?page=${action.payload.page}&filter=${action.payload.filter}`\r\n    );\r\n    yield put(postActions.searchPostsSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* searchPostByIdEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get('/posts?id=' + action.payload);\r\n    yield put(postActions.searchPostByIdSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* createPostEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/posts', action.payload);\r\n    yield put(\r\n      postActions.createPostSuccessAction({\r\n        message: data.message,\r\n        payload: data.post,\r\n      })\r\n    );\r\n    yield put(coreActions.setRedirectAction('/app/posts/' + data.post._id));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* updatePost(action: Action) {\r\n  try {\r\n    const { data } = yield api.put('/posts', action.payload);\r\n    yield put(postActions.updatePostSuccessAction(data));\r\n    yield put(coreActions.setRedirectAction('/app/posts/' + action.payload._id));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* deletePostEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.delete('/posts?postId=' + action.payload);\r\n    yield put(postActions.deletePostSuccessAction(data));\r\n    yield put(coreActions.setRedirectAction('/app/posts'));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* upvotePostEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/posts/vote?parentId=' + action.payload);\r\n    yield put(postActions.upvotePostSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* downvotePostEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.delete('/posts/vote?parentId=' + action.payload);\r\n    yield put(postActions.downvotePostSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* searchCommentsEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.get('/posts/comments?postId=' + action.payload);\r\n    yield put(postActions.searchCommentsSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* createCommentEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/posts/comments', action.payload);\r\n    data.comment.votes = 0;\r\n    yield put(\r\n      postActions.createCommentSuccessAction({\r\n        message: data.message,\r\n        payload: data.comment,\r\n      })\r\n    );\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* deleteCommentEffect(action: Action) {\r\n  try {\r\n    yield api.delete(\r\n      '/post/comments?commentId=' + action.payload\r\n    );\r\n    // yield put(postActions.deleteCommentSuccessAction(data));\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* upvoteCommentEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.post('/posts/vote?parentId=' + action.payload);\r\n    yield put(\r\n      postActions.upvoteCommentSuccessAction({\r\n        ...data,\r\n        payload: action.payload,\r\n      })\r\n    );\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nexport function* downvoteCommentEffect(action: Action) {\r\n  try {\r\n    const { data } = yield api.delete('/posts/vote?parentId=' + action.payload);\r\n    yield put(\r\n      postActions.downvoteCommentSuccessAction({\r\n        ...data,\r\n        payload: action.payload,\r\n      })\r\n    );\r\n  } catch (error) {\r\n    yield put(postActions.postFailedAction(error));\r\n  }\r\n}\r\n\r\nconst postEffects = [\r\n  {\r\n    action: postActions.SEARCH_POSTS,\r\n    effect: searchPostsEffect\r\n  },\r\n  {\r\n    action: postActions.SEARCH_POST_BY_ID,\r\n    effect: searchPostByIdEffect\r\n  },\r\n  {\r\n    action: postActions.CREATE_POST,\r\n    effect: createPostEffect\r\n  },\r\n  {\r\n    action: postActions.UPDATE_POST,\r\n    effect: updatePost\r\n  },\r\n  {\r\n    action: postActions.DELETE_POST,\r\n    effect: deletePostEffect\r\n  },\r\n  {\r\n    action: postActions.UPVOTE_POST,\r\n    effect: upvotePostEffect\r\n  },\r\n  {\r\n    action: postActions.DOWNVOTE_POST,\r\n    effect: downvotePostEffect\r\n  },\r\n  {\r\n    action: postActions.SEARCH_COMMENTS,\r\n    effect: searchCommentsEffect\r\n  },\r\n  {\r\n    action: postActions.CREATE_COMMENT,\r\n    effect: createCommentEffect\r\n  },\r\n  {\r\n    action: postActions.UPVOTE_COMMENT,\r\n    effect: upvoteCommentEffect\r\n  },\r\n  {\r\n    action: postActions.DOWNVOTE_COMMENT,\r\n    effect: downvoteCommentEffect\r\n  }\r\n];\r\n\r\nexport default postEffects;\r\n","import { takeEvery } from 'redux-saga/effects';\r\nimport authEffects from './auth.effects';\r\nimport courseEffects from './course.effects';\r\nimport examEffects from './exam.effects';\r\nimport generalEffects from './general.effects';\r\nimport postEffects from './post.effects';\r\n\r\nexport function* watchAuth() {\r\n  for (let i = 0; i < authEffects.length; i++) {\r\n    const el = authEffects[i];\r\n    yield takeEvery(el.action, el.effect);\r\n  }\r\n}\r\n\r\nexport function* watchPosts() {\r\n  for (let i = 0; i < postEffects.length; i++) {\r\n    const el = postEffects[i];\r\n    yield takeEvery(el.action, el.effect);\r\n  }\r\n}\r\n\r\nexport function* watchCourses() {\r\n  for (let i = 0; i < courseEffects.length; i++) {\r\n    const el = courseEffects[i];\r\n    yield takeEvery(el.action, el.effect);\r\n  }\r\n}\r\n\r\nexport function* watchGeneral() {\r\n  for (let i = 0; i < generalEffects.length; i++) {\r\n    const el = generalEffects[i];\r\n    yield takeEvery(el.action, el.effect);\r\n  }\r\n}\r\n\r\nexport function* watchExams() {\r\n  for (let i = 0; i < examEffects.length; i++) {\r\n    const el = examEffects[i];\r\n    yield takeEvery(el.action, el.effect);\r\n  }\r\n}\r\n\r\nexport const watchers = [watchAuth, watchPosts, watchCourses, watchGeneral, watchExams];\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducer from './store/reducers';\nimport { watchers } from './store/effects';\nimport { IntlProvider } from 'rsuite';\nimport esES from 'rsuite/lib/IntlProvider/locales/es_ES';\n\nconst composeEnhancers =\n  process.env.NODE_ENV === 'development'\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null || compose;\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\n\nwatchers.forEach((watcher) => {\n  sagaMiddleware.run(watcher);\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <IntlProvider locale={esES}>\n          <App />\n        </IntlProvider>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}